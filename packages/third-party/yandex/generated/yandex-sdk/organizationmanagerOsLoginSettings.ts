// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OrganizationmanagerOsLoginSettings extends pulumi.CustomResource {
    /**
     * Get an existing OrganizationmanagerOsLoginSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrganizationmanagerOsLoginSettingsState, opts?: pulumi.CustomResourceOptions): OrganizationmanagerOsLoginSettings {
        return new OrganizationmanagerOsLoginSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/organizationmanagerOsLoginSettings:OrganizationmanagerOsLoginSettings';

    /**
     * Returns true if the given object is an instance of OrganizationmanagerOsLoginSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrganizationmanagerOsLoginSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrganizationmanagerOsLoginSettings.__pulumiType;
    }

    declare public readonly organizationId: pulumi.Output<string>;
    declare public readonly organizationmanagerOsLoginSettingsId: pulumi.Output<string>;
    declare public readonly sshCertificateSettings: pulumi.Output<outputs.OrganizationmanagerOsLoginSettingsSshCertificateSettings | undefined>;
    declare public readonly timeouts: pulumi.Output<outputs.OrganizationmanagerOsLoginSettingsTimeouts | undefined>;
    declare public readonly userSshKeySettings: pulumi.Output<outputs.OrganizationmanagerOsLoginSettingsUserSshKeySettings | undefined>;

    /**
     * Create a OrganizationmanagerOsLoginSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrganizationmanagerOsLoginSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrganizationmanagerOsLoginSettingsArgs | OrganizationmanagerOsLoginSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrganizationmanagerOsLoginSettingsState | undefined;
            resourceInputs["organizationId"] = state?.organizationId;
            resourceInputs["organizationmanagerOsLoginSettingsId"] = state?.organizationmanagerOsLoginSettingsId;
            resourceInputs["sshCertificateSettings"] = state?.sshCertificateSettings;
            resourceInputs["timeouts"] = state?.timeouts;
            resourceInputs["userSshKeySettings"] = state?.userSshKeySettings;
        } else {
            const args = argsOrState as OrganizationmanagerOsLoginSettingsArgs | undefined;
            if (args?.organizationId === undefined && !opts.urn) {
                throw new Error("Missing required property 'organizationId'");
            }
            resourceInputs["organizationId"] = args?.organizationId;
            resourceInputs["organizationmanagerOsLoginSettingsId"] = args?.organizationmanagerOsLoginSettingsId;
            resourceInputs["sshCertificateSettings"] = args?.sshCertificateSettings;
            resourceInputs["timeouts"] = args?.timeouts;
            resourceInputs["userSshKeySettings"] = args?.userSshKeySettings;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OrganizationmanagerOsLoginSettings.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OrganizationmanagerOsLoginSettings resources.
 */
export interface OrganizationmanagerOsLoginSettingsState {
    organizationId?: pulumi.Input<string>;
    organizationmanagerOsLoginSettingsId?: pulumi.Input<string>;
    sshCertificateSettings?: pulumi.Input<inputs.OrganizationmanagerOsLoginSettingsSshCertificateSettings>;
    timeouts?: pulumi.Input<inputs.OrganizationmanagerOsLoginSettingsTimeouts>;
    userSshKeySettings?: pulumi.Input<inputs.OrganizationmanagerOsLoginSettingsUserSshKeySettings>;
}

/**
 * The set of arguments for constructing a OrganizationmanagerOsLoginSettings resource.
 */
export interface OrganizationmanagerOsLoginSettingsArgs {
    organizationId: pulumi.Input<string>;
    organizationmanagerOsLoginSettingsId?: pulumi.Input<string>;
    sshCertificateSettings?: pulumi.Input<inputs.OrganizationmanagerOsLoginSettingsSshCertificateSettings>;
    timeouts?: pulumi.Input<inputs.OrganizationmanagerOsLoginSettingsTimeouts>;
    userSshKeySettings?: pulumi.Input<inputs.OrganizationmanagerOsLoginSettingsUserSshKeySettings>;
}
