// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class YdbTopic extends pulumi.CustomResource {
    /**
     * Get an existing YdbTopic resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: YdbTopicState, opts?: pulumi.CustomResourceOptions): YdbTopic {
        return new YdbTopic(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/ydbTopic:YdbTopic';

    /**
     * Returns true if the given object is an instance of YdbTopic.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is YdbTopic {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === YdbTopic.__pulumiType;
    }

    declare public readonly consumers: pulumi.Output<outputs.YdbTopicConsumer[] | undefined>;
    declare public readonly databaseEndpoint: pulumi.Output<string>;
    declare public readonly description: pulumi.Output<string | undefined>;
    declare public readonly meteringMode: pulumi.Output<string>;
    declare public readonly name: pulumi.Output<string>;
    declare public readonly partitionWriteSpeedKbps: pulumi.Output<number>;
    declare public readonly partitionsCount: pulumi.Output<number>;
    declare public readonly retentionPeriodHours: pulumi.Output<number>;
    declare public readonly retentionStorageMb: pulumi.Output<number>;
    declare public readonly supportedCodecs: pulumi.Output<string[]>;
    declare public readonly timeouts: pulumi.Output<outputs.YdbTopicTimeouts | undefined>;
    declare public readonly ydbTopicId: pulumi.Output<string>;

    /**
     * Create a YdbTopic resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: YdbTopicArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: YdbTopicArgs | YdbTopicState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as YdbTopicState | undefined;
            resourceInputs["consumers"] = state?.consumers;
            resourceInputs["databaseEndpoint"] = state?.databaseEndpoint;
            resourceInputs["description"] = state?.description;
            resourceInputs["meteringMode"] = state?.meteringMode;
            resourceInputs["name"] = state?.name;
            resourceInputs["partitionWriteSpeedKbps"] = state?.partitionWriteSpeedKbps;
            resourceInputs["partitionsCount"] = state?.partitionsCount;
            resourceInputs["retentionPeriodHours"] = state?.retentionPeriodHours;
            resourceInputs["retentionStorageMb"] = state?.retentionStorageMb;
            resourceInputs["supportedCodecs"] = state?.supportedCodecs;
            resourceInputs["timeouts"] = state?.timeouts;
            resourceInputs["ydbTopicId"] = state?.ydbTopicId;
        } else {
            const args = argsOrState as YdbTopicArgs | undefined;
            if (args?.databaseEndpoint === undefined && !opts.urn) {
                throw new Error("Missing required property 'databaseEndpoint'");
            }
            resourceInputs["consumers"] = args?.consumers;
            resourceInputs["databaseEndpoint"] = args?.databaseEndpoint;
            resourceInputs["description"] = args?.description;
            resourceInputs["meteringMode"] = args?.meteringMode;
            resourceInputs["name"] = args?.name;
            resourceInputs["partitionWriteSpeedKbps"] = args?.partitionWriteSpeedKbps;
            resourceInputs["partitionsCount"] = args?.partitionsCount;
            resourceInputs["retentionPeriodHours"] = args?.retentionPeriodHours;
            resourceInputs["retentionStorageMb"] = args?.retentionStorageMb;
            resourceInputs["supportedCodecs"] = args?.supportedCodecs;
            resourceInputs["timeouts"] = args?.timeouts;
            resourceInputs["ydbTopicId"] = args?.ydbTopicId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(YdbTopic.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering YdbTopic resources.
 */
export interface YdbTopicState {
    consumers?: pulumi.Input<pulumi.Input<inputs.YdbTopicConsumer>[]>;
    databaseEndpoint?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    meteringMode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    partitionWriteSpeedKbps?: pulumi.Input<number>;
    partitionsCount?: pulumi.Input<number>;
    retentionPeriodHours?: pulumi.Input<number>;
    retentionStorageMb?: pulumi.Input<number>;
    supportedCodecs?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.YdbTopicTimeouts>;
    ydbTopicId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a YdbTopic resource.
 */
export interface YdbTopicArgs {
    consumers?: pulumi.Input<pulumi.Input<inputs.YdbTopicConsumer>[]>;
    databaseEndpoint: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    meteringMode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    partitionWriteSpeedKbps?: pulumi.Input<number>;
    partitionsCount?: pulumi.Input<number>;
    retentionPeriodHours?: pulumi.Input<number>;
    retentionStorageMb?: pulumi.Input<number>;
    supportedCodecs?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.YdbTopicTimeouts>;
    ydbTopicId?: pulumi.Input<string>;
}
