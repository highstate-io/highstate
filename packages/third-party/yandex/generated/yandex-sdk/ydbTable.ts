// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class YdbTable extends pulumi.CustomResource {
    /**
     * Get an existing YdbTable resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: YdbTableState, opts?: pulumi.CustomResourceOptions): YdbTable {
        return new YdbTable(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/ydbTable:YdbTable';

    /**
     * Returns true if the given object is an instance of YdbTable.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is YdbTable {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === YdbTable.__pulumiType;
    }

    declare public readonly attributes: pulumi.Output<{[key: string]: string}>;
    declare public readonly columns: pulumi.Output<outputs.YdbTableColumn[]>;
    declare public readonly connectionString: pulumi.Output<string>;
    declare public readonly families: pulumi.Output<outputs.YdbTableFamily[] | undefined>;
    declare public readonly keyBloomFilter: pulumi.Output<boolean>;
    declare public readonly partitioningSettings: pulumi.Output<outputs.YdbTablePartitioningSettings | undefined>;
    declare public readonly path: pulumi.Output<string>;
    declare public readonly primaryKeys: pulumi.Output<string[]>;
    declare public readonly readReplicasSettings: pulumi.Output<string>;
    declare public readonly timeouts: pulumi.Output<outputs.YdbTableTimeouts | undefined>;
    declare public readonly ttls: pulumi.Output<outputs.YdbTableTtl[] | undefined>;
    declare public readonly ydbTableId: pulumi.Output<string>;

    /**
     * Create a YdbTable resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: YdbTableArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: YdbTableArgs | YdbTableState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as YdbTableState | undefined;
            resourceInputs["attributes"] = state?.attributes;
            resourceInputs["columns"] = state?.columns;
            resourceInputs["connectionString"] = state?.connectionString;
            resourceInputs["families"] = state?.families;
            resourceInputs["keyBloomFilter"] = state?.keyBloomFilter;
            resourceInputs["partitioningSettings"] = state?.partitioningSettings;
            resourceInputs["path"] = state?.path;
            resourceInputs["primaryKeys"] = state?.primaryKeys;
            resourceInputs["readReplicasSettings"] = state?.readReplicasSettings;
            resourceInputs["timeouts"] = state?.timeouts;
            resourceInputs["ttls"] = state?.ttls;
            resourceInputs["ydbTableId"] = state?.ydbTableId;
        } else {
            const args = argsOrState as YdbTableArgs | undefined;
            if (args?.columns === undefined && !opts.urn) {
                throw new Error("Missing required property 'columns'");
            }
            if (args?.connectionString === undefined && !opts.urn) {
                throw new Error("Missing required property 'connectionString'");
            }
            if (args?.path === undefined && !opts.urn) {
                throw new Error("Missing required property 'path'");
            }
            if (args?.primaryKeys === undefined && !opts.urn) {
                throw new Error("Missing required property 'primaryKeys'");
            }
            resourceInputs["attributes"] = args?.attributes;
            resourceInputs["columns"] = args?.columns;
            resourceInputs["connectionString"] = args?.connectionString;
            resourceInputs["families"] = args?.families;
            resourceInputs["keyBloomFilter"] = args?.keyBloomFilter;
            resourceInputs["partitioningSettings"] = args?.partitioningSettings;
            resourceInputs["path"] = args?.path;
            resourceInputs["primaryKeys"] = args?.primaryKeys;
            resourceInputs["readReplicasSettings"] = args?.readReplicasSettings;
            resourceInputs["timeouts"] = args?.timeouts;
            resourceInputs["ttls"] = args?.ttls;
            resourceInputs["ydbTableId"] = args?.ydbTableId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(YdbTable.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering YdbTable resources.
 */
export interface YdbTableState {
    attributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    columns?: pulumi.Input<pulumi.Input<inputs.YdbTableColumn>[]>;
    connectionString?: pulumi.Input<string>;
    families?: pulumi.Input<pulumi.Input<inputs.YdbTableFamily>[]>;
    keyBloomFilter?: pulumi.Input<boolean>;
    partitioningSettings?: pulumi.Input<inputs.YdbTablePartitioningSettings>;
    path?: pulumi.Input<string>;
    primaryKeys?: pulumi.Input<pulumi.Input<string>[]>;
    readReplicasSettings?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.YdbTableTimeouts>;
    ttls?: pulumi.Input<pulumi.Input<inputs.YdbTableTtl>[]>;
    ydbTableId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a YdbTable resource.
 */
export interface YdbTableArgs {
    attributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    columns: pulumi.Input<pulumi.Input<inputs.YdbTableColumn>[]>;
    connectionString: pulumi.Input<string>;
    families?: pulumi.Input<pulumi.Input<inputs.YdbTableFamily>[]>;
    keyBloomFilter?: pulumi.Input<boolean>;
    partitioningSettings?: pulumi.Input<inputs.YdbTablePartitioningSettings>;
    path: pulumi.Input<string>;
    primaryKeys: pulumi.Input<pulumi.Input<string>[]>;
    readReplicasSettings?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.YdbTableTimeouts>;
    ttls?: pulumi.Input<pulumi.Input<inputs.YdbTableTtl>[]>;
    ydbTableId?: pulumi.Input<string>;
}
