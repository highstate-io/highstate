// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIotCoreBroker(args?: GetIotCoreBrokerArgs, opts?: pulumi.InvokeOptions): Promise<GetIotCoreBrokerResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getIotCoreBroker:getIotCoreBroker", {
        "brokerId": args.brokerId,
        "folderId": args.folderId,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIotCoreBroker.
 */
export interface GetIotCoreBrokerArgs {
    brokerId?: string;
    folderId?: string;
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getIotCoreBroker.
 */
export interface GetIotCoreBrokerResult {
    readonly brokerId?: string;
    readonly certificates: string[];
    readonly createdAt: string;
    readonly description: string;
    readonly folderId?: string;
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly logOptions: outputs.GetIotCoreBrokerLogOption[];
    readonly name?: string;
}
export function getIotCoreBrokerOutput(args?: GetIotCoreBrokerOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetIotCoreBrokerResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("yandex:index/getIotCoreBroker:getIotCoreBroker", {
        "brokerId": args.brokerId,
        "folderId": args.folderId,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIotCoreBroker.
 */
export interface GetIotCoreBrokerOutputArgs {
    brokerId?: pulumi.Input<string>;
    folderId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
