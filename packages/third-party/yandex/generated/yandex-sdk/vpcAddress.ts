// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VpcAddress extends pulumi.CustomResource {
    /**
     * Get an existing VpcAddress resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcAddressState, opts?: pulumi.CustomResourceOptions): VpcAddress {
        return new VpcAddress(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/vpcAddress:VpcAddress';

    /**
     * Returns true if the given object is an instance of VpcAddress.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpcAddress {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcAddress.__pulumiType;
    }

    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    declare public readonly deletionProtection: pulumi.Output<boolean>;
    declare public readonly description: pulumi.Output<string | undefined>;
    declare public readonly dnsRecords: pulumi.Output<outputs.VpcAddressDnsRecord[] | undefined>;
    declare public readonly externalIpv4Address: pulumi.Output<outputs.VpcAddressExternalIpv4Address | undefined>;
    declare public readonly folderId: pulumi.Output<string>;
    declare public readonly labels: pulumi.Output<{[key: string]: string}>;
    declare public readonly name: pulumi.Output<string>;
    declare public /*out*/ readonly reserved: pulumi.Output<boolean>;
    declare public readonly timeouts: pulumi.Output<outputs.VpcAddressTimeouts | undefined>;
    declare public /*out*/ readonly used: pulumi.Output<boolean>;
    declare public readonly vpcAddressId: pulumi.Output<string>;

    /**
     * Create a VpcAddress resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VpcAddressArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpcAddressArgs | VpcAddressState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpcAddressState | undefined;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["deletionProtection"] = state?.deletionProtection;
            resourceInputs["description"] = state?.description;
            resourceInputs["dnsRecords"] = state?.dnsRecords;
            resourceInputs["externalIpv4Address"] = state?.externalIpv4Address;
            resourceInputs["folderId"] = state?.folderId;
            resourceInputs["labels"] = state?.labels;
            resourceInputs["name"] = state?.name;
            resourceInputs["reserved"] = state?.reserved;
            resourceInputs["timeouts"] = state?.timeouts;
            resourceInputs["used"] = state?.used;
            resourceInputs["vpcAddressId"] = state?.vpcAddressId;
        } else {
            const args = argsOrState as VpcAddressArgs | undefined;
            resourceInputs["deletionProtection"] = args?.deletionProtection;
            resourceInputs["description"] = args?.description;
            resourceInputs["dnsRecords"] = args?.dnsRecords;
            resourceInputs["externalIpv4Address"] = args?.externalIpv4Address;
            resourceInputs["folderId"] = args?.folderId;
            resourceInputs["labels"] = args?.labels;
            resourceInputs["name"] = args?.name;
            resourceInputs["timeouts"] = args?.timeouts;
            resourceInputs["vpcAddressId"] = args?.vpcAddressId;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["reserved"] = undefined /*out*/;
            resourceInputs["used"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpcAddress.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VpcAddress resources.
 */
export interface VpcAddressState {
    createdAt?: pulumi.Input<string>;
    deletionProtection?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    dnsRecords?: pulumi.Input<pulumi.Input<inputs.VpcAddressDnsRecord>[]>;
    externalIpv4Address?: pulumi.Input<inputs.VpcAddressExternalIpv4Address>;
    folderId?: pulumi.Input<string>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    name?: pulumi.Input<string>;
    reserved?: pulumi.Input<boolean>;
    timeouts?: pulumi.Input<inputs.VpcAddressTimeouts>;
    used?: pulumi.Input<boolean>;
    vpcAddressId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VpcAddress resource.
 */
export interface VpcAddressArgs {
    deletionProtection?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    dnsRecords?: pulumi.Input<pulumi.Input<inputs.VpcAddressDnsRecord>[]>;
    externalIpv4Address?: pulumi.Input<inputs.VpcAddressExternalIpv4Address>;
    folderId?: pulumi.Input<string>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    name?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.VpcAddressTimeouts>;
    vpcAddressId?: pulumi.Input<string>;
}
