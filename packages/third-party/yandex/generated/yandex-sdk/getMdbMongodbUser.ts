// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMdbMongodbUser(args: GetMdbMongodbUserArgs, opts?: pulumi.InvokeOptions): Promise<GetMdbMongodbUserResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getMdbMongodbUser:getMdbMongodbUser", {
        "clusterId": args.clusterId,
        "name": args.name,
        "permissions": args.permissions,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMdbMongodbUser.
 */
export interface GetMdbMongodbUserArgs {
    clusterId: string;
    name: string;
    permissions?: inputs.GetMdbMongodbUserPermission[];
}

/**
 * A collection of values returned by getMdbMongodbUser.
 */
export interface GetMdbMongodbUserResult {
    readonly clusterId: string;
    readonly id: string;
    readonly name: string;
    readonly password: string;
    readonly permissions?: outputs.GetMdbMongodbUserPermission[];
}
export function getMdbMongodbUserOutput(args: GetMdbMongodbUserOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMdbMongodbUserResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("yandex:index/getMdbMongodbUser:getMdbMongodbUser", {
        "clusterId": args.clusterId,
        "name": args.name,
        "permissions": args.permissions,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMdbMongodbUser.
 */
export interface GetMdbMongodbUserOutputArgs {
    clusterId: pulumi.Input<string>;
    name: pulumi.Input<string>;
    permissions?: pulumi.Input<pulumi.Input<inputs.GetMdbMongodbUserPermissionArgs>[]>;
}
