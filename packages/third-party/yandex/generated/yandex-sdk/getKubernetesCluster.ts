// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKubernetesCluster(args?: GetKubernetesClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetKubernetesClusterResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getKubernetesCluster:getKubernetesCluster", {
        "clusterId": args.clusterId,
        "folderId": args.folderId,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKubernetesCluster.
 */
export interface GetKubernetesClusterArgs {
    clusterId?: string;
    folderId?: string;
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getKubernetesCluster.
 */
export interface GetKubernetesClusterResult {
    readonly clusterId: string;
    readonly clusterIpv4Range: string;
    readonly clusterIpv6Range: string;
    readonly createdAt: string;
    readonly description: string;
    readonly folderId: string;
    readonly health: string;
    readonly id: string;
    readonly kmsProviders: outputs.GetKubernetesClusterKmsProvider[];
    readonly labels: {[key: string]: string};
    readonly logGroupId: string;
    readonly masters: outputs.GetKubernetesClusterMaster[];
    readonly name: string;
    readonly networkId: string;
    readonly networkImplementations: outputs.GetKubernetesClusterNetworkImplementation[];
    readonly networkPolicyProvider: string;
    readonly nodeIpv4CidrMaskSize: number;
    readonly nodeServiceAccountId: string;
    readonly releaseChannel: string;
    readonly serviceAccountId: string;
    readonly serviceIpv4Range: string;
    readonly serviceIpv6Range: string;
    readonly status: string;
}
export function getKubernetesClusterOutput(args?: GetKubernetesClusterOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetKubernetesClusterResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("yandex:index/getKubernetesCluster:getKubernetesCluster", {
        "clusterId": args.clusterId,
        "folderId": args.folderId,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKubernetesCluster.
 */
export interface GetKubernetesClusterOutputArgs {
    clusterId?: pulumi.Input<string>;
    folderId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
