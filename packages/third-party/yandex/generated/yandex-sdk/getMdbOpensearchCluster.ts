// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMdbOpensearchCluster(args?: GetMdbOpensearchClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetMdbOpensearchClusterResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getMdbOpensearchCluster:getMdbOpensearchCluster", {
        "authSettings": args.authSettings,
        "clusterId": args.clusterId,
        "config": args.config,
        "deletionProtection": args.deletionProtection,
        "description": args.description,
        "folderId": args.folderId,
        "labels": args.labels,
        "maintenanceWindow": args.maintenanceWindow,
        "name": args.name,
        "securityGroupIds": args.securityGroupIds,
        "serviceAccountId": args.serviceAccountId,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMdbOpensearchCluster.
 */
export interface GetMdbOpensearchClusterArgs {
    authSettings?: inputs.GetMdbOpensearchClusterAuthSettings;
    clusterId?: string;
    config?: inputs.GetMdbOpensearchClusterConfig;
    deletionProtection?: boolean;
    description?: string;
    folderId?: string;
    labels?: {[key: string]: string};
    maintenanceWindow?: inputs.GetMdbOpensearchClusterMaintenanceWindow;
    name?: string;
    securityGroupIds?: string[];
    serviceAccountId?: string;
    timeouts?: inputs.GetMdbOpensearchClusterTimeouts;
}

/**
 * A collection of values returned by getMdbOpensearchCluster.
 */
export interface GetMdbOpensearchClusterResult {
    readonly authSettings: outputs.GetMdbOpensearchClusterAuthSettings;
    readonly clusterId: string;
    readonly config?: outputs.GetMdbOpensearchClusterConfig;
    readonly createdAt: string;
    readonly deletionProtection: boolean;
    readonly description: string;
    readonly environment: string;
    readonly folderId: string;
    readonly health: string;
    readonly hosts: outputs.GetMdbOpensearchClusterHost[];
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly maintenanceWindow?: outputs.GetMdbOpensearchClusterMaintenanceWindow;
    readonly name: string;
    readonly networkId: string;
    readonly securityGroupIds: string[];
    readonly serviceAccountId: string;
    readonly status: string;
    readonly timeouts?: outputs.GetMdbOpensearchClusterTimeouts;
}
export function getMdbOpensearchClusterOutput(args?: GetMdbOpensearchClusterOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMdbOpensearchClusterResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("yandex:index/getMdbOpensearchCluster:getMdbOpensearchCluster", {
        "authSettings": args.authSettings,
        "clusterId": args.clusterId,
        "config": args.config,
        "deletionProtection": args.deletionProtection,
        "description": args.description,
        "folderId": args.folderId,
        "labels": args.labels,
        "maintenanceWindow": args.maintenanceWindow,
        "name": args.name,
        "securityGroupIds": args.securityGroupIds,
        "serviceAccountId": args.serviceAccountId,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMdbOpensearchCluster.
 */
export interface GetMdbOpensearchClusterOutputArgs {
    authSettings?: pulumi.Input<inputs.GetMdbOpensearchClusterAuthSettingsArgs>;
    clusterId?: pulumi.Input<string>;
    config?: pulumi.Input<inputs.GetMdbOpensearchClusterConfigArgs>;
    deletionProtection?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    folderId?: pulumi.Input<string>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    maintenanceWindow?: pulumi.Input<inputs.GetMdbOpensearchClusterMaintenanceWindowArgs>;
    name?: pulumi.Input<string>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    serviceAccountId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetMdbOpensearchClusterTimeoutsArgs>;
}
