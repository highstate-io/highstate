// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class LockboxSecretVersionHashed extends pulumi.CustomResource {
    /**
     * Get an existing LockboxSecretVersionHashed resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LockboxSecretVersionHashedState, opts?: pulumi.CustomResourceOptions): LockboxSecretVersionHashed {
        return new LockboxSecretVersionHashed(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/lockboxSecretVersionHashed:LockboxSecretVersionHashed';

    /**
     * Returns true if the given object is an instance of LockboxSecretVersionHashed.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LockboxSecretVersionHashed {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LockboxSecretVersionHashed.__pulumiType;
    }

    declare public readonly description: pulumi.Output<string | undefined>;
    declare public readonly key1: pulumi.Output<string | undefined>;
    declare public readonly key10: pulumi.Output<string | undefined>;
    declare public readonly key2: pulumi.Output<string | undefined>;
    declare public readonly key3: pulumi.Output<string | undefined>;
    declare public readonly key4: pulumi.Output<string | undefined>;
    declare public readonly key5: pulumi.Output<string | undefined>;
    declare public readonly key6: pulumi.Output<string | undefined>;
    declare public readonly key7: pulumi.Output<string | undefined>;
    declare public readonly key8: pulumi.Output<string | undefined>;
    declare public readonly key9: pulumi.Output<string | undefined>;
    declare public readonly lockboxSecretVersionHashedId: pulumi.Output<string>;
    declare public readonly secretId: pulumi.Output<string>;
    declare public readonly textValue1: pulumi.Output<string | undefined>;
    declare public readonly textValue10: pulumi.Output<string | undefined>;
    declare public readonly textValue2: pulumi.Output<string | undefined>;
    declare public readonly textValue3: pulumi.Output<string | undefined>;
    declare public readonly textValue4: pulumi.Output<string | undefined>;
    declare public readonly textValue5: pulumi.Output<string | undefined>;
    declare public readonly textValue6: pulumi.Output<string | undefined>;
    declare public readonly textValue7: pulumi.Output<string | undefined>;
    declare public readonly textValue8: pulumi.Output<string | undefined>;
    declare public readonly textValue9: pulumi.Output<string | undefined>;
    declare public readonly timeouts: pulumi.Output<outputs.LockboxSecretVersionHashedTimeouts | undefined>;

    /**
     * Create a LockboxSecretVersionHashed resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LockboxSecretVersionHashedArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LockboxSecretVersionHashedArgs | LockboxSecretVersionHashedState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LockboxSecretVersionHashedState | undefined;
            resourceInputs["description"] = state?.description;
            resourceInputs["key1"] = state?.key1;
            resourceInputs["key10"] = state?.key10;
            resourceInputs["key2"] = state?.key2;
            resourceInputs["key3"] = state?.key3;
            resourceInputs["key4"] = state?.key4;
            resourceInputs["key5"] = state?.key5;
            resourceInputs["key6"] = state?.key6;
            resourceInputs["key7"] = state?.key7;
            resourceInputs["key8"] = state?.key8;
            resourceInputs["key9"] = state?.key9;
            resourceInputs["lockboxSecretVersionHashedId"] = state?.lockboxSecretVersionHashedId;
            resourceInputs["secretId"] = state?.secretId;
            resourceInputs["textValue1"] = state?.textValue1;
            resourceInputs["textValue10"] = state?.textValue10;
            resourceInputs["textValue2"] = state?.textValue2;
            resourceInputs["textValue3"] = state?.textValue3;
            resourceInputs["textValue4"] = state?.textValue4;
            resourceInputs["textValue5"] = state?.textValue5;
            resourceInputs["textValue6"] = state?.textValue6;
            resourceInputs["textValue7"] = state?.textValue7;
            resourceInputs["textValue8"] = state?.textValue8;
            resourceInputs["textValue9"] = state?.textValue9;
            resourceInputs["timeouts"] = state?.timeouts;
        } else {
            const args = argsOrState as LockboxSecretVersionHashedArgs | undefined;
            if (args?.secretId === undefined && !opts.urn) {
                throw new Error("Missing required property 'secretId'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["key1"] = args?.key1;
            resourceInputs["key10"] = args?.key10;
            resourceInputs["key2"] = args?.key2;
            resourceInputs["key3"] = args?.key3;
            resourceInputs["key4"] = args?.key4;
            resourceInputs["key5"] = args?.key5;
            resourceInputs["key6"] = args?.key6;
            resourceInputs["key7"] = args?.key7;
            resourceInputs["key8"] = args?.key8;
            resourceInputs["key9"] = args?.key9;
            resourceInputs["lockboxSecretVersionHashedId"] = args?.lockboxSecretVersionHashedId;
            resourceInputs["secretId"] = args?.secretId;
            resourceInputs["textValue1"] = args?.textValue1 ? pulumi.secret(args.textValue1) : undefined;
            resourceInputs["textValue10"] = args?.textValue10 ? pulumi.secret(args.textValue10) : undefined;
            resourceInputs["textValue2"] = args?.textValue2 ? pulumi.secret(args.textValue2) : undefined;
            resourceInputs["textValue3"] = args?.textValue3 ? pulumi.secret(args.textValue3) : undefined;
            resourceInputs["textValue4"] = args?.textValue4 ? pulumi.secret(args.textValue4) : undefined;
            resourceInputs["textValue5"] = args?.textValue5 ? pulumi.secret(args.textValue5) : undefined;
            resourceInputs["textValue6"] = args?.textValue6 ? pulumi.secret(args.textValue6) : undefined;
            resourceInputs["textValue7"] = args?.textValue7 ? pulumi.secret(args.textValue7) : undefined;
            resourceInputs["textValue8"] = args?.textValue8 ? pulumi.secret(args.textValue8) : undefined;
            resourceInputs["textValue9"] = args?.textValue9 ? pulumi.secret(args.textValue9) : undefined;
            resourceInputs["timeouts"] = args?.timeouts;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["textValue1", "textValue10", "textValue2", "textValue3", "textValue4", "textValue5", "textValue6", "textValue7", "textValue8", "textValue9"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(LockboxSecretVersionHashed.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LockboxSecretVersionHashed resources.
 */
export interface LockboxSecretVersionHashedState {
    description?: pulumi.Input<string>;
    key1?: pulumi.Input<string>;
    key10?: pulumi.Input<string>;
    key2?: pulumi.Input<string>;
    key3?: pulumi.Input<string>;
    key4?: pulumi.Input<string>;
    key5?: pulumi.Input<string>;
    key6?: pulumi.Input<string>;
    key7?: pulumi.Input<string>;
    key8?: pulumi.Input<string>;
    key9?: pulumi.Input<string>;
    lockboxSecretVersionHashedId?: pulumi.Input<string>;
    secretId?: pulumi.Input<string>;
    textValue1?: pulumi.Input<string>;
    textValue10?: pulumi.Input<string>;
    textValue2?: pulumi.Input<string>;
    textValue3?: pulumi.Input<string>;
    textValue4?: pulumi.Input<string>;
    textValue5?: pulumi.Input<string>;
    textValue6?: pulumi.Input<string>;
    textValue7?: pulumi.Input<string>;
    textValue8?: pulumi.Input<string>;
    textValue9?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.LockboxSecretVersionHashedTimeouts>;
}

/**
 * The set of arguments for constructing a LockboxSecretVersionHashed resource.
 */
export interface LockboxSecretVersionHashedArgs {
    description?: pulumi.Input<string>;
    key1?: pulumi.Input<string>;
    key10?: pulumi.Input<string>;
    key2?: pulumi.Input<string>;
    key3?: pulumi.Input<string>;
    key4?: pulumi.Input<string>;
    key5?: pulumi.Input<string>;
    key6?: pulumi.Input<string>;
    key7?: pulumi.Input<string>;
    key8?: pulumi.Input<string>;
    key9?: pulumi.Input<string>;
    lockboxSecretVersionHashedId?: pulumi.Input<string>;
    secretId: pulumi.Input<string>;
    textValue1?: pulumi.Input<string>;
    textValue10?: pulumi.Input<string>;
    textValue2?: pulumi.Input<string>;
    textValue3?: pulumi.Input<string>;
    textValue4?: pulumi.Input<string>;
    textValue5?: pulumi.Input<string>;
    textValue6?: pulumi.Input<string>;
    textValue7?: pulumi.Input<string>;
    textValue8?: pulumi.Input<string>;
    textValue9?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.LockboxSecretVersionHashedTimeouts>;
}
