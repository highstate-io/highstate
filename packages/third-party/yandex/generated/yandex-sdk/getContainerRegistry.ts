// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getContainerRegistry(args?: GetContainerRegistryArgs, opts?: pulumi.InvokeOptions): Promise<GetContainerRegistryResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getContainerRegistry:getContainerRegistry", {
        "folderId": args.folderId,
        "id": args.id,
        "labels": args.labels,
        "name": args.name,
        "registryId": args.registryId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getContainerRegistry.
 */
export interface GetContainerRegistryArgs {
    folderId?: string;
    id?: string;
    labels?: {[key: string]: string};
    name?: string;
    registryId?: string;
}

/**
 * A collection of values returned by getContainerRegistry.
 */
export interface GetContainerRegistryResult {
    readonly createdAt: string;
    readonly folderId: string;
    readonly id: string;
    readonly labels?: {[key: string]: string};
    readonly name: string;
    readonly registryId: string;
    readonly status: string;
}
export function getContainerRegistryOutput(args?: GetContainerRegistryOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetContainerRegistryResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("yandex:index/getContainerRegistry:getContainerRegistry", {
        "folderId": args.folderId,
        "id": args.id,
        "labels": args.labels,
        "name": args.name,
        "registryId": args.registryId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getContainerRegistry.
 */
export interface GetContainerRegistryOutputArgs {
    folderId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    name?: pulumi.Input<string>;
    registryId?: pulumi.Input<string>;
}
