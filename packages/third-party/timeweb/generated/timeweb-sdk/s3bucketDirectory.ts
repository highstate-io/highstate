// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class S3BucketDirectory extends pulumi.CustomResource {
    /**
     * Get an existing S3BucketDirectory resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: S3BucketDirectoryState, opts?: pulumi.CustomResourceOptions): S3BucketDirectory {
        return new S3BucketDirectory(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'timeweb-cloud:index/s3BucketDirectory:S3BucketDirectory';

    /**
     * Returns true if the given object is an instance of S3BucketDirectory.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is S3BucketDirectory {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === S3BucketDirectory.__pulumiType;
    }

    /**
     * S3 Bucket ID for which directory should be created
     */
    declare public readonly bucketId: pulumi.Output<number>;
    /**
     * Directory name
     */
    declare public readonly name: pulumi.Output<string>;
    declare public readonly s3BucketDirectoryId: pulumi.Output<string>;

    /**
     * Create a S3BucketDirectory resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: S3BucketDirectoryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: S3BucketDirectoryArgs | S3BucketDirectoryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as S3BucketDirectoryState | undefined;
            resourceInputs["bucketId"] = state?.bucketId;
            resourceInputs["name"] = state?.name;
            resourceInputs["s3BucketDirectoryId"] = state?.s3BucketDirectoryId;
        } else {
            const args = argsOrState as S3BucketDirectoryArgs | undefined;
            if (args?.bucketId === undefined && !opts.urn) {
                throw new Error("Missing required property 'bucketId'");
            }
            resourceInputs["bucketId"] = args?.bucketId;
            resourceInputs["name"] = args?.name;
            resourceInputs["s3BucketDirectoryId"] = args?.s3BucketDirectoryId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(S3BucketDirectory.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering S3BucketDirectory resources.
 */
export interface S3BucketDirectoryState {
    /**
     * S3 Bucket ID for which directory should be created
     */
    bucketId?: pulumi.Input<number>;
    /**
     * Directory name
     */
    name?: pulumi.Input<string>;
    s3BucketDirectoryId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a S3BucketDirectory resource.
 */
export interface S3BucketDirectoryArgs {
    /**
     * S3 Bucket ID for which directory should be created
     */
    bucketId: pulumi.Input<number>;
    /**
     * Directory name
     */
    name?: pulumi.Input<string>;
    s3BucketDirectoryId?: pulumi.Input<string>;
}
