// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseCluster(args?: GetDatabaseClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseClusterResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("timeweb-cloud:index/getDatabaseCluster:getDatabaseCluster", {
        "availabilityZone": args.availabilityZone,
        "id": args.id,
        "location": args.location,
        "name": args.name,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseCluster.
 */
export interface GetDatabaseClusterArgs {
    availabilityZone?: string;
    id?: string;
    location?: string;
    name?: string;
    type?: string;
}

/**
 * A collection of values returned by getDatabaseCluster.
 */
export interface GetDatabaseClusterResult {
    readonly availabilityZone: string;
    readonly description: string;
    readonly diskStats: outputs.GetDatabaseClusterDiskStat[];
    readonly id: string;
    readonly isExternalIp: boolean;
    readonly location: string;
    readonly name: string;
    readonly networks: outputs.GetDatabaseClusterNetwork[];
    readonly parameters: {[key: string]: string};
    readonly port: number;
    readonly status: string;
    readonly type: string;
}
export function getDatabaseClusterOutput(args?: GetDatabaseClusterOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDatabaseClusterResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("timeweb-cloud:index/getDatabaseCluster:getDatabaseCluster", {
        "availabilityZone": args.availabilityZone,
        "id": args.id,
        "location": args.location,
        "name": args.name,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseCluster.
 */
export interface GetDatabaseClusterOutputArgs {
    availabilityZone?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
