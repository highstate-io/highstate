
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file should be your main import to use Prisma. Through it you get access to all the models, enums, and input types.
 *
 * ðŸŸ¢ You can import this file directly.
 */

import * as process from 'node:process'
import * as path from 'node:path'
import { fileURLToPath } from 'node:url'
const __dirname = path.dirname(fileURLToPath(import.meta.url))

import * as runtime from "@prisma/client/runtime/client"
import * as $Enums from "./enums.ts"
import * as $Class from "./internal/class.ts"
import * as Prisma from "./internal/prismaNamespace.ts"

export * as $Enums from './enums.ts'
/**
 * ## Prisma Client
 * 
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more UserWorkspaceLayouts
 * const userWorkspaceLayouts = await prisma.userWorkspaceLayout.findMany()
 * ```
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export const PrismaClient = $Class.getPrismaClientClass(__dirname)
export type PrismaClient<LogOpts extends Prisma.LogLevel = never, OmitOpts extends Prisma.PrismaClientOptions["omit"] = Prisma.PrismaClientOptions["omit"], ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = $Class.PrismaClient<LogOpts, OmitOpts, ExtArgs>
export { Prisma }



/**
 * Model UserWorkspaceLayout
 * 
 */
export type UserWorkspaceLayout = Prisma.UserWorkspaceLayoutModel
/**
 * Model Library
 * 
 */
export type Library = Prisma.LibraryModel
/**
 * Model Project
 * 
 */
export type Project = Prisma.ProjectModel
/**
 * Model ProjectSpace
 * 
 */
export type ProjectSpace = Prisma.ProjectSpaceModel
/**
 * Model ProjectModelStorage
 * 
 */
export type ProjectModelStorage = Prisma.ProjectModelStorageModel
/**
 * Model PulumiBackend
 * 
 */
export type PulumiBackend = Prisma.PulumiBackendModel
/**
 * Model BackendUnlockMethod
 * Unlock methods describe trusted identities that can decrypt the backend master key.
 */
export type BackendUnlockMethod = Prisma.BackendUnlockMethodModel


