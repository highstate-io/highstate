
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `ServiceAccount` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */

import type * as PJTG from '../pjtg.ts';
import * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model ServiceAccount
 * The service account represents an identity for non-human actors in the system.
 * 
 * Service accounts are automatically created for workers and can be manually created
 * for external integrations. They define the access scope for resources like artifacts,
 * secrets, terminals, and pages. Multiple API keys can impersonate the same service account,
 * allowing different authentication tokens to share the same permissions.
 */
export type ServiceAccountModel = runtime.Types.Result.DefaultSelection<Prisma.$ServiceAccountPayload>

export type AggregateServiceAccount = {
  _count: ServiceAccountCountAggregateOutputType | null
  _min: ServiceAccountMinAggregateOutputType | null
  _max: ServiceAccountMaxAggregateOutputType | null
}

export type ServiceAccountMinAggregateOutputType = {
  id: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ServiceAccountMaxAggregateOutputType = {
  id: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ServiceAccountCountAggregateOutputType = {
  id: number
  meta: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type ServiceAccountMinAggregateInputType = {
  id?: true
  createdAt?: true
  updatedAt?: true
}

export type ServiceAccountMaxAggregateInputType = {
  id?: true
  createdAt?: true
  updatedAt?: true
}

export type ServiceAccountCountAggregateInputType = {
  id?: true
  meta?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type ServiceAccountAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ServiceAccount to aggregate.
   */
  where?: Prisma.ServiceAccountWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ServiceAccounts to fetch.
   */
  orderBy?: Prisma.ServiceAccountOrderByWithRelationInput | Prisma.ServiceAccountOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ServiceAccountWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ServiceAccounts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ServiceAccounts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned ServiceAccounts
  **/
  _count?: true | ServiceAccountCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ServiceAccountMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ServiceAccountMaxAggregateInputType
}

export type GetServiceAccountAggregateType<T extends ServiceAccountAggregateArgs> = {
      [P in keyof T & keyof AggregateServiceAccount]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateServiceAccount[P]>
    : Prisma.GetScalarType<T[P], AggregateServiceAccount[P]>
}




export type ServiceAccountGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ServiceAccountWhereInput
  orderBy?: Prisma.ServiceAccountOrderByWithAggregationInput | Prisma.ServiceAccountOrderByWithAggregationInput[]
  by: Prisma.ServiceAccountScalarFieldEnum[] | Prisma.ServiceAccountScalarFieldEnum
  having?: Prisma.ServiceAccountScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ServiceAccountCountAggregateInputType | true
  _min?: ServiceAccountMinAggregateInputType
  _max?: ServiceAccountMaxAggregateInputType
}

export type ServiceAccountGroupByOutputType = {
  id: string
  meta: PrismaJson.ServiceAccountMeta
  createdAt: Date
  updatedAt: Date
  _count: ServiceAccountCountAggregateOutputType | null
  _min: ServiceAccountMinAggregateOutputType | null
  _max: ServiceAccountMaxAggregateOutputType | null
}

type GetServiceAccountGroupByPayload<T extends ServiceAccountGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ServiceAccountGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ServiceAccountGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ServiceAccountGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ServiceAccountGroupByOutputType[P]>
      }
    >
  >



export type ServiceAccountWhereInput = {
  AND?: Prisma.ServiceAccountWhereInput | Prisma.ServiceAccountWhereInput[]
  OR?: Prisma.ServiceAccountWhereInput[]
  NOT?: Prisma.ServiceAccountWhereInput | Prisma.ServiceAccountWhereInput[]
  id?: Prisma.StringFilter<"ServiceAccount"> | string
  meta?: Prisma.JsonFilter<"ServiceAccount">
  createdAt?: Prisma.DateTimeFilter<"ServiceAccount"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ServiceAccount"> | Date | string
  workers?: Prisma.WorkerListRelationFilter
  artifacts?: Prisma.ArtifactListRelationFilter
  secrets?: Prisma.SecretListRelationFilter
  terminals?: Prisma.TerminalListRelationFilter
  pages?: Prisma.PageListRelationFilter
  customStatuses?: Prisma.InstanceCustomStatusListRelationFilter
  apiKeys?: Prisma.ApiKeyListRelationFilter
}

export type ServiceAccountOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  meta?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  workers?: Prisma.WorkerOrderByRelationAggregateInput
  artifacts?: Prisma.ArtifactOrderByRelationAggregateInput
  secrets?: Prisma.SecretOrderByRelationAggregateInput
  terminals?: Prisma.TerminalOrderByRelationAggregateInput
  pages?: Prisma.PageOrderByRelationAggregateInput
  customStatuses?: Prisma.InstanceCustomStatusOrderByRelationAggregateInput
  apiKeys?: Prisma.ApiKeyOrderByRelationAggregateInput
}

export type ServiceAccountWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.ServiceAccountWhereInput | Prisma.ServiceAccountWhereInput[]
  OR?: Prisma.ServiceAccountWhereInput[]
  NOT?: Prisma.ServiceAccountWhereInput | Prisma.ServiceAccountWhereInput[]
  meta?: Prisma.JsonFilter<"ServiceAccount">
  createdAt?: Prisma.DateTimeFilter<"ServiceAccount"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ServiceAccount"> | Date | string
  workers?: Prisma.WorkerListRelationFilter
  artifacts?: Prisma.ArtifactListRelationFilter
  secrets?: Prisma.SecretListRelationFilter
  terminals?: Prisma.TerminalListRelationFilter
  pages?: Prisma.PageListRelationFilter
  customStatuses?: Prisma.InstanceCustomStatusListRelationFilter
  apiKeys?: Prisma.ApiKeyListRelationFilter
}, "id">

export type ServiceAccountOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  meta?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.ServiceAccountCountOrderByAggregateInput
  _max?: Prisma.ServiceAccountMaxOrderByAggregateInput
  _min?: Prisma.ServiceAccountMinOrderByAggregateInput
}

export type ServiceAccountScalarWhereWithAggregatesInput = {
  AND?: Prisma.ServiceAccountScalarWhereWithAggregatesInput | Prisma.ServiceAccountScalarWhereWithAggregatesInput[]
  OR?: Prisma.ServiceAccountScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ServiceAccountScalarWhereWithAggregatesInput | Prisma.ServiceAccountScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"ServiceAccount"> | string
  meta?: Prisma.JsonWithAggregatesFilter<"ServiceAccount">
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"ServiceAccount"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"ServiceAccount"> | Date | string
}

export type ServiceAccountCreateInput = {
  id?: string
  meta: PrismaJson.ServiceAccountMeta
  createdAt?: Date | string
  updatedAt?: Date | string
  workers?: Prisma.WorkerCreateNestedManyWithoutServiceAccountInput
  artifacts?: Prisma.ArtifactCreateNestedManyWithoutServiceAccountsInput
  secrets?: Prisma.SecretCreateNestedManyWithoutServiceAccountInput
  terminals?: Prisma.TerminalCreateNestedManyWithoutServiceAccountInput
  pages?: Prisma.PageCreateNestedManyWithoutServiceAccountInput
  customStatuses?: Prisma.InstanceCustomStatusCreateNestedManyWithoutServiceAccountInput
  apiKeys?: Prisma.ApiKeyCreateNestedManyWithoutServiceAccountInput
}

export type ServiceAccountUncheckedCreateInput = {
  id?: string
  meta: PrismaJson.ServiceAccountMeta
  createdAt?: Date | string
  updatedAt?: Date | string
  workers?: Prisma.WorkerUncheckedCreateNestedManyWithoutServiceAccountInput
  artifacts?: Prisma.ArtifactUncheckedCreateNestedManyWithoutServiceAccountsInput
  secrets?: Prisma.SecretUncheckedCreateNestedManyWithoutServiceAccountInput
  terminals?: Prisma.TerminalUncheckedCreateNestedManyWithoutServiceAccountInput
  pages?: Prisma.PageUncheckedCreateNestedManyWithoutServiceAccountInput
  customStatuses?: Prisma.InstanceCustomStatusUncheckedCreateNestedManyWithoutServiceAccountInput
  apiKeys?: Prisma.ApiKeyUncheckedCreateNestedManyWithoutServiceAccountInput
}

export type ServiceAccountUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.ServiceAccountMeta
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  workers?: Prisma.WorkerUpdateManyWithoutServiceAccountNestedInput
  artifacts?: Prisma.ArtifactUpdateManyWithoutServiceAccountsNestedInput
  secrets?: Prisma.SecretUpdateManyWithoutServiceAccountNestedInput
  terminals?: Prisma.TerminalUpdateManyWithoutServiceAccountNestedInput
  pages?: Prisma.PageUpdateManyWithoutServiceAccountNestedInput
  customStatuses?: Prisma.InstanceCustomStatusUpdateManyWithoutServiceAccountNestedInput
  apiKeys?: Prisma.ApiKeyUpdateManyWithoutServiceAccountNestedInput
}

export type ServiceAccountUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.ServiceAccountMeta
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  workers?: Prisma.WorkerUncheckedUpdateManyWithoutServiceAccountNestedInput
  artifacts?: Prisma.ArtifactUncheckedUpdateManyWithoutServiceAccountsNestedInput
  secrets?: Prisma.SecretUncheckedUpdateManyWithoutServiceAccountNestedInput
  terminals?: Prisma.TerminalUncheckedUpdateManyWithoutServiceAccountNestedInput
  pages?: Prisma.PageUncheckedUpdateManyWithoutServiceAccountNestedInput
  customStatuses?: Prisma.InstanceCustomStatusUncheckedUpdateManyWithoutServiceAccountNestedInput
  apiKeys?: Prisma.ApiKeyUncheckedUpdateManyWithoutServiceAccountNestedInput
}

export type ServiceAccountCreateManyInput = {
  id?: string
  meta: PrismaJson.ServiceAccountMeta
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ServiceAccountUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.ServiceAccountMeta
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ServiceAccountUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.ServiceAccountMeta
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ServiceAccountScalarRelationFilter = {
  is?: Prisma.ServiceAccountWhereInput
  isNot?: Prisma.ServiceAccountWhereInput
}

export type ServiceAccountListRelationFilter = {
  every?: Prisma.ServiceAccountWhereInput
  some?: Prisma.ServiceAccountWhereInput
  none?: Prisma.ServiceAccountWhereInput
}

export type ServiceAccountOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ServiceAccountNullableScalarRelationFilter = {
  is?: Prisma.ServiceAccountWhereInput | null
  isNot?: Prisma.ServiceAccountWhereInput | null
}

export type ServiceAccountCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  meta?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ServiceAccountMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ServiceAccountMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ServiceAccountCreateNestedOneWithoutApiKeysInput = {
  create?: Prisma.XOR<Prisma.ServiceAccountCreateWithoutApiKeysInput, Prisma.ServiceAccountUncheckedCreateWithoutApiKeysInput>
  connectOrCreate?: Prisma.ServiceAccountCreateOrConnectWithoutApiKeysInput
  connect?: Prisma.ServiceAccountWhereUniqueInput
}

export type ServiceAccountUpdateOneRequiredWithoutApiKeysNestedInput = {
  create?: Prisma.XOR<Prisma.ServiceAccountCreateWithoutApiKeysInput, Prisma.ServiceAccountUncheckedCreateWithoutApiKeysInput>
  connectOrCreate?: Prisma.ServiceAccountCreateOrConnectWithoutApiKeysInput
  upsert?: Prisma.ServiceAccountUpsertWithoutApiKeysInput
  connect?: Prisma.ServiceAccountWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ServiceAccountUpdateToOneWithWhereWithoutApiKeysInput, Prisma.ServiceAccountUpdateWithoutApiKeysInput>, Prisma.ServiceAccountUncheckedUpdateWithoutApiKeysInput>
}

export type ServiceAccountCreateNestedManyWithoutArtifactsInput = {
  create?: Prisma.XOR<Prisma.ServiceAccountCreateWithoutArtifactsInput, Prisma.ServiceAccountUncheckedCreateWithoutArtifactsInput> | Prisma.ServiceAccountCreateWithoutArtifactsInput[] | Prisma.ServiceAccountUncheckedCreateWithoutArtifactsInput[]
  connectOrCreate?: Prisma.ServiceAccountCreateOrConnectWithoutArtifactsInput | Prisma.ServiceAccountCreateOrConnectWithoutArtifactsInput[]
  connect?: Prisma.ServiceAccountWhereUniqueInput | Prisma.ServiceAccountWhereUniqueInput[]
}

export type ServiceAccountUncheckedCreateNestedManyWithoutArtifactsInput = {
  create?: Prisma.XOR<Prisma.ServiceAccountCreateWithoutArtifactsInput, Prisma.ServiceAccountUncheckedCreateWithoutArtifactsInput> | Prisma.ServiceAccountCreateWithoutArtifactsInput[] | Prisma.ServiceAccountUncheckedCreateWithoutArtifactsInput[]
  connectOrCreate?: Prisma.ServiceAccountCreateOrConnectWithoutArtifactsInput | Prisma.ServiceAccountCreateOrConnectWithoutArtifactsInput[]
  connect?: Prisma.ServiceAccountWhereUniqueInput | Prisma.ServiceAccountWhereUniqueInput[]
}

export type ServiceAccountUpdateManyWithoutArtifactsNestedInput = {
  create?: Prisma.XOR<Prisma.ServiceAccountCreateWithoutArtifactsInput, Prisma.ServiceAccountUncheckedCreateWithoutArtifactsInput> | Prisma.ServiceAccountCreateWithoutArtifactsInput[] | Prisma.ServiceAccountUncheckedCreateWithoutArtifactsInput[]
  connectOrCreate?: Prisma.ServiceAccountCreateOrConnectWithoutArtifactsInput | Prisma.ServiceAccountCreateOrConnectWithoutArtifactsInput[]
  upsert?: Prisma.ServiceAccountUpsertWithWhereUniqueWithoutArtifactsInput | Prisma.ServiceAccountUpsertWithWhereUniqueWithoutArtifactsInput[]
  set?: Prisma.ServiceAccountWhereUniqueInput | Prisma.ServiceAccountWhereUniqueInput[]
  disconnect?: Prisma.ServiceAccountWhereUniqueInput | Prisma.ServiceAccountWhereUniqueInput[]
  delete?: Prisma.ServiceAccountWhereUniqueInput | Prisma.ServiceAccountWhereUniqueInput[]
  connect?: Prisma.ServiceAccountWhereUniqueInput | Prisma.ServiceAccountWhereUniqueInput[]
  update?: Prisma.ServiceAccountUpdateWithWhereUniqueWithoutArtifactsInput | Prisma.ServiceAccountUpdateWithWhereUniqueWithoutArtifactsInput[]
  updateMany?: Prisma.ServiceAccountUpdateManyWithWhereWithoutArtifactsInput | Prisma.ServiceAccountUpdateManyWithWhereWithoutArtifactsInput[]
  deleteMany?: Prisma.ServiceAccountScalarWhereInput | Prisma.ServiceAccountScalarWhereInput[]
}

export type ServiceAccountUncheckedUpdateManyWithoutArtifactsNestedInput = {
  create?: Prisma.XOR<Prisma.ServiceAccountCreateWithoutArtifactsInput, Prisma.ServiceAccountUncheckedCreateWithoutArtifactsInput> | Prisma.ServiceAccountCreateWithoutArtifactsInput[] | Prisma.ServiceAccountUncheckedCreateWithoutArtifactsInput[]
  connectOrCreate?: Prisma.ServiceAccountCreateOrConnectWithoutArtifactsInput | Prisma.ServiceAccountCreateOrConnectWithoutArtifactsInput[]
  upsert?: Prisma.ServiceAccountUpsertWithWhereUniqueWithoutArtifactsInput | Prisma.ServiceAccountUpsertWithWhereUniqueWithoutArtifactsInput[]
  set?: Prisma.ServiceAccountWhereUniqueInput | Prisma.ServiceAccountWhereUniqueInput[]
  disconnect?: Prisma.ServiceAccountWhereUniqueInput | Prisma.ServiceAccountWhereUniqueInput[]
  delete?: Prisma.ServiceAccountWhereUniqueInput | Prisma.ServiceAccountWhereUniqueInput[]
  connect?: Prisma.ServiceAccountWhereUniqueInput | Prisma.ServiceAccountWhereUniqueInput[]
  update?: Prisma.ServiceAccountUpdateWithWhereUniqueWithoutArtifactsInput | Prisma.ServiceAccountUpdateWithWhereUniqueWithoutArtifactsInput[]
  updateMany?: Prisma.ServiceAccountUpdateManyWithWhereWithoutArtifactsInput | Prisma.ServiceAccountUpdateManyWithWhereWithoutArtifactsInput[]
  deleteMany?: Prisma.ServiceAccountScalarWhereInput | Prisma.ServiceAccountScalarWhereInput[]
}

export type ServiceAccountCreateNestedOneWithoutCustomStatusesInput = {
  create?: Prisma.XOR<Prisma.ServiceAccountCreateWithoutCustomStatusesInput, Prisma.ServiceAccountUncheckedCreateWithoutCustomStatusesInput>
  connectOrCreate?: Prisma.ServiceAccountCreateOrConnectWithoutCustomStatusesInput
  connect?: Prisma.ServiceAccountWhereUniqueInput
}

export type ServiceAccountUpdateOneRequiredWithoutCustomStatusesNestedInput = {
  create?: Prisma.XOR<Prisma.ServiceAccountCreateWithoutCustomStatusesInput, Prisma.ServiceAccountUncheckedCreateWithoutCustomStatusesInput>
  connectOrCreate?: Prisma.ServiceAccountCreateOrConnectWithoutCustomStatusesInput
  upsert?: Prisma.ServiceAccountUpsertWithoutCustomStatusesInput
  connect?: Prisma.ServiceAccountWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ServiceAccountUpdateToOneWithWhereWithoutCustomStatusesInput, Prisma.ServiceAccountUpdateWithoutCustomStatusesInput>, Prisma.ServiceAccountUncheckedUpdateWithoutCustomStatusesInput>
}

export type ServiceAccountCreateNestedOneWithoutPagesInput = {
  create?: Prisma.XOR<Prisma.ServiceAccountCreateWithoutPagesInput, Prisma.ServiceAccountUncheckedCreateWithoutPagesInput>
  connectOrCreate?: Prisma.ServiceAccountCreateOrConnectWithoutPagesInput
  connect?: Prisma.ServiceAccountWhereUniqueInput
}

export type ServiceAccountUpdateOneWithoutPagesNestedInput = {
  create?: Prisma.XOR<Prisma.ServiceAccountCreateWithoutPagesInput, Prisma.ServiceAccountUncheckedCreateWithoutPagesInput>
  connectOrCreate?: Prisma.ServiceAccountCreateOrConnectWithoutPagesInput
  upsert?: Prisma.ServiceAccountUpsertWithoutPagesInput
  disconnect?: Prisma.ServiceAccountWhereInput | boolean
  delete?: Prisma.ServiceAccountWhereInput | boolean
  connect?: Prisma.ServiceAccountWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ServiceAccountUpdateToOneWithWhereWithoutPagesInput, Prisma.ServiceAccountUpdateWithoutPagesInput>, Prisma.ServiceAccountUncheckedUpdateWithoutPagesInput>
}

export type ServiceAccountCreateNestedOneWithoutSecretsInput = {
  create?: Prisma.XOR<Prisma.ServiceAccountCreateWithoutSecretsInput, Prisma.ServiceAccountUncheckedCreateWithoutSecretsInput>
  connectOrCreate?: Prisma.ServiceAccountCreateOrConnectWithoutSecretsInput
  connect?: Prisma.ServiceAccountWhereUniqueInput
}

export type ServiceAccountUpdateOneWithoutSecretsNestedInput = {
  create?: Prisma.XOR<Prisma.ServiceAccountCreateWithoutSecretsInput, Prisma.ServiceAccountUncheckedCreateWithoutSecretsInput>
  connectOrCreate?: Prisma.ServiceAccountCreateOrConnectWithoutSecretsInput
  upsert?: Prisma.ServiceAccountUpsertWithoutSecretsInput
  disconnect?: Prisma.ServiceAccountWhereInput | boolean
  delete?: Prisma.ServiceAccountWhereInput | boolean
  connect?: Prisma.ServiceAccountWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ServiceAccountUpdateToOneWithWhereWithoutSecretsInput, Prisma.ServiceAccountUpdateWithoutSecretsInput>, Prisma.ServiceAccountUncheckedUpdateWithoutSecretsInput>
}

export type ServiceAccountCreateNestedOneWithoutTerminalsInput = {
  create?: Prisma.XOR<Prisma.ServiceAccountCreateWithoutTerminalsInput, Prisma.ServiceAccountUncheckedCreateWithoutTerminalsInput>
  connectOrCreate?: Prisma.ServiceAccountCreateOrConnectWithoutTerminalsInput
  connect?: Prisma.ServiceAccountWhereUniqueInput
}

export type ServiceAccountUpdateOneWithoutTerminalsNestedInput = {
  create?: Prisma.XOR<Prisma.ServiceAccountCreateWithoutTerminalsInput, Prisma.ServiceAccountUncheckedCreateWithoutTerminalsInput>
  connectOrCreate?: Prisma.ServiceAccountCreateOrConnectWithoutTerminalsInput
  upsert?: Prisma.ServiceAccountUpsertWithoutTerminalsInput
  disconnect?: Prisma.ServiceAccountWhereInput | boolean
  delete?: Prisma.ServiceAccountWhereInput | boolean
  connect?: Prisma.ServiceAccountWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ServiceAccountUpdateToOneWithWhereWithoutTerminalsInput, Prisma.ServiceAccountUpdateWithoutTerminalsInput>, Prisma.ServiceAccountUncheckedUpdateWithoutTerminalsInput>
}

export type ServiceAccountCreateNestedOneWithoutWorkersInput = {
  create?: Prisma.XOR<Prisma.ServiceAccountCreateWithoutWorkersInput, Prisma.ServiceAccountUncheckedCreateWithoutWorkersInput>
  connectOrCreate?: Prisma.ServiceAccountCreateOrConnectWithoutWorkersInput
  connect?: Prisma.ServiceAccountWhereUniqueInput
}

export type ServiceAccountUpdateOneRequiredWithoutWorkersNestedInput = {
  create?: Prisma.XOR<Prisma.ServiceAccountCreateWithoutWorkersInput, Prisma.ServiceAccountUncheckedCreateWithoutWorkersInput>
  connectOrCreate?: Prisma.ServiceAccountCreateOrConnectWithoutWorkersInput
  upsert?: Prisma.ServiceAccountUpsertWithoutWorkersInput
  connect?: Prisma.ServiceAccountWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ServiceAccountUpdateToOneWithWhereWithoutWorkersInput, Prisma.ServiceAccountUpdateWithoutWorkersInput>, Prisma.ServiceAccountUncheckedUpdateWithoutWorkersInput>
}

export type ServiceAccountCreateWithoutApiKeysInput = {
  id?: string
  meta: PrismaJson.ServiceAccountMeta
  createdAt?: Date | string
  updatedAt?: Date | string
  workers?: Prisma.WorkerCreateNestedManyWithoutServiceAccountInput
  artifacts?: Prisma.ArtifactCreateNestedManyWithoutServiceAccountsInput
  secrets?: Prisma.SecretCreateNestedManyWithoutServiceAccountInput
  terminals?: Prisma.TerminalCreateNestedManyWithoutServiceAccountInput
  pages?: Prisma.PageCreateNestedManyWithoutServiceAccountInput
  customStatuses?: Prisma.InstanceCustomStatusCreateNestedManyWithoutServiceAccountInput
}

export type ServiceAccountUncheckedCreateWithoutApiKeysInput = {
  id?: string
  meta: PrismaJson.ServiceAccountMeta
  createdAt?: Date | string
  updatedAt?: Date | string
  workers?: Prisma.WorkerUncheckedCreateNestedManyWithoutServiceAccountInput
  artifacts?: Prisma.ArtifactUncheckedCreateNestedManyWithoutServiceAccountsInput
  secrets?: Prisma.SecretUncheckedCreateNestedManyWithoutServiceAccountInput
  terminals?: Prisma.TerminalUncheckedCreateNestedManyWithoutServiceAccountInput
  pages?: Prisma.PageUncheckedCreateNestedManyWithoutServiceAccountInput
  customStatuses?: Prisma.InstanceCustomStatusUncheckedCreateNestedManyWithoutServiceAccountInput
}

export type ServiceAccountCreateOrConnectWithoutApiKeysInput = {
  where: Prisma.ServiceAccountWhereUniqueInput
  create: Prisma.XOR<Prisma.ServiceAccountCreateWithoutApiKeysInput, Prisma.ServiceAccountUncheckedCreateWithoutApiKeysInput>
}

export type ServiceAccountUpsertWithoutApiKeysInput = {
  update: Prisma.XOR<Prisma.ServiceAccountUpdateWithoutApiKeysInput, Prisma.ServiceAccountUncheckedUpdateWithoutApiKeysInput>
  create: Prisma.XOR<Prisma.ServiceAccountCreateWithoutApiKeysInput, Prisma.ServiceAccountUncheckedCreateWithoutApiKeysInput>
  where?: Prisma.ServiceAccountWhereInput
}

export type ServiceAccountUpdateToOneWithWhereWithoutApiKeysInput = {
  where?: Prisma.ServiceAccountWhereInput
  data: Prisma.XOR<Prisma.ServiceAccountUpdateWithoutApiKeysInput, Prisma.ServiceAccountUncheckedUpdateWithoutApiKeysInput>
}

export type ServiceAccountUpdateWithoutApiKeysInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.ServiceAccountMeta
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  workers?: Prisma.WorkerUpdateManyWithoutServiceAccountNestedInput
  artifacts?: Prisma.ArtifactUpdateManyWithoutServiceAccountsNestedInput
  secrets?: Prisma.SecretUpdateManyWithoutServiceAccountNestedInput
  terminals?: Prisma.TerminalUpdateManyWithoutServiceAccountNestedInput
  pages?: Prisma.PageUpdateManyWithoutServiceAccountNestedInput
  customStatuses?: Prisma.InstanceCustomStatusUpdateManyWithoutServiceAccountNestedInput
}

export type ServiceAccountUncheckedUpdateWithoutApiKeysInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.ServiceAccountMeta
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  workers?: Prisma.WorkerUncheckedUpdateManyWithoutServiceAccountNestedInput
  artifacts?: Prisma.ArtifactUncheckedUpdateManyWithoutServiceAccountsNestedInput
  secrets?: Prisma.SecretUncheckedUpdateManyWithoutServiceAccountNestedInput
  terminals?: Prisma.TerminalUncheckedUpdateManyWithoutServiceAccountNestedInput
  pages?: Prisma.PageUncheckedUpdateManyWithoutServiceAccountNestedInput
  customStatuses?: Prisma.InstanceCustomStatusUncheckedUpdateManyWithoutServiceAccountNestedInput
}

export type ServiceAccountCreateWithoutArtifactsInput = {
  id?: string
  meta: PrismaJson.ServiceAccountMeta
  createdAt?: Date | string
  updatedAt?: Date | string
  workers?: Prisma.WorkerCreateNestedManyWithoutServiceAccountInput
  secrets?: Prisma.SecretCreateNestedManyWithoutServiceAccountInput
  terminals?: Prisma.TerminalCreateNestedManyWithoutServiceAccountInput
  pages?: Prisma.PageCreateNestedManyWithoutServiceAccountInput
  customStatuses?: Prisma.InstanceCustomStatusCreateNestedManyWithoutServiceAccountInput
  apiKeys?: Prisma.ApiKeyCreateNestedManyWithoutServiceAccountInput
}

export type ServiceAccountUncheckedCreateWithoutArtifactsInput = {
  id?: string
  meta: PrismaJson.ServiceAccountMeta
  createdAt?: Date | string
  updatedAt?: Date | string
  workers?: Prisma.WorkerUncheckedCreateNestedManyWithoutServiceAccountInput
  secrets?: Prisma.SecretUncheckedCreateNestedManyWithoutServiceAccountInput
  terminals?: Prisma.TerminalUncheckedCreateNestedManyWithoutServiceAccountInput
  pages?: Prisma.PageUncheckedCreateNestedManyWithoutServiceAccountInput
  customStatuses?: Prisma.InstanceCustomStatusUncheckedCreateNestedManyWithoutServiceAccountInput
  apiKeys?: Prisma.ApiKeyUncheckedCreateNestedManyWithoutServiceAccountInput
}

export type ServiceAccountCreateOrConnectWithoutArtifactsInput = {
  where: Prisma.ServiceAccountWhereUniqueInput
  create: Prisma.XOR<Prisma.ServiceAccountCreateWithoutArtifactsInput, Prisma.ServiceAccountUncheckedCreateWithoutArtifactsInput>
}

export type ServiceAccountUpsertWithWhereUniqueWithoutArtifactsInput = {
  where: Prisma.ServiceAccountWhereUniqueInput
  update: Prisma.XOR<Prisma.ServiceAccountUpdateWithoutArtifactsInput, Prisma.ServiceAccountUncheckedUpdateWithoutArtifactsInput>
  create: Prisma.XOR<Prisma.ServiceAccountCreateWithoutArtifactsInput, Prisma.ServiceAccountUncheckedCreateWithoutArtifactsInput>
}

export type ServiceAccountUpdateWithWhereUniqueWithoutArtifactsInput = {
  where: Prisma.ServiceAccountWhereUniqueInput
  data: Prisma.XOR<Prisma.ServiceAccountUpdateWithoutArtifactsInput, Prisma.ServiceAccountUncheckedUpdateWithoutArtifactsInput>
}

export type ServiceAccountUpdateManyWithWhereWithoutArtifactsInput = {
  where: Prisma.ServiceAccountScalarWhereInput
  data: Prisma.XOR<Prisma.ServiceAccountUpdateManyMutationInput, Prisma.ServiceAccountUncheckedUpdateManyWithoutArtifactsInput>
}

export type ServiceAccountScalarWhereInput = {
  AND?: Prisma.ServiceAccountScalarWhereInput | Prisma.ServiceAccountScalarWhereInput[]
  OR?: Prisma.ServiceAccountScalarWhereInput[]
  NOT?: Prisma.ServiceAccountScalarWhereInput | Prisma.ServiceAccountScalarWhereInput[]
  id?: Prisma.StringFilter<"ServiceAccount"> | string
  meta?: Prisma.JsonFilter<"ServiceAccount">
  createdAt?: Prisma.DateTimeFilter<"ServiceAccount"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ServiceAccount"> | Date | string
}

export type ServiceAccountCreateWithoutCustomStatusesInput = {
  id?: string
  meta: PrismaJson.ServiceAccountMeta
  createdAt?: Date | string
  updatedAt?: Date | string
  workers?: Prisma.WorkerCreateNestedManyWithoutServiceAccountInput
  artifacts?: Prisma.ArtifactCreateNestedManyWithoutServiceAccountsInput
  secrets?: Prisma.SecretCreateNestedManyWithoutServiceAccountInput
  terminals?: Prisma.TerminalCreateNestedManyWithoutServiceAccountInput
  pages?: Prisma.PageCreateNestedManyWithoutServiceAccountInput
  apiKeys?: Prisma.ApiKeyCreateNestedManyWithoutServiceAccountInput
}

export type ServiceAccountUncheckedCreateWithoutCustomStatusesInput = {
  id?: string
  meta: PrismaJson.ServiceAccountMeta
  createdAt?: Date | string
  updatedAt?: Date | string
  workers?: Prisma.WorkerUncheckedCreateNestedManyWithoutServiceAccountInput
  artifacts?: Prisma.ArtifactUncheckedCreateNestedManyWithoutServiceAccountsInput
  secrets?: Prisma.SecretUncheckedCreateNestedManyWithoutServiceAccountInput
  terminals?: Prisma.TerminalUncheckedCreateNestedManyWithoutServiceAccountInput
  pages?: Prisma.PageUncheckedCreateNestedManyWithoutServiceAccountInput
  apiKeys?: Prisma.ApiKeyUncheckedCreateNestedManyWithoutServiceAccountInput
}

export type ServiceAccountCreateOrConnectWithoutCustomStatusesInput = {
  where: Prisma.ServiceAccountWhereUniqueInput
  create: Prisma.XOR<Prisma.ServiceAccountCreateWithoutCustomStatusesInput, Prisma.ServiceAccountUncheckedCreateWithoutCustomStatusesInput>
}

export type ServiceAccountUpsertWithoutCustomStatusesInput = {
  update: Prisma.XOR<Prisma.ServiceAccountUpdateWithoutCustomStatusesInput, Prisma.ServiceAccountUncheckedUpdateWithoutCustomStatusesInput>
  create: Prisma.XOR<Prisma.ServiceAccountCreateWithoutCustomStatusesInput, Prisma.ServiceAccountUncheckedCreateWithoutCustomStatusesInput>
  where?: Prisma.ServiceAccountWhereInput
}

export type ServiceAccountUpdateToOneWithWhereWithoutCustomStatusesInput = {
  where?: Prisma.ServiceAccountWhereInput
  data: Prisma.XOR<Prisma.ServiceAccountUpdateWithoutCustomStatusesInput, Prisma.ServiceAccountUncheckedUpdateWithoutCustomStatusesInput>
}

export type ServiceAccountUpdateWithoutCustomStatusesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.ServiceAccountMeta
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  workers?: Prisma.WorkerUpdateManyWithoutServiceAccountNestedInput
  artifacts?: Prisma.ArtifactUpdateManyWithoutServiceAccountsNestedInput
  secrets?: Prisma.SecretUpdateManyWithoutServiceAccountNestedInput
  terminals?: Prisma.TerminalUpdateManyWithoutServiceAccountNestedInput
  pages?: Prisma.PageUpdateManyWithoutServiceAccountNestedInput
  apiKeys?: Prisma.ApiKeyUpdateManyWithoutServiceAccountNestedInput
}

export type ServiceAccountUncheckedUpdateWithoutCustomStatusesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.ServiceAccountMeta
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  workers?: Prisma.WorkerUncheckedUpdateManyWithoutServiceAccountNestedInput
  artifacts?: Prisma.ArtifactUncheckedUpdateManyWithoutServiceAccountsNestedInput
  secrets?: Prisma.SecretUncheckedUpdateManyWithoutServiceAccountNestedInput
  terminals?: Prisma.TerminalUncheckedUpdateManyWithoutServiceAccountNestedInput
  pages?: Prisma.PageUncheckedUpdateManyWithoutServiceAccountNestedInput
  apiKeys?: Prisma.ApiKeyUncheckedUpdateManyWithoutServiceAccountNestedInput
}

export type ServiceAccountCreateWithoutPagesInput = {
  id?: string
  meta: PrismaJson.ServiceAccountMeta
  createdAt?: Date | string
  updatedAt?: Date | string
  workers?: Prisma.WorkerCreateNestedManyWithoutServiceAccountInput
  artifacts?: Prisma.ArtifactCreateNestedManyWithoutServiceAccountsInput
  secrets?: Prisma.SecretCreateNestedManyWithoutServiceAccountInput
  terminals?: Prisma.TerminalCreateNestedManyWithoutServiceAccountInput
  customStatuses?: Prisma.InstanceCustomStatusCreateNestedManyWithoutServiceAccountInput
  apiKeys?: Prisma.ApiKeyCreateNestedManyWithoutServiceAccountInput
}

export type ServiceAccountUncheckedCreateWithoutPagesInput = {
  id?: string
  meta: PrismaJson.ServiceAccountMeta
  createdAt?: Date | string
  updatedAt?: Date | string
  workers?: Prisma.WorkerUncheckedCreateNestedManyWithoutServiceAccountInput
  artifacts?: Prisma.ArtifactUncheckedCreateNestedManyWithoutServiceAccountsInput
  secrets?: Prisma.SecretUncheckedCreateNestedManyWithoutServiceAccountInput
  terminals?: Prisma.TerminalUncheckedCreateNestedManyWithoutServiceAccountInput
  customStatuses?: Prisma.InstanceCustomStatusUncheckedCreateNestedManyWithoutServiceAccountInput
  apiKeys?: Prisma.ApiKeyUncheckedCreateNestedManyWithoutServiceAccountInput
}

export type ServiceAccountCreateOrConnectWithoutPagesInput = {
  where: Prisma.ServiceAccountWhereUniqueInput
  create: Prisma.XOR<Prisma.ServiceAccountCreateWithoutPagesInput, Prisma.ServiceAccountUncheckedCreateWithoutPagesInput>
}

export type ServiceAccountUpsertWithoutPagesInput = {
  update: Prisma.XOR<Prisma.ServiceAccountUpdateWithoutPagesInput, Prisma.ServiceAccountUncheckedUpdateWithoutPagesInput>
  create: Prisma.XOR<Prisma.ServiceAccountCreateWithoutPagesInput, Prisma.ServiceAccountUncheckedCreateWithoutPagesInput>
  where?: Prisma.ServiceAccountWhereInput
}

export type ServiceAccountUpdateToOneWithWhereWithoutPagesInput = {
  where?: Prisma.ServiceAccountWhereInput
  data: Prisma.XOR<Prisma.ServiceAccountUpdateWithoutPagesInput, Prisma.ServiceAccountUncheckedUpdateWithoutPagesInput>
}

export type ServiceAccountUpdateWithoutPagesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.ServiceAccountMeta
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  workers?: Prisma.WorkerUpdateManyWithoutServiceAccountNestedInput
  artifacts?: Prisma.ArtifactUpdateManyWithoutServiceAccountsNestedInput
  secrets?: Prisma.SecretUpdateManyWithoutServiceAccountNestedInput
  terminals?: Prisma.TerminalUpdateManyWithoutServiceAccountNestedInput
  customStatuses?: Prisma.InstanceCustomStatusUpdateManyWithoutServiceAccountNestedInput
  apiKeys?: Prisma.ApiKeyUpdateManyWithoutServiceAccountNestedInput
}

export type ServiceAccountUncheckedUpdateWithoutPagesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.ServiceAccountMeta
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  workers?: Prisma.WorkerUncheckedUpdateManyWithoutServiceAccountNestedInput
  artifacts?: Prisma.ArtifactUncheckedUpdateManyWithoutServiceAccountsNestedInput
  secrets?: Prisma.SecretUncheckedUpdateManyWithoutServiceAccountNestedInput
  terminals?: Prisma.TerminalUncheckedUpdateManyWithoutServiceAccountNestedInput
  customStatuses?: Prisma.InstanceCustomStatusUncheckedUpdateManyWithoutServiceAccountNestedInput
  apiKeys?: Prisma.ApiKeyUncheckedUpdateManyWithoutServiceAccountNestedInput
}

export type ServiceAccountCreateWithoutSecretsInput = {
  id?: string
  meta: PrismaJson.ServiceAccountMeta
  createdAt?: Date | string
  updatedAt?: Date | string
  workers?: Prisma.WorkerCreateNestedManyWithoutServiceAccountInput
  artifacts?: Prisma.ArtifactCreateNestedManyWithoutServiceAccountsInput
  terminals?: Prisma.TerminalCreateNestedManyWithoutServiceAccountInput
  pages?: Prisma.PageCreateNestedManyWithoutServiceAccountInput
  customStatuses?: Prisma.InstanceCustomStatusCreateNestedManyWithoutServiceAccountInput
  apiKeys?: Prisma.ApiKeyCreateNestedManyWithoutServiceAccountInput
}

export type ServiceAccountUncheckedCreateWithoutSecretsInput = {
  id?: string
  meta: PrismaJson.ServiceAccountMeta
  createdAt?: Date | string
  updatedAt?: Date | string
  workers?: Prisma.WorkerUncheckedCreateNestedManyWithoutServiceAccountInput
  artifacts?: Prisma.ArtifactUncheckedCreateNestedManyWithoutServiceAccountsInput
  terminals?: Prisma.TerminalUncheckedCreateNestedManyWithoutServiceAccountInput
  pages?: Prisma.PageUncheckedCreateNestedManyWithoutServiceAccountInput
  customStatuses?: Prisma.InstanceCustomStatusUncheckedCreateNestedManyWithoutServiceAccountInput
  apiKeys?: Prisma.ApiKeyUncheckedCreateNestedManyWithoutServiceAccountInput
}

export type ServiceAccountCreateOrConnectWithoutSecretsInput = {
  where: Prisma.ServiceAccountWhereUniqueInput
  create: Prisma.XOR<Prisma.ServiceAccountCreateWithoutSecretsInput, Prisma.ServiceAccountUncheckedCreateWithoutSecretsInput>
}

export type ServiceAccountUpsertWithoutSecretsInput = {
  update: Prisma.XOR<Prisma.ServiceAccountUpdateWithoutSecretsInput, Prisma.ServiceAccountUncheckedUpdateWithoutSecretsInput>
  create: Prisma.XOR<Prisma.ServiceAccountCreateWithoutSecretsInput, Prisma.ServiceAccountUncheckedCreateWithoutSecretsInput>
  where?: Prisma.ServiceAccountWhereInput
}

export type ServiceAccountUpdateToOneWithWhereWithoutSecretsInput = {
  where?: Prisma.ServiceAccountWhereInput
  data: Prisma.XOR<Prisma.ServiceAccountUpdateWithoutSecretsInput, Prisma.ServiceAccountUncheckedUpdateWithoutSecretsInput>
}

export type ServiceAccountUpdateWithoutSecretsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.ServiceAccountMeta
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  workers?: Prisma.WorkerUpdateManyWithoutServiceAccountNestedInput
  artifacts?: Prisma.ArtifactUpdateManyWithoutServiceAccountsNestedInput
  terminals?: Prisma.TerminalUpdateManyWithoutServiceAccountNestedInput
  pages?: Prisma.PageUpdateManyWithoutServiceAccountNestedInput
  customStatuses?: Prisma.InstanceCustomStatusUpdateManyWithoutServiceAccountNestedInput
  apiKeys?: Prisma.ApiKeyUpdateManyWithoutServiceAccountNestedInput
}

export type ServiceAccountUncheckedUpdateWithoutSecretsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.ServiceAccountMeta
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  workers?: Prisma.WorkerUncheckedUpdateManyWithoutServiceAccountNestedInput
  artifacts?: Prisma.ArtifactUncheckedUpdateManyWithoutServiceAccountsNestedInput
  terminals?: Prisma.TerminalUncheckedUpdateManyWithoutServiceAccountNestedInput
  pages?: Prisma.PageUncheckedUpdateManyWithoutServiceAccountNestedInput
  customStatuses?: Prisma.InstanceCustomStatusUncheckedUpdateManyWithoutServiceAccountNestedInput
  apiKeys?: Prisma.ApiKeyUncheckedUpdateManyWithoutServiceAccountNestedInput
}

export type ServiceAccountCreateWithoutTerminalsInput = {
  id?: string
  meta: PrismaJson.ServiceAccountMeta
  createdAt?: Date | string
  updatedAt?: Date | string
  workers?: Prisma.WorkerCreateNestedManyWithoutServiceAccountInput
  artifacts?: Prisma.ArtifactCreateNestedManyWithoutServiceAccountsInput
  secrets?: Prisma.SecretCreateNestedManyWithoutServiceAccountInput
  pages?: Prisma.PageCreateNestedManyWithoutServiceAccountInput
  customStatuses?: Prisma.InstanceCustomStatusCreateNestedManyWithoutServiceAccountInput
  apiKeys?: Prisma.ApiKeyCreateNestedManyWithoutServiceAccountInput
}

export type ServiceAccountUncheckedCreateWithoutTerminalsInput = {
  id?: string
  meta: PrismaJson.ServiceAccountMeta
  createdAt?: Date | string
  updatedAt?: Date | string
  workers?: Prisma.WorkerUncheckedCreateNestedManyWithoutServiceAccountInput
  artifacts?: Prisma.ArtifactUncheckedCreateNestedManyWithoutServiceAccountsInput
  secrets?: Prisma.SecretUncheckedCreateNestedManyWithoutServiceAccountInput
  pages?: Prisma.PageUncheckedCreateNestedManyWithoutServiceAccountInput
  customStatuses?: Prisma.InstanceCustomStatusUncheckedCreateNestedManyWithoutServiceAccountInput
  apiKeys?: Prisma.ApiKeyUncheckedCreateNestedManyWithoutServiceAccountInput
}

export type ServiceAccountCreateOrConnectWithoutTerminalsInput = {
  where: Prisma.ServiceAccountWhereUniqueInput
  create: Prisma.XOR<Prisma.ServiceAccountCreateWithoutTerminalsInput, Prisma.ServiceAccountUncheckedCreateWithoutTerminalsInput>
}

export type ServiceAccountUpsertWithoutTerminalsInput = {
  update: Prisma.XOR<Prisma.ServiceAccountUpdateWithoutTerminalsInput, Prisma.ServiceAccountUncheckedUpdateWithoutTerminalsInput>
  create: Prisma.XOR<Prisma.ServiceAccountCreateWithoutTerminalsInput, Prisma.ServiceAccountUncheckedCreateWithoutTerminalsInput>
  where?: Prisma.ServiceAccountWhereInput
}

export type ServiceAccountUpdateToOneWithWhereWithoutTerminalsInput = {
  where?: Prisma.ServiceAccountWhereInput
  data: Prisma.XOR<Prisma.ServiceAccountUpdateWithoutTerminalsInput, Prisma.ServiceAccountUncheckedUpdateWithoutTerminalsInput>
}

export type ServiceAccountUpdateWithoutTerminalsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.ServiceAccountMeta
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  workers?: Prisma.WorkerUpdateManyWithoutServiceAccountNestedInput
  artifacts?: Prisma.ArtifactUpdateManyWithoutServiceAccountsNestedInput
  secrets?: Prisma.SecretUpdateManyWithoutServiceAccountNestedInput
  pages?: Prisma.PageUpdateManyWithoutServiceAccountNestedInput
  customStatuses?: Prisma.InstanceCustomStatusUpdateManyWithoutServiceAccountNestedInput
  apiKeys?: Prisma.ApiKeyUpdateManyWithoutServiceAccountNestedInput
}

export type ServiceAccountUncheckedUpdateWithoutTerminalsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.ServiceAccountMeta
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  workers?: Prisma.WorkerUncheckedUpdateManyWithoutServiceAccountNestedInput
  artifacts?: Prisma.ArtifactUncheckedUpdateManyWithoutServiceAccountsNestedInput
  secrets?: Prisma.SecretUncheckedUpdateManyWithoutServiceAccountNestedInput
  pages?: Prisma.PageUncheckedUpdateManyWithoutServiceAccountNestedInput
  customStatuses?: Prisma.InstanceCustomStatusUncheckedUpdateManyWithoutServiceAccountNestedInput
  apiKeys?: Prisma.ApiKeyUncheckedUpdateManyWithoutServiceAccountNestedInput
}

export type ServiceAccountCreateWithoutWorkersInput = {
  id?: string
  meta: PrismaJson.ServiceAccountMeta
  createdAt?: Date | string
  updatedAt?: Date | string
  artifacts?: Prisma.ArtifactCreateNestedManyWithoutServiceAccountsInput
  secrets?: Prisma.SecretCreateNestedManyWithoutServiceAccountInput
  terminals?: Prisma.TerminalCreateNestedManyWithoutServiceAccountInput
  pages?: Prisma.PageCreateNestedManyWithoutServiceAccountInput
  customStatuses?: Prisma.InstanceCustomStatusCreateNestedManyWithoutServiceAccountInput
  apiKeys?: Prisma.ApiKeyCreateNestedManyWithoutServiceAccountInput
}

export type ServiceAccountUncheckedCreateWithoutWorkersInput = {
  id?: string
  meta: PrismaJson.ServiceAccountMeta
  createdAt?: Date | string
  updatedAt?: Date | string
  artifacts?: Prisma.ArtifactUncheckedCreateNestedManyWithoutServiceAccountsInput
  secrets?: Prisma.SecretUncheckedCreateNestedManyWithoutServiceAccountInput
  terminals?: Prisma.TerminalUncheckedCreateNestedManyWithoutServiceAccountInput
  pages?: Prisma.PageUncheckedCreateNestedManyWithoutServiceAccountInput
  customStatuses?: Prisma.InstanceCustomStatusUncheckedCreateNestedManyWithoutServiceAccountInput
  apiKeys?: Prisma.ApiKeyUncheckedCreateNestedManyWithoutServiceAccountInput
}

export type ServiceAccountCreateOrConnectWithoutWorkersInput = {
  where: Prisma.ServiceAccountWhereUniqueInput
  create: Prisma.XOR<Prisma.ServiceAccountCreateWithoutWorkersInput, Prisma.ServiceAccountUncheckedCreateWithoutWorkersInput>
}

export type ServiceAccountUpsertWithoutWorkersInput = {
  update: Prisma.XOR<Prisma.ServiceAccountUpdateWithoutWorkersInput, Prisma.ServiceAccountUncheckedUpdateWithoutWorkersInput>
  create: Prisma.XOR<Prisma.ServiceAccountCreateWithoutWorkersInput, Prisma.ServiceAccountUncheckedCreateWithoutWorkersInput>
  where?: Prisma.ServiceAccountWhereInput
}

export type ServiceAccountUpdateToOneWithWhereWithoutWorkersInput = {
  where?: Prisma.ServiceAccountWhereInput
  data: Prisma.XOR<Prisma.ServiceAccountUpdateWithoutWorkersInput, Prisma.ServiceAccountUncheckedUpdateWithoutWorkersInput>
}

export type ServiceAccountUpdateWithoutWorkersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.ServiceAccountMeta
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  artifacts?: Prisma.ArtifactUpdateManyWithoutServiceAccountsNestedInput
  secrets?: Prisma.SecretUpdateManyWithoutServiceAccountNestedInput
  terminals?: Prisma.TerminalUpdateManyWithoutServiceAccountNestedInput
  pages?: Prisma.PageUpdateManyWithoutServiceAccountNestedInput
  customStatuses?: Prisma.InstanceCustomStatusUpdateManyWithoutServiceAccountNestedInput
  apiKeys?: Prisma.ApiKeyUpdateManyWithoutServiceAccountNestedInput
}

export type ServiceAccountUncheckedUpdateWithoutWorkersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.ServiceAccountMeta
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  artifacts?: Prisma.ArtifactUncheckedUpdateManyWithoutServiceAccountsNestedInput
  secrets?: Prisma.SecretUncheckedUpdateManyWithoutServiceAccountNestedInput
  terminals?: Prisma.TerminalUncheckedUpdateManyWithoutServiceAccountNestedInput
  pages?: Prisma.PageUncheckedUpdateManyWithoutServiceAccountNestedInput
  customStatuses?: Prisma.InstanceCustomStatusUncheckedUpdateManyWithoutServiceAccountNestedInput
  apiKeys?: Prisma.ApiKeyUncheckedUpdateManyWithoutServiceAccountNestedInput
}

export type ServiceAccountUpdateWithoutArtifactsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.ServiceAccountMeta
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  workers?: Prisma.WorkerUpdateManyWithoutServiceAccountNestedInput
  secrets?: Prisma.SecretUpdateManyWithoutServiceAccountNestedInput
  terminals?: Prisma.TerminalUpdateManyWithoutServiceAccountNestedInput
  pages?: Prisma.PageUpdateManyWithoutServiceAccountNestedInput
  customStatuses?: Prisma.InstanceCustomStatusUpdateManyWithoutServiceAccountNestedInput
  apiKeys?: Prisma.ApiKeyUpdateManyWithoutServiceAccountNestedInput
}

export type ServiceAccountUncheckedUpdateWithoutArtifactsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.ServiceAccountMeta
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  workers?: Prisma.WorkerUncheckedUpdateManyWithoutServiceAccountNestedInput
  secrets?: Prisma.SecretUncheckedUpdateManyWithoutServiceAccountNestedInput
  terminals?: Prisma.TerminalUncheckedUpdateManyWithoutServiceAccountNestedInput
  pages?: Prisma.PageUncheckedUpdateManyWithoutServiceAccountNestedInput
  customStatuses?: Prisma.InstanceCustomStatusUncheckedUpdateManyWithoutServiceAccountNestedInput
  apiKeys?: Prisma.ApiKeyUncheckedUpdateManyWithoutServiceAccountNestedInput
}

export type ServiceAccountUncheckedUpdateManyWithoutArtifactsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type ServiceAccountCountOutputType
 */

export type ServiceAccountCountOutputType = {
  workers: number
  artifacts: number
  secrets: number
  terminals: number
  pages: number
  customStatuses: number
  apiKeys: number
}

export type ServiceAccountCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  workers?: boolean | ServiceAccountCountOutputTypeCountWorkersArgs
  artifacts?: boolean | ServiceAccountCountOutputTypeCountArtifactsArgs
  secrets?: boolean | ServiceAccountCountOutputTypeCountSecretsArgs
  terminals?: boolean | ServiceAccountCountOutputTypeCountTerminalsArgs
  pages?: boolean | ServiceAccountCountOutputTypeCountPagesArgs
  customStatuses?: boolean | ServiceAccountCountOutputTypeCountCustomStatusesArgs
  apiKeys?: boolean | ServiceAccountCountOutputTypeCountApiKeysArgs
}

/**
 * ServiceAccountCountOutputType without action
 */
export type ServiceAccountCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ServiceAccountCountOutputType
   */
  select?: Prisma.ServiceAccountCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ServiceAccountCountOutputType without action
 */
export type ServiceAccountCountOutputTypeCountWorkersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.WorkerWhereInput
}

/**
 * ServiceAccountCountOutputType without action
 */
export type ServiceAccountCountOutputTypeCountArtifactsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ArtifactWhereInput
}

/**
 * ServiceAccountCountOutputType without action
 */
export type ServiceAccountCountOutputTypeCountSecretsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.SecretWhereInput
}

/**
 * ServiceAccountCountOutputType without action
 */
export type ServiceAccountCountOutputTypeCountTerminalsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TerminalWhereInput
}

/**
 * ServiceAccountCountOutputType without action
 */
export type ServiceAccountCountOutputTypeCountPagesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PageWhereInput
}

/**
 * ServiceAccountCountOutputType without action
 */
export type ServiceAccountCountOutputTypeCountCustomStatusesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.InstanceCustomStatusWhereInput
}

/**
 * ServiceAccountCountOutputType without action
 */
export type ServiceAccountCountOutputTypeCountApiKeysArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ApiKeyWhereInput
}


export type ServiceAccountSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  meta?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  workers?: boolean | Prisma.ServiceAccount$workersArgs<ExtArgs>
  artifacts?: boolean | Prisma.ServiceAccount$artifactsArgs<ExtArgs>
  secrets?: boolean | Prisma.ServiceAccount$secretsArgs<ExtArgs>
  terminals?: boolean | Prisma.ServiceAccount$terminalsArgs<ExtArgs>
  pages?: boolean | Prisma.ServiceAccount$pagesArgs<ExtArgs>
  customStatuses?: boolean | Prisma.ServiceAccount$customStatusesArgs<ExtArgs>
  apiKeys?: boolean | Prisma.ServiceAccount$apiKeysArgs<ExtArgs>
  _count?: boolean | Prisma.ServiceAccountCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["serviceAccount"]>

export type ServiceAccountSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  meta?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["serviceAccount"]>

export type ServiceAccountSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  meta?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["serviceAccount"]>

export type ServiceAccountSelectScalar = {
  id?: boolean
  meta?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type ServiceAccountOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "meta" | "createdAt" | "updatedAt", ExtArgs["result"]["serviceAccount"]>
export type ServiceAccountInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  workers?: boolean | Prisma.ServiceAccount$workersArgs<ExtArgs>
  artifacts?: boolean | Prisma.ServiceAccount$artifactsArgs<ExtArgs>
  secrets?: boolean | Prisma.ServiceAccount$secretsArgs<ExtArgs>
  terminals?: boolean | Prisma.ServiceAccount$terminalsArgs<ExtArgs>
  pages?: boolean | Prisma.ServiceAccount$pagesArgs<ExtArgs>
  customStatuses?: boolean | Prisma.ServiceAccount$customStatusesArgs<ExtArgs>
  apiKeys?: boolean | Prisma.ServiceAccount$apiKeysArgs<ExtArgs>
  _count?: boolean | Prisma.ServiceAccountCountOutputTypeDefaultArgs<ExtArgs>
}
export type ServiceAccountIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type ServiceAccountIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $ServiceAccountPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "ServiceAccount"
  objects: {
    /**
     * The workers using this service account.
     */
    workers: Prisma.$WorkerPayload<ExtArgs>[]
    /**
     * The artifacts used by this service account.
     */
    artifacts: Prisma.$ArtifactPayload<ExtArgs>[]
    /**
     * The secrets owned by this service account.
     */
    secrets: Prisma.$SecretPayload<ExtArgs>[]
    /**
     * The terminals owned by this service account.
     */
    terminals: Prisma.$TerminalPayload<ExtArgs>[]
    /**
     * The pages owned by this service account.
     */
    pages: Prisma.$PagePayload<ExtArgs>[]
    /**
     * The instance custom statuses attached by this service account.
     */
    customStatuses: Prisma.$InstanceCustomStatusPayload<ExtArgs>[]
    /**
     * The API keys impersonating this service account.
     */
    apiKeys: Prisma.$ApiKeyPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    /**
     * The CUIDv2 of the service account.
     */
    id: string
    /**
     * The metadata of the service account managed by the backend.
     * 
     * [ServiceAccountMeta]
     */
    meta: PrismaJson.ServiceAccountMeta
    /**
     * The time when the service account was created.
     */
    createdAt: Date
    /**
     * The time when the service account was last updated.
     */
    updatedAt: Date
  }, ExtArgs["result"]["serviceAccount"]>
  composites: {}
}

export type ServiceAccountGetPayload<S extends boolean | null | undefined | ServiceAccountDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ServiceAccountPayload, S>

export type ServiceAccountCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ServiceAccountFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ServiceAccountCountAggregateInputType | true
  }

export interface ServiceAccountDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ServiceAccount'], meta: { name: 'ServiceAccount' } }
  /**
   * Find zero or one ServiceAccount that matches the filter.
   * @param {ServiceAccountFindUniqueArgs} args - Arguments to find a ServiceAccount
   * @example
   * // Get one ServiceAccount
   * const serviceAccount = await prisma.serviceAccount.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ServiceAccountFindUniqueArgs>(args: Prisma.SelectSubset<T, ServiceAccountFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ServiceAccountClient<runtime.Types.Result.GetResult<Prisma.$ServiceAccountPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one ServiceAccount that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ServiceAccountFindUniqueOrThrowArgs} args - Arguments to find a ServiceAccount
   * @example
   * // Get one ServiceAccount
   * const serviceAccount = await prisma.serviceAccount.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ServiceAccountFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ServiceAccountFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ServiceAccountClient<runtime.Types.Result.GetResult<Prisma.$ServiceAccountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ServiceAccount that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ServiceAccountFindFirstArgs} args - Arguments to find a ServiceAccount
   * @example
   * // Get one ServiceAccount
   * const serviceAccount = await prisma.serviceAccount.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ServiceAccountFindFirstArgs>(args?: Prisma.SelectSubset<T, ServiceAccountFindFirstArgs<ExtArgs>>): Prisma.Prisma__ServiceAccountClient<runtime.Types.Result.GetResult<Prisma.$ServiceAccountPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ServiceAccount that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ServiceAccountFindFirstOrThrowArgs} args - Arguments to find a ServiceAccount
   * @example
   * // Get one ServiceAccount
   * const serviceAccount = await prisma.serviceAccount.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ServiceAccountFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ServiceAccountFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ServiceAccountClient<runtime.Types.Result.GetResult<Prisma.$ServiceAccountPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more ServiceAccounts that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ServiceAccountFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all ServiceAccounts
   * const serviceAccounts = await prisma.serviceAccount.findMany()
   * 
   * // Get first 10 ServiceAccounts
   * const serviceAccounts = await prisma.serviceAccount.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const serviceAccountWithIdOnly = await prisma.serviceAccount.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ServiceAccountFindManyArgs>(args?: Prisma.SelectSubset<T, ServiceAccountFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ServiceAccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a ServiceAccount.
   * @param {ServiceAccountCreateArgs} args - Arguments to create a ServiceAccount.
   * @example
   * // Create one ServiceAccount
   * const ServiceAccount = await prisma.serviceAccount.create({
   *   data: {
   *     // ... data to create a ServiceAccount
   *   }
   * })
   * 
   */
  create<T extends ServiceAccountCreateArgs>(args: Prisma.SelectSubset<T, ServiceAccountCreateArgs<ExtArgs>>): Prisma.Prisma__ServiceAccountClient<runtime.Types.Result.GetResult<Prisma.$ServiceAccountPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many ServiceAccounts.
   * @param {ServiceAccountCreateManyArgs} args - Arguments to create many ServiceAccounts.
   * @example
   * // Create many ServiceAccounts
   * const serviceAccount = await prisma.serviceAccount.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ServiceAccountCreateManyArgs>(args?: Prisma.SelectSubset<T, ServiceAccountCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many ServiceAccounts and returns the data saved in the database.
   * @param {ServiceAccountCreateManyAndReturnArgs} args - Arguments to create many ServiceAccounts.
   * @example
   * // Create many ServiceAccounts
   * const serviceAccount = await prisma.serviceAccount.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many ServiceAccounts and only return the `id`
   * const serviceAccountWithIdOnly = await prisma.serviceAccount.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ServiceAccountCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ServiceAccountCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ServiceAccountPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a ServiceAccount.
   * @param {ServiceAccountDeleteArgs} args - Arguments to delete one ServiceAccount.
   * @example
   * // Delete one ServiceAccount
   * const ServiceAccount = await prisma.serviceAccount.delete({
   *   where: {
   *     // ... filter to delete one ServiceAccount
   *   }
   * })
   * 
   */
  delete<T extends ServiceAccountDeleteArgs>(args: Prisma.SelectSubset<T, ServiceAccountDeleteArgs<ExtArgs>>): Prisma.Prisma__ServiceAccountClient<runtime.Types.Result.GetResult<Prisma.$ServiceAccountPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one ServiceAccount.
   * @param {ServiceAccountUpdateArgs} args - Arguments to update one ServiceAccount.
   * @example
   * // Update one ServiceAccount
   * const serviceAccount = await prisma.serviceAccount.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ServiceAccountUpdateArgs>(args: Prisma.SelectSubset<T, ServiceAccountUpdateArgs<ExtArgs>>): Prisma.Prisma__ServiceAccountClient<runtime.Types.Result.GetResult<Prisma.$ServiceAccountPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more ServiceAccounts.
   * @param {ServiceAccountDeleteManyArgs} args - Arguments to filter ServiceAccounts to delete.
   * @example
   * // Delete a few ServiceAccounts
   * const { count } = await prisma.serviceAccount.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ServiceAccountDeleteManyArgs>(args?: Prisma.SelectSubset<T, ServiceAccountDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ServiceAccounts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ServiceAccountUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many ServiceAccounts
   * const serviceAccount = await prisma.serviceAccount.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ServiceAccountUpdateManyArgs>(args: Prisma.SelectSubset<T, ServiceAccountUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ServiceAccounts and returns the data updated in the database.
   * @param {ServiceAccountUpdateManyAndReturnArgs} args - Arguments to update many ServiceAccounts.
   * @example
   * // Update many ServiceAccounts
   * const serviceAccount = await prisma.serviceAccount.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more ServiceAccounts and only return the `id`
   * const serviceAccountWithIdOnly = await prisma.serviceAccount.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ServiceAccountUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ServiceAccountUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ServiceAccountPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one ServiceAccount.
   * @param {ServiceAccountUpsertArgs} args - Arguments to update or create a ServiceAccount.
   * @example
   * // Update or create a ServiceAccount
   * const serviceAccount = await prisma.serviceAccount.upsert({
   *   create: {
   *     // ... data to create a ServiceAccount
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the ServiceAccount we want to update
   *   }
   * })
   */
  upsert<T extends ServiceAccountUpsertArgs>(args: Prisma.SelectSubset<T, ServiceAccountUpsertArgs<ExtArgs>>): Prisma.Prisma__ServiceAccountClient<runtime.Types.Result.GetResult<Prisma.$ServiceAccountPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of ServiceAccounts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ServiceAccountCountArgs} args - Arguments to filter ServiceAccounts to count.
   * @example
   * // Count the number of ServiceAccounts
   * const count = await prisma.serviceAccount.count({
   *   where: {
   *     // ... the filter for the ServiceAccounts we want to count
   *   }
   * })
  **/
  count<T extends ServiceAccountCountArgs>(
    args?: Prisma.Subset<T, ServiceAccountCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ServiceAccountCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a ServiceAccount.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ServiceAccountAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ServiceAccountAggregateArgs>(args: Prisma.Subset<T, ServiceAccountAggregateArgs>): Prisma.PrismaPromise<GetServiceAccountAggregateType<T>>

  /**
   * Group by ServiceAccount.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ServiceAccountGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ServiceAccountGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ServiceAccountGroupByArgs['orderBy'] }
      : { orderBy?: ServiceAccountGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ServiceAccountGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetServiceAccountGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the ServiceAccount model
 */
readonly fields: ServiceAccountFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ServiceAccount.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ServiceAccountClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  workers<T extends Prisma.ServiceAccount$workersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ServiceAccount$workersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WorkerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  artifacts<T extends Prisma.ServiceAccount$artifactsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ServiceAccount$artifactsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ArtifactPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  secrets<T extends Prisma.ServiceAccount$secretsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ServiceAccount$secretsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$SecretPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  terminals<T extends Prisma.ServiceAccount$terminalsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ServiceAccount$terminalsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TerminalPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  pages<T extends Prisma.ServiceAccount$pagesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ServiceAccount$pagesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  customStatuses<T extends Prisma.ServiceAccount$customStatusesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ServiceAccount$customStatusesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$InstanceCustomStatusPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  apiKeys<T extends Prisma.ServiceAccount$apiKeysArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ServiceAccount$apiKeysArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the ServiceAccount model
 */
export interface ServiceAccountFieldRefs {
  readonly id: Prisma.FieldRef<"ServiceAccount", 'String'>
  readonly meta: Prisma.FieldRef<"ServiceAccount", 'Json'>
  readonly createdAt: Prisma.FieldRef<"ServiceAccount", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"ServiceAccount", 'DateTime'>
}
    

// Custom InputTypes
/**
 * ServiceAccount findUnique
 */
export type ServiceAccountFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ServiceAccount
   */
  select?: Prisma.ServiceAccountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ServiceAccount
   */
  omit?: Prisma.ServiceAccountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ServiceAccountInclude<ExtArgs> | null
  /**
   * Filter, which ServiceAccount to fetch.
   */
  where: Prisma.ServiceAccountWhereUniqueInput
}

/**
 * ServiceAccount findUniqueOrThrow
 */
export type ServiceAccountFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ServiceAccount
   */
  select?: Prisma.ServiceAccountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ServiceAccount
   */
  omit?: Prisma.ServiceAccountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ServiceAccountInclude<ExtArgs> | null
  /**
   * Filter, which ServiceAccount to fetch.
   */
  where: Prisma.ServiceAccountWhereUniqueInput
}

/**
 * ServiceAccount findFirst
 */
export type ServiceAccountFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ServiceAccount
   */
  select?: Prisma.ServiceAccountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ServiceAccount
   */
  omit?: Prisma.ServiceAccountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ServiceAccountInclude<ExtArgs> | null
  /**
   * Filter, which ServiceAccount to fetch.
   */
  where?: Prisma.ServiceAccountWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ServiceAccounts to fetch.
   */
  orderBy?: Prisma.ServiceAccountOrderByWithRelationInput | Prisma.ServiceAccountOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ServiceAccounts.
   */
  cursor?: Prisma.ServiceAccountWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ServiceAccounts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ServiceAccounts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ServiceAccounts.
   */
  distinct?: Prisma.ServiceAccountScalarFieldEnum | Prisma.ServiceAccountScalarFieldEnum[]
}

/**
 * ServiceAccount findFirstOrThrow
 */
export type ServiceAccountFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ServiceAccount
   */
  select?: Prisma.ServiceAccountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ServiceAccount
   */
  omit?: Prisma.ServiceAccountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ServiceAccountInclude<ExtArgs> | null
  /**
   * Filter, which ServiceAccount to fetch.
   */
  where?: Prisma.ServiceAccountWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ServiceAccounts to fetch.
   */
  orderBy?: Prisma.ServiceAccountOrderByWithRelationInput | Prisma.ServiceAccountOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ServiceAccounts.
   */
  cursor?: Prisma.ServiceAccountWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ServiceAccounts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ServiceAccounts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ServiceAccounts.
   */
  distinct?: Prisma.ServiceAccountScalarFieldEnum | Prisma.ServiceAccountScalarFieldEnum[]
}

/**
 * ServiceAccount findMany
 */
export type ServiceAccountFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ServiceAccount
   */
  select?: Prisma.ServiceAccountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ServiceAccount
   */
  omit?: Prisma.ServiceAccountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ServiceAccountInclude<ExtArgs> | null
  /**
   * Filter, which ServiceAccounts to fetch.
   */
  where?: Prisma.ServiceAccountWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ServiceAccounts to fetch.
   */
  orderBy?: Prisma.ServiceAccountOrderByWithRelationInput | Prisma.ServiceAccountOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing ServiceAccounts.
   */
  cursor?: Prisma.ServiceAccountWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ServiceAccounts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ServiceAccounts.
   */
  skip?: number
  distinct?: Prisma.ServiceAccountScalarFieldEnum | Prisma.ServiceAccountScalarFieldEnum[]
}

/**
 * ServiceAccount create
 */
export type ServiceAccountCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ServiceAccount
   */
  select?: Prisma.ServiceAccountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ServiceAccount
   */
  omit?: Prisma.ServiceAccountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ServiceAccountInclude<ExtArgs> | null
  /**
   * The data needed to create a ServiceAccount.
   */
  data: Prisma.XOR<Prisma.ServiceAccountCreateInput, Prisma.ServiceAccountUncheckedCreateInput>
}

/**
 * ServiceAccount createMany
 */
export type ServiceAccountCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many ServiceAccounts.
   */
  data: Prisma.ServiceAccountCreateManyInput | Prisma.ServiceAccountCreateManyInput[]
}

/**
 * ServiceAccount createManyAndReturn
 */
export type ServiceAccountCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ServiceAccount
   */
  select?: Prisma.ServiceAccountSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ServiceAccount
   */
  omit?: Prisma.ServiceAccountOmit<ExtArgs> | null
  /**
   * The data used to create many ServiceAccounts.
   */
  data: Prisma.ServiceAccountCreateManyInput | Prisma.ServiceAccountCreateManyInput[]
}

/**
 * ServiceAccount update
 */
export type ServiceAccountUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ServiceAccount
   */
  select?: Prisma.ServiceAccountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ServiceAccount
   */
  omit?: Prisma.ServiceAccountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ServiceAccountInclude<ExtArgs> | null
  /**
   * The data needed to update a ServiceAccount.
   */
  data: Prisma.XOR<Prisma.ServiceAccountUpdateInput, Prisma.ServiceAccountUncheckedUpdateInput>
  /**
   * Choose, which ServiceAccount to update.
   */
  where: Prisma.ServiceAccountWhereUniqueInput
}

/**
 * ServiceAccount updateMany
 */
export type ServiceAccountUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update ServiceAccounts.
   */
  data: Prisma.XOR<Prisma.ServiceAccountUpdateManyMutationInput, Prisma.ServiceAccountUncheckedUpdateManyInput>
  /**
   * Filter which ServiceAccounts to update
   */
  where?: Prisma.ServiceAccountWhereInput
  /**
   * Limit how many ServiceAccounts to update.
   */
  limit?: number
}

/**
 * ServiceAccount updateManyAndReturn
 */
export type ServiceAccountUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ServiceAccount
   */
  select?: Prisma.ServiceAccountSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ServiceAccount
   */
  omit?: Prisma.ServiceAccountOmit<ExtArgs> | null
  /**
   * The data used to update ServiceAccounts.
   */
  data: Prisma.XOR<Prisma.ServiceAccountUpdateManyMutationInput, Prisma.ServiceAccountUncheckedUpdateManyInput>
  /**
   * Filter which ServiceAccounts to update
   */
  where?: Prisma.ServiceAccountWhereInput
  /**
   * Limit how many ServiceAccounts to update.
   */
  limit?: number
}

/**
 * ServiceAccount upsert
 */
export type ServiceAccountUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ServiceAccount
   */
  select?: Prisma.ServiceAccountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ServiceAccount
   */
  omit?: Prisma.ServiceAccountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ServiceAccountInclude<ExtArgs> | null
  /**
   * The filter to search for the ServiceAccount to update in case it exists.
   */
  where: Prisma.ServiceAccountWhereUniqueInput
  /**
   * In case the ServiceAccount found by the `where` argument doesn't exist, create a new ServiceAccount with this data.
   */
  create: Prisma.XOR<Prisma.ServiceAccountCreateInput, Prisma.ServiceAccountUncheckedCreateInput>
  /**
   * In case the ServiceAccount was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ServiceAccountUpdateInput, Prisma.ServiceAccountUncheckedUpdateInput>
}

/**
 * ServiceAccount delete
 */
export type ServiceAccountDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ServiceAccount
   */
  select?: Prisma.ServiceAccountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ServiceAccount
   */
  omit?: Prisma.ServiceAccountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ServiceAccountInclude<ExtArgs> | null
  /**
   * Filter which ServiceAccount to delete.
   */
  where: Prisma.ServiceAccountWhereUniqueInput
}

/**
 * ServiceAccount deleteMany
 */
export type ServiceAccountDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ServiceAccounts to delete
   */
  where?: Prisma.ServiceAccountWhereInput
  /**
   * Limit how many ServiceAccounts to delete.
   */
  limit?: number
}

/**
 * ServiceAccount.workers
 */
export type ServiceAccount$workersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Worker
   */
  select?: Prisma.WorkerSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Worker
   */
  omit?: Prisma.WorkerOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkerInclude<ExtArgs> | null
  where?: Prisma.WorkerWhereInput
  orderBy?: Prisma.WorkerOrderByWithRelationInput | Prisma.WorkerOrderByWithRelationInput[]
  cursor?: Prisma.WorkerWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.WorkerScalarFieldEnum | Prisma.WorkerScalarFieldEnum[]
}

/**
 * ServiceAccount.artifacts
 */
export type ServiceAccount$artifactsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Artifact
   */
  select?: Prisma.ArtifactSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Artifact
   */
  omit?: Prisma.ArtifactOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArtifactInclude<ExtArgs> | null
  where?: Prisma.ArtifactWhereInput
  orderBy?: Prisma.ArtifactOrderByWithRelationInput | Prisma.ArtifactOrderByWithRelationInput[]
  cursor?: Prisma.ArtifactWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ArtifactScalarFieldEnum | Prisma.ArtifactScalarFieldEnum[]
}

/**
 * ServiceAccount.secrets
 */
export type ServiceAccount$secretsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Secret
   */
  select?: Prisma.SecretSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Secret
   */
  omit?: Prisma.SecretOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SecretInclude<ExtArgs> | null
  where?: Prisma.SecretWhereInput
  orderBy?: Prisma.SecretOrderByWithRelationInput | Prisma.SecretOrderByWithRelationInput[]
  cursor?: Prisma.SecretWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.SecretScalarFieldEnum | Prisma.SecretScalarFieldEnum[]
}

/**
 * ServiceAccount.terminals
 */
export type ServiceAccount$terminalsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Terminal
   */
  select?: Prisma.TerminalSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Terminal
   */
  omit?: Prisma.TerminalOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TerminalInclude<ExtArgs> | null
  where?: Prisma.TerminalWhereInput
  orderBy?: Prisma.TerminalOrderByWithRelationInput | Prisma.TerminalOrderByWithRelationInput[]
  cursor?: Prisma.TerminalWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TerminalScalarFieldEnum | Prisma.TerminalScalarFieldEnum[]
}

/**
 * ServiceAccount.pages
 */
export type ServiceAccount$pagesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Page
   */
  select?: Prisma.PageSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Page
   */
  omit?: Prisma.PageOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PageInclude<ExtArgs> | null
  where?: Prisma.PageWhereInput
  orderBy?: Prisma.PageOrderByWithRelationInput | Prisma.PageOrderByWithRelationInput[]
  cursor?: Prisma.PageWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PageScalarFieldEnum | Prisma.PageScalarFieldEnum[]
}

/**
 * ServiceAccount.customStatuses
 */
export type ServiceAccount$customStatusesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InstanceCustomStatus
   */
  select?: Prisma.InstanceCustomStatusSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InstanceCustomStatus
   */
  omit?: Prisma.InstanceCustomStatusOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstanceCustomStatusInclude<ExtArgs> | null
  where?: Prisma.InstanceCustomStatusWhereInput
  orderBy?: Prisma.InstanceCustomStatusOrderByWithRelationInput | Prisma.InstanceCustomStatusOrderByWithRelationInput[]
  cursor?: Prisma.InstanceCustomStatusWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.InstanceCustomStatusScalarFieldEnum | Prisma.InstanceCustomStatusScalarFieldEnum[]
}

/**
 * ServiceAccount.apiKeys
 */
export type ServiceAccount$apiKeysArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ApiKey
   */
  select?: Prisma.ApiKeySelect<ExtArgs> | null
  /**
   * Omit specific fields from the ApiKey
   */
  omit?: Prisma.ApiKeyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ApiKeyInclude<ExtArgs> | null
  where?: Prisma.ApiKeyWhereInput
  orderBy?: Prisma.ApiKeyOrderByWithRelationInput | Prisma.ApiKeyOrderByWithRelationInput[]
  cursor?: Prisma.ApiKeyWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ApiKeyScalarFieldEnum | Prisma.ApiKeyScalarFieldEnum[]
}

/**
 * ServiceAccount without action
 */
export type ServiceAccountDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ServiceAccount
   */
  select?: Prisma.ServiceAccountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ServiceAccount
   */
  omit?: Prisma.ServiceAccountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ServiceAccountInclude<ExtArgs> | null
}
