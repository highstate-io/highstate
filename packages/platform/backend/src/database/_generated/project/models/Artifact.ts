
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `Artifact` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */

import type * as PJTG from '../pjtg.ts';
import * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model Artifact
 * The artifact represents a file or folder stored in the system.
 * 
 * It can be produced by units or manually uploaded via API by service accounts.
 * 
 * Since different actors can produce the same artifact with the same content and hash,
 * there is the ownership/usage concept to track which entities produce or use the artifact.
 * The "ownership" and "usage" are synonymous in this context and often referred to as "usage".
 * 
 * When no usages are present, the artifact will be automatically garbage collected after a certain period.
 */
export type ArtifactModel = runtime.Types.Result.DefaultSelection<Prisma.$ArtifactPayload>

export type AggregateArtifact = {
  _count: ArtifactCountAggregateOutputType | null
  _avg: ArtifactAvgAggregateOutputType | null
  _sum: ArtifactSumAggregateOutputType | null
  _min: ArtifactMinAggregateOutputType | null
  _max: ArtifactMaxAggregateOutputType | null
}

export type ArtifactAvgAggregateOutputType = {
  size: number | null
  chunkSize: number | null
}

export type ArtifactSumAggregateOutputType = {
  size: number | null
  chunkSize: number | null
}

export type ArtifactMinAggregateOutputType = {
  id: string | null
  hash: string | null
  size: number | null
  chunkSize: number | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ArtifactMaxAggregateOutputType = {
  id: string | null
  hash: string | null
  size: number | null
  chunkSize: number | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ArtifactCountAggregateOutputType = {
  id: number
  meta: number
  hash: number
  size: number
  chunkSize: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type ArtifactAvgAggregateInputType = {
  size?: true
  chunkSize?: true
}

export type ArtifactSumAggregateInputType = {
  size?: true
  chunkSize?: true
}

export type ArtifactMinAggregateInputType = {
  id?: true
  hash?: true
  size?: true
  chunkSize?: true
  createdAt?: true
  updatedAt?: true
}

export type ArtifactMaxAggregateInputType = {
  id?: true
  hash?: true
  size?: true
  chunkSize?: true
  createdAt?: true
  updatedAt?: true
}

export type ArtifactCountAggregateInputType = {
  id?: true
  meta?: true
  hash?: true
  size?: true
  chunkSize?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type ArtifactAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Artifact to aggregate.
   */
  where?: Prisma.ArtifactWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Artifacts to fetch.
   */
  orderBy?: Prisma.ArtifactOrderByWithRelationInput | Prisma.ArtifactOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ArtifactWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Artifacts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Artifacts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Artifacts
  **/
  _count?: true | ArtifactCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ArtifactAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ArtifactSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ArtifactMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ArtifactMaxAggregateInputType
}

export type GetArtifactAggregateType<T extends ArtifactAggregateArgs> = {
      [P in keyof T & keyof AggregateArtifact]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateArtifact[P]>
    : Prisma.GetScalarType<T[P], AggregateArtifact[P]>
}




export type ArtifactGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ArtifactWhereInput
  orderBy?: Prisma.ArtifactOrderByWithAggregationInput | Prisma.ArtifactOrderByWithAggregationInput[]
  by: Prisma.ArtifactScalarFieldEnum[] | Prisma.ArtifactScalarFieldEnum
  having?: Prisma.ArtifactScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ArtifactCountAggregateInputType | true
  _avg?: ArtifactAvgAggregateInputType
  _sum?: ArtifactSumAggregateInputType
  _min?: ArtifactMinAggregateInputType
  _max?: ArtifactMaxAggregateInputType
}

export type ArtifactGroupByOutputType = {
  id: string
  meta: PrismaJson.CommonObjectMeta
  hash: string
  size: number
  chunkSize: number
  createdAt: Date
  updatedAt: Date
  _count: ArtifactCountAggregateOutputType | null
  _avg: ArtifactAvgAggregateOutputType | null
  _sum: ArtifactSumAggregateOutputType | null
  _min: ArtifactMinAggregateOutputType | null
  _max: ArtifactMaxAggregateOutputType | null
}

type GetArtifactGroupByPayload<T extends ArtifactGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ArtifactGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ArtifactGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ArtifactGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ArtifactGroupByOutputType[P]>
      }
    >
  >



export type ArtifactWhereInput = {
  AND?: Prisma.ArtifactWhereInput | Prisma.ArtifactWhereInput[]
  OR?: Prisma.ArtifactWhereInput[]
  NOT?: Prisma.ArtifactWhereInput | Prisma.ArtifactWhereInput[]
  id?: Prisma.StringFilter<"Artifact"> | string
  meta?: Prisma.JsonFilter<"Artifact">
  hash?: Prisma.StringFilter<"Artifact"> | string
  size?: Prisma.IntFilter<"Artifact"> | number
  chunkSize?: Prisma.IntFilter<"Artifact"> | number
  createdAt?: Prisma.DateTimeFilter<"Artifact"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Artifact"> | Date | string
  serviceAccounts?: Prisma.ServiceAccountListRelationFilter
  instances?: Prisma.InstanceStateListRelationFilter
  terminals?: Prisma.TerminalListRelationFilter
  pages?: Prisma.PageListRelationFilter
}

export type ArtifactOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  meta?: Prisma.SortOrder
  hash?: Prisma.SortOrder
  size?: Prisma.SortOrder
  chunkSize?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  serviceAccounts?: Prisma.ServiceAccountOrderByRelationAggregateInput
  instances?: Prisma.InstanceStateOrderByRelationAggregateInput
  terminals?: Prisma.TerminalOrderByRelationAggregateInput
  pages?: Prisma.PageOrderByRelationAggregateInput
}

export type ArtifactWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  hash?: string
  AND?: Prisma.ArtifactWhereInput | Prisma.ArtifactWhereInput[]
  OR?: Prisma.ArtifactWhereInput[]
  NOT?: Prisma.ArtifactWhereInput | Prisma.ArtifactWhereInput[]
  meta?: Prisma.JsonFilter<"Artifact">
  size?: Prisma.IntFilter<"Artifact"> | number
  chunkSize?: Prisma.IntFilter<"Artifact"> | number
  createdAt?: Prisma.DateTimeFilter<"Artifact"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Artifact"> | Date | string
  serviceAccounts?: Prisma.ServiceAccountListRelationFilter
  instances?: Prisma.InstanceStateListRelationFilter
  terminals?: Prisma.TerminalListRelationFilter
  pages?: Prisma.PageListRelationFilter
}, "id" | "hash">

export type ArtifactOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  meta?: Prisma.SortOrder
  hash?: Prisma.SortOrder
  size?: Prisma.SortOrder
  chunkSize?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.ArtifactCountOrderByAggregateInput
  _avg?: Prisma.ArtifactAvgOrderByAggregateInput
  _max?: Prisma.ArtifactMaxOrderByAggregateInput
  _min?: Prisma.ArtifactMinOrderByAggregateInput
  _sum?: Prisma.ArtifactSumOrderByAggregateInput
}

export type ArtifactScalarWhereWithAggregatesInput = {
  AND?: Prisma.ArtifactScalarWhereWithAggregatesInput | Prisma.ArtifactScalarWhereWithAggregatesInput[]
  OR?: Prisma.ArtifactScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ArtifactScalarWhereWithAggregatesInput | Prisma.ArtifactScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Artifact"> | string
  meta?: Prisma.JsonWithAggregatesFilter<"Artifact">
  hash?: Prisma.StringWithAggregatesFilter<"Artifact"> | string
  size?: Prisma.IntWithAggregatesFilter<"Artifact"> | number
  chunkSize?: Prisma.IntWithAggregatesFilter<"Artifact"> | number
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Artifact"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Artifact"> | Date | string
}

export type ArtifactCreateInput = {
  id?: string
  meta: PrismaJson.CommonObjectMeta
  hash: string
  size: number
  chunkSize: number
  createdAt?: Date | string
  updatedAt?: Date | string
  serviceAccounts?: Prisma.ServiceAccountCreateNestedManyWithoutArtifactsInput
  instances?: Prisma.InstanceStateCreateNestedManyWithoutArtifactsInput
  terminals?: Prisma.TerminalCreateNestedManyWithoutArtifactsInput
  pages?: Prisma.PageCreateNestedManyWithoutArtifactsInput
}

export type ArtifactUncheckedCreateInput = {
  id?: string
  meta: PrismaJson.CommonObjectMeta
  hash: string
  size: number
  chunkSize: number
  createdAt?: Date | string
  updatedAt?: Date | string
  serviceAccounts?: Prisma.ServiceAccountUncheckedCreateNestedManyWithoutArtifactsInput
  instances?: Prisma.InstanceStateUncheckedCreateNestedManyWithoutArtifactsInput
  terminals?: Prisma.TerminalUncheckedCreateNestedManyWithoutArtifactsInput
  pages?: Prisma.PageUncheckedCreateNestedManyWithoutArtifactsInput
}

export type ArtifactUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.CommonObjectMeta
  hash?: Prisma.StringFieldUpdateOperationsInput | string
  size?: Prisma.IntFieldUpdateOperationsInput | number
  chunkSize?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  serviceAccounts?: Prisma.ServiceAccountUpdateManyWithoutArtifactsNestedInput
  instances?: Prisma.InstanceStateUpdateManyWithoutArtifactsNestedInput
  terminals?: Prisma.TerminalUpdateManyWithoutArtifactsNestedInput
  pages?: Prisma.PageUpdateManyWithoutArtifactsNestedInput
}

export type ArtifactUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.CommonObjectMeta
  hash?: Prisma.StringFieldUpdateOperationsInput | string
  size?: Prisma.IntFieldUpdateOperationsInput | number
  chunkSize?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  serviceAccounts?: Prisma.ServiceAccountUncheckedUpdateManyWithoutArtifactsNestedInput
  instances?: Prisma.InstanceStateUncheckedUpdateManyWithoutArtifactsNestedInput
  terminals?: Prisma.TerminalUncheckedUpdateManyWithoutArtifactsNestedInput
  pages?: Prisma.PageUncheckedUpdateManyWithoutArtifactsNestedInput
}

export type ArtifactCreateManyInput = {
  id?: string
  meta: PrismaJson.CommonObjectMeta
  hash: string
  size: number
  chunkSize: number
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ArtifactUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.CommonObjectMeta
  hash?: Prisma.StringFieldUpdateOperationsInput | string
  size?: Prisma.IntFieldUpdateOperationsInput | number
  chunkSize?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ArtifactUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.CommonObjectMeta
  hash?: Prisma.StringFieldUpdateOperationsInput | string
  size?: Prisma.IntFieldUpdateOperationsInput | number
  chunkSize?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ArtifactCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  meta?: Prisma.SortOrder
  hash?: Prisma.SortOrder
  size?: Prisma.SortOrder
  chunkSize?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ArtifactAvgOrderByAggregateInput = {
  size?: Prisma.SortOrder
  chunkSize?: Prisma.SortOrder
}

export type ArtifactMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  hash?: Prisma.SortOrder
  size?: Prisma.SortOrder
  chunkSize?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ArtifactMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  hash?: Prisma.SortOrder
  size?: Prisma.SortOrder
  chunkSize?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ArtifactSumOrderByAggregateInput = {
  size?: Prisma.SortOrder
  chunkSize?: Prisma.SortOrder
}

export type ArtifactListRelationFilter = {
  every?: Prisma.ArtifactWhereInput
  some?: Prisma.ArtifactWhereInput
  none?: Prisma.ArtifactWhereInput
}

export type ArtifactOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type IntFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type ArtifactCreateNestedManyWithoutInstancesInput = {
  create?: Prisma.XOR<Prisma.ArtifactCreateWithoutInstancesInput, Prisma.ArtifactUncheckedCreateWithoutInstancesInput> | Prisma.ArtifactCreateWithoutInstancesInput[] | Prisma.ArtifactUncheckedCreateWithoutInstancesInput[]
  connectOrCreate?: Prisma.ArtifactCreateOrConnectWithoutInstancesInput | Prisma.ArtifactCreateOrConnectWithoutInstancesInput[]
  connect?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
}

export type ArtifactUncheckedCreateNestedManyWithoutInstancesInput = {
  create?: Prisma.XOR<Prisma.ArtifactCreateWithoutInstancesInput, Prisma.ArtifactUncheckedCreateWithoutInstancesInput> | Prisma.ArtifactCreateWithoutInstancesInput[] | Prisma.ArtifactUncheckedCreateWithoutInstancesInput[]
  connectOrCreate?: Prisma.ArtifactCreateOrConnectWithoutInstancesInput | Prisma.ArtifactCreateOrConnectWithoutInstancesInput[]
  connect?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
}

export type ArtifactUpdateManyWithoutInstancesNestedInput = {
  create?: Prisma.XOR<Prisma.ArtifactCreateWithoutInstancesInput, Prisma.ArtifactUncheckedCreateWithoutInstancesInput> | Prisma.ArtifactCreateWithoutInstancesInput[] | Prisma.ArtifactUncheckedCreateWithoutInstancesInput[]
  connectOrCreate?: Prisma.ArtifactCreateOrConnectWithoutInstancesInput | Prisma.ArtifactCreateOrConnectWithoutInstancesInput[]
  upsert?: Prisma.ArtifactUpsertWithWhereUniqueWithoutInstancesInput | Prisma.ArtifactUpsertWithWhereUniqueWithoutInstancesInput[]
  set?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  disconnect?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  delete?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  connect?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  update?: Prisma.ArtifactUpdateWithWhereUniqueWithoutInstancesInput | Prisma.ArtifactUpdateWithWhereUniqueWithoutInstancesInput[]
  updateMany?: Prisma.ArtifactUpdateManyWithWhereWithoutInstancesInput | Prisma.ArtifactUpdateManyWithWhereWithoutInstancesInput[]
  deleteMany?: Prisma.ArtifactScalarWhereInput | Prisma.ArtifactScalarWhereInput[]
}

export type ArtifactUncheckedUpdateManyWithoutInstancesNestedInput = {
  create?: Prisma.XOR<Prisma.ArtifactCreateWithoutInstancesInput, Prisma.ArtifactUncheckedCreateWithoutInstancesInput> | Prisma.ArtifactCreateWithoutInstancesInput[] | Prisma.ArtifactUncheckedCreateWithoutInstancesInput[]
  connectOrCreate?: Prisma.ArtifactCreateOrConnectWithoutInstancesInput | Prisma.ArtifactCreateOrConnectWithoutInstancesInput[]
  upsert?: Prisma.ArtifactUpsertWithWhereUniqueWithoutInstancesInput | Prisma.ArtifactUpsertWithWhereUniqueWithoutInstancesInput[]
  set?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  disconnect?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  delete?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  connect?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  update?: Prisma.ArtifactUpdateWithWhereUniqueWithoutInstancesInput | Prisma.ArtifactUpdateWithWhereUniqueWithoutInstancesInput[]
  updateMany?: Prisma.ArtifactUpdateManyWithWhereWithoutInstancesInput | Prisma.ArtifactUpdateManyWithWhereWithoutInstancesInput[]
  deleteMany?: Prisma.ArtifactScalarWhereInput | Prisma.ArtifactScalarWhereInput[]
}

export type ArtifactCreateNestedManyWithoutPagesInput = {
  create?: Prisma.XOR<Prisma.ArtifactCreateWithoutPagesInput, Prisma.ArtifactUncheckedCreateWithoutPagesInput> | Prisma.ArtifactCreateWithoutPagesInput[] | Prisma.ArtifactUncheckedCreateWithoutPagesInput[]
  connectOrCreate?: Prisma.ArtifactCreateOrConnectWithoutPagesInput | Prisma.ArtifactCreateOrConnectWithoutPagesInput[]
  connect?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
}

export type ArtifactUncheckedCreateNestedManyWithoutPagesInput = {
  create?: Prisma.XOR<Prisma.ArtifactCreateWithoutPagesInput, Prisma.ArtifactUncheckedCreateWithoutPagesInput> | Prisma.ArtifactCreateWithoutPagesInput[] | Prisma.ArtifactUncheckedCreateWithoutPagesInput[]
  connectOrCreate?: Prisma.ArtifactCreateOrConnectWithoutPagesInput | Prisma.ArtifactCreateOrConnectWithoutPagesInput[]
  connect?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
}

export type ArtifactUpdateManyWithoutPagesNestedInput = {
  create?: Prisma.XOR<Prisma.ArtifactCreateWithoutPagesInput, Prisma.ArtifactUncheckedCreateWithoutPagesInput> | Prisma.ArtifactCreateWithoutPagesInput[] | Prisma.ArtifactUncheckedCreateWithoutPagesInput[]
  connectOrCreate?: Prisma.ArtifactCreateOrConnectWithoutPagesInput | Prisma.ArtifactCreateOrConnectWithoutPagesInput[]
  upsert?: Prisma.ArtifactUpsertWithWhereUniqueWithoutPagesInput | Prisma.ArtifactUpsertWithWhereUniqueWithoutPagesInput[]
  set?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  disconnect?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  delete?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  connect?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  update?: Prisma.ArtifactUpdateWithWhereUniqueWithoutPagesInput | Prisma.ArtifactUpdateWithWhereUniqueWithoutPagesInput[]
  updateMany?: Prisma.ArtifactUpdateManyWithWhereWithoutPagesInput | Prisma.ArtifactUpdateManyWithWhereWithoutPagesInput[]
  deleteMany?: Prisma.ArtifactScalarWhereInput | Prisma.ArtifactScalarWhereInput[]
}

export type ArtifactUncheckedUpdateManyWithoutPagesNestedInput = {
  create?: Prisma.XOR<Prisma.ArtifactCreateWithoutPagesInput, Prisma.ArtifactUncheckedCreateWithoutPagesInput> | Prisma.ArtifactCreateWithoutPagesInput[] | Prisma.ArtifactUncheckedCreateWithoutPagesInput[]
  connectOrCreate?: Prisma.ArtifactCreateOrConnectWithoutPagesInput | Prisma.ArtifactCreateOrConnectWithoutPagesInput[]
  upsert?: Prisma.ArtifactUpsertWithWhereUniqueWithoutPagesInput | Prisma.ArtifactUpsertWithWhereUniqueWithoutPagesInput[]
  set?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  disconnect?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  delete?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  connect?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  update?: Prisma.ArtifactUpdateWithWhereUniqueWithoutPagesInput | Prisma.ArtifactUpdateWithWhereUniqueWithoutPagesInput[]
  updateMany?: Prisma.ArtifactUpdateManyWithWhereWithoutPagesInput | Prisma.ArtifactUpdateManyWithWhereWithoutPagesInput[]
  deleteMany?: Prisma.ArtifactScalarWhereInput | Prisma.ArtifactScalarWhereInput[]
}

export type ArtifactCreateNestedManyWithoutServiceAccountsInput = {
  create?: Prisma.XOR<Prisma.ArtifactCreateWithoutServiceAccountsInput, Prisma.ArtifactUncheckedCreateWithoutServiceAccountsInput> | Prisma.ArtifactCreateWithoutServiceAccountsInput[] | Prisma.ArtifactUncheckedCreateWithoutServiceAccountsInput[]
  connectOrCreate?: Prisma.ArtifactCreateOrConnectWithoutServiceAccountsInput | Prisma.ArtifactCreateOrConnectWithoutServiceAccountsInput[]
  connect?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
}

export type ArtifactUncheckedCreateNestedManyWithoutServiceAccountsInput = {
  create?: Prisma.XOR<Prisma.ArtifactCreateWithoutServiceAccountsInput, Prisma.ArtifactUncheckedCreateWithoutServiceAccountsInput> | Prisma.ArtifactCreateWithoutServiceAccountsInput[] | Prisma.ArtifactUncheckedCreateWithoutServiceAccountsInput[]
  connectOrCreate?: Prisma.ArtifactCreateOrConnectWithoutServiceAccountsInput | Prisma.ArtifactCreateOrConnectWithoutServiceAccountsInput[]
  connect?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
}

export type ArtifactUpdateManyWithoutServiceAccountsNestedInput = {
  create?: Prisma.XOR<Prisma.ArtifactCreateWithoutServiceAccountsInput, Prisma.ArtifactUncheckedCreateWithoutServiceAccountsInput> | Prisma.ArtifactCreateWithoutServiceAccountsInput[] | Prisma.ArtifactUncheckedCreateWithoutServiceAccountsInput[]
  connectOrCreate?: Prisma.ArtifactCreateOrConnectWithoutServiceAccountsInput | Prisma.ArtifactCreateOrConnectWithoutServiceAccountsInput[]
  upsert?: Prisma.ArtifactUpsertWithWhereUniqueWithoutServiceAccountsInput | Prisma.ArtifactUpsertWithWhereUniqueWithoutServiceAccountsInput[]
  set?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  disconnect?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  delete?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  connect?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  update?: Prisma.ArtifactUpdateWithWhereUniqueWithoutServiceAccountsInput | Prisma.ArtifactUpdateWithWhereUniqueWithoutServiceAccountsInput[]
  updateMany?: Prisma.ArtifactUpdateManyWithWhereWithoutServiceAccountsInput | Prisma.ArtifactUpdateManyWithWhereWithoutServiceAccountsInput[]
  deleteMany?: Prisma.ArtifactScalarWhereInput | Prisma.ArtifactScalarWhereInput[]
}

export type ArtifactUncheckedUpdateManyWithoutServiceAccountsNestedInput = {
  create?: Prisma.XOR<Prisma.ArtifactCreateWithoutServiceAccountsInput, Prisma.ArtifactUncheckedCreateWithoutServiceAccountsInput> | Prisma.ArtifactCreateWithoutServiceAccountsInput[] | Prisma.ArtifactUncheckedCreateWithoutServiceAccountsInput[]
  connectOrCreate?: Prisma.ArtifactCreateOrConnectWithoutServiceAccountsInput | Prisma.ArtifactCreateOrConnectWithoutServiceAccountsInput[]
  upsert?: Prisma.ArtifactUpsertWithWhereUniqueWithoutServiceAccountsInput | Prisma.ArtifactUpsertWithWhereUniqueWithoutServiceAccountsInput[]
  set?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  disconnect?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  delete?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  connect?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  update?: Prisma.ArtifactUpdateWithWhereUniqueWithoutServiceAccountsInput | Prisma.ArtifactUpdateWithWhereUniqueWithoutServiceAccountsInput[]
  updateMany?: Prisma.ArtifactUpdateManyWithWhereWithoutServiceAccountsInput | Prisma.ArtifactUpdateManyWithWhereWithoutServiceAccountsInput[]
  deleteMany?: Prisma.ArtifactScalarWhereInput | Prisma.ArtifactScalarWhereInput[]
}

export type ArtifactCreateNestedManyWithoutTerminalsInput = {
  create?: Prisma.XOR<Prisma.ArtifactCreateWithoutTerminalsInput, Prisma.ArtifactUncheckedCreateWithoutTerminalsInput> | Prisma.ArtifactCreateWithoutTerminalsInput[] | Prisma.ArtifactUncheckedCreateWithoutTerminalsInput[]
  connectOrCreate?: Prisma.ArtifactCreateOrConnectWithoutTerminalsInput | Prisma.ArtifactCreateOrConnectWithoutTerminalsInput[]
  connect?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
}

export type ArtifactUncheckedCreateNestedManyWithoutTerminalsInput = {
  create?: Prisma.XOR<Prisma.ArtifactCreateWithoutTerminalsInput, Prisma.ArtifactUncheckedCreateWithoutTerminalsInput> | Prisma.ArtifactCreateWithoutTerminalsInput[] | Prisma.ArtifactUncheckedCreateWithoutTerminalsInput[]
  connectOrCreate?: Prisma.ArtifactCreateOrConnectWithoutTerminalsInput | Prisma.ArtifactCreateOrConnectWithoutTerminalsInput[]
  connect?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
}

export type ArtifactUpdateManyWithoutTerminalsNestedInput = {
  create?: Prisma.XOR<Prisma.ArtifactCreateWithoutTerminalsInput, Prisma.ArtifactUncheckedCreateWithoutTerminalsInput> | Prisma.ArtifactCreateWithoutTerminalsInput[] | Prisma.ArtifactUncheckedCreateWithoutTerminalsInput[]
  connectOrCreate?: Prisma.ArtifactCreateOrConnectWithoutTerminalsInput | Prisma.ArtifactCreateOrConnectWithoutTerminalsInput[]
  upsert?: Prisma.ArtifactUpsertWithWhereUniqueWithoutTerminalsInput | Prisma.ArtifactUpsertWithWhereUniqueWithoutTerminalsInput[]
  set?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  disconnect?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  delete?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  connect?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  update?: Prisma.ArtifactUpdateWithWhereUniqueWithoutTerminalsInput | Prisma.ArtifactUpdateWithWhereUniqueWithoutTerminalsInput[]
  updateMany?: Prisma.ArtifactUpdateManyWithWhereWithoutTerminalsInput | Prisma.ArtifactUpdateManyWithWhereWithoutTerminalsInput[]
  deleteMany?: Prisma.ArtifactScalarWhereInput | Prisma.ArtifactScalarWhereInput[]
}

export type ArtifactUncheckedUpdateManyWithoutTerminalsNestedInput = {
  create?: Prisma.XOR<Prisma.ArtifactCreateWithoutTerminalsInput, Prisma.ArtifactUncheckedCreateWithoutTerminalsInput> | Prisma.ArtifactCreateWithoutTerminalsInput[] | Prisma.ArtifactUncheckedCreateWithoutTerminalsInput[]
  connectOrCreate?: Prisma.ArtifactCreateOrConnectWithoutTerminalsInput | Prisma.ArtifactCreateOrConnectWithoutTerminalsInput[]
  upsert?: Prisma.ArtifactUpsertWithWhereUniqueWithoutTerminalsInput | Prisma.ArtifactUpsertWithWhereUniqueWithoutTerminalsInput[]
  set?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  disconnect?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  delete?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  connect?: Prisma.ArtifactWhereUniqueInput | Prisma.ArtifactWhereUniqueInput[]
  update?: Prisma.ArtifactUpdateWithWhereUniqueWithoutTerminalsInput | Prisma.ArtifactUpdateWithWhereUniqueWithoutTerminalsInput[]
  updateMany?: Prisma.ArtifactUpdateManyWithWhereWithoutTerminalsInput | Prisma.ArtifactUpdateManyWithWhereWithoutTerminalsInput[]
  deleteMany?: Prisma.ArtifactScalarWhereInput | Prisma.ArtifactScalarWhereInput[]
}

export type ArtifactCreateWithoutInstancesInput = {
  id?: string
  meta: PrismaJson.CommonObjectMeta
  hash: string
  size: number
  chunkSize: number
  createdAt?: Date | string
  updatedAt?: Date | string
  serviceAccounts?: Prisma.ServiceAccountCreateNestedManyWithoutArtifactsInput
  terminals?: Prisma.TerminalCreateNestedManyWithoutArtifactsInput
  pages?: Prisma.PageCreateNestedManyWithoutArtifactsInput
}

export type ArtifactUncheckedCreateWithoutInstancesInput = {
  id?: string
  meta: PrismaJson.CommonObjectMeta
  hash: string
  size: number
  chunkSize: number
  createdAt?: Date | string
  updatedAt?: Date | string
  serviceAccounts?: Prisma.ServiceAccountUncheckedCreateNestedManyWithoutArtifactsInput
  terminals?: Prisma.TerminalUncheckedCreateNestedManyWithoutArtifactsInput
  pages?: Prisma.PageUncheckedCreateNestedManyWithoutArtifactsInput
}

export type ArtifactCreateOrConnectWithoutInstancesInput = {
  where: Prisma.ArtifactWhereUniqueInput
  create: Prisma.XOR<Prisma.ArtifactCreateWithoutInstancesInput, Prisma.ArtifactUncheckedCreateWithoutInstancesInput>
}

export type ArtifactUpsertWithWhereUniqueWithoutInstancesInput = {
  where: Prisma.ArtifactWhereUniqueInput
  update: Prisma.XOR<Prisma.ArtifactUpdateWithoutInstancesInput, Prisma.ArtifactUncheckedUpdateWithoutInstancesInput>
  create: Prisma.XOR<Prisma.ArtifactCreateWithoutInstancesInput, Prisma.ArtifactUncheckedCreateWithoutInstancesInput>
}

export type ArtifactUpdateWithWhereUniqueWithoutInstancesInput = {
  where: Prisma.ArtifactWhereUniqueInput
  data: Prisma.XOR<Prisma.ArtifactUpdateWithoutInstancesInput, Prisma.ArtifactUncheckedUpdateWithoutInstancesInput>
}

export type ArtifactUpdateManyWithWhereWithoutInstancesInput = {
  where: Prisma.ArtifactScalarWhereInput
  data: Prisma.XOR<Prisma.ArtifactUpdateManyMutationInput, Prisma.ArtifactUncheckedUpdateManyWithoutInstancesInput>
}

export type ArtifactScalarWhereInput = {
  AND?: Prisma.ArtifactScalarWhereInput | Prisma.ArtifactScalarWhereInput[]
  OR?: Prisma.ArtifactScalarWhereInput[]
  NOT?: Prisma.ArtifactScalarWhereInput | Prisma.ArtifactScalarWhereInput[]
  id?: Prisma.StringFilter<"Artifact"> | string
  meta?: Prisma.JsonFilter<"Artifact">
  hash?: Prisma.StringFilter<"Artifact"> | string
  size?: Prisma.IntFilter<"Artifact"> | number
  chunkSize?: Prisma.IntFilter<"Artifact"> | number
  createdAt?: Prisma.DateTimeFilter<"Artifact"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Artifact"> | Date | string
}

export type ArtifactCreateWithoutPagesInput = {
  id?: string
  meta: PrismaJson.CommonObjectMeta
  hash: string
  size: number
  chunkSize: number
  createdAt?: Date | string
  updatedAt?: Date | string
  serviceAccounts?: Prisma.ServiceAccountCreateNestedManyWithoutArtifactsInput
  instances?: Prisma.InstanceStateCreateNestedManyWithoutArtifactsInput
  terminals?: Prisma.TerminalCreateNestedManyWithoutArtifactsInput
}

export type ArtifactUncheckedCreateWithoutPagesInput = {
  id?: string
  meta: PrismaJson.CommonObjectMeta
  hash: string
  size: number
  chunkSize: number
  createdAt?: Date | string
  updatedAt?: Date | string
  serviceAccounts?: Prisma.ServiceAccountUncheckedCreateNestedManyWithoutArtifactsInput
  instances?: Prisma.InstanceStateUncheckedCreateNestedManyWithoutArtifactsInput
  terminals?: Prisma.TerminalUncheckedCreateNestedManyWithoutArtifactsInput
}

export type ArtifactCreateOrConnectWithoutPagesInput = {
  where: Prisma.ArtifactWhereUniqueInput
  create: Prisma.XOR<Prisma.ArtifactCreateWithoutPagesInput, Prisma.ArtifactUncheckedCreateWithoutPagesInput>
}

export type ArtifactUpsertWithWhereUniqueWithoutPagesInput = {
  where: Prisma.ArtifactWhereUniqueInput
  update: Prisma.XOR<Prisma.ArtifactUpdateWithoutPagesInput, Prisma.ArtifactUncheckedUpdateWithoutPagesInput>
  create: Prisma.XOR<Prisma.ArtifactCreateWithoutPagesInput, Prisma.ArtifactUncheckedCreateWithoutPagesInput>
}

export type ArtifactUpdateWithWhereUniqueWithoutPagesInput = {
  where: Prisma.ArtifactWhereUniqueInput
  data: Prisma.XOR<Prisma.ArtifactUpdateWithoutPagesInput, Prisma.ArtifactUncheckedUpdateWithoutPagesInput>
}

export type ArtifactUpdateManyWithWhereWithoutPagesInput = {
  where: Prisma.ArtifactScalarWhereInput
  data: Prisma.XOR<Prisma.ArtifactUpdateManyMutationInput, Prisma.ArtifactUncheckedUpdateManyWithoutPagesInput>
}

export type ArtifactCreateWithoutServiceAccountsInput = {
  id?: string
  meta: PrismaJson.CommonObjectMeta
  hash: string
  size: number
  chunkSize: number
  createdAt?: Date | string
  updatedAt?: Date | string
  instances?: Prisma.InstanceStateCreateNestedManyWithoutArtifactsInput
  terminals?: Prisma.TerminalCreateNestedManyWithoutArtifactsInput
  pages?: Prisma.PageCreateNestedManyWithoutArtifactsInput
}

export type ArtifactUncheckedCreateWithoutServiceAccountsInput = {
  id?: string
  meta: PrismaJson.CommonObjectMeta
  hash: string
  size: number
  chunkSize: number
  createdAt?: Date | string
  updatedAt?: Date | string
  instances?: Prisma.InstanceStateUncheckedCreateNestedManyWithoutArtifactsInput
  terminals?: Prisma.TerminalUncheckedCreateNestedManyWithoutArtifactsInput
  pages?: Prisma.PageUncheckedCreateNestedManyWithoutArtifactsInput
}

export type ArtifactCreateOrConnectWithoutServiceAccountsInput = {
  where: Prisma.ArtifactWhereUniqueInput
  create: Prisma.XOR<Prisma.ArtifactCreateWithoutServiceAccountsInput, Prisma.ArtifactUncheckedCreateWithoutServiceAccountsInput>
}

export type ArtifactUpsertWithWhereUniqueWithoutServiceAccountsInput = {
  where: Prisma.ArtifactWhereUniqueInput
  update: Prisma.XOR<Prisma.ArtifactUpdateWithoutServiceAccountsInput, Prisma.ArtifactUncheckedUpdateWithoutServiceAccountsInput>
  create: Prisma.XOR<Prisma.ArtifactCreateWithoutServiceAccountsInput, Prisma.ArtifactUncheckedCreateWithoutServiceAccountsInput>
}

export type ArtifactUpdateWithWhereUniqueWithoutServiceAccountsInput = {
  where: Prisma.ArtifactWhereUniqueInput
  data: Prisma.XOR<Prisma.ArtifactUpdateWithoutServiceAccountsInput, Prisma.ArtifactUncheckedUpdateWithoutServiceAccountsInput>
}

export type ArtifactUpdateManyWithWhereWithoutServiceAccountsInput = {
  where: Prisma.ArtifactScalarWhereInput
  data: Prisma.XOR<Prisma.ArtifactUpdateManyMutationInput, Prisma.ArtifactUncheckedUpdateManyWithoutServiceAccountsInput>
}

export type ArtifactCreateWithoutTerminalsInput = {
  id?: string
  meta: PrismaJson.CommonObjectMeta
  hash: string
  size: number
  chunkSize: number
  createdAt?: Date | string
  updatedAt?: Date | string
  serviceAccounts?: Prisma.ServiceAccountCreateNestedManyWithoutArtifactsInput
  instances?: Prisma.InstanceStateCreateNestedManyWithoutArtifactsInput
  pages?: Prisma.PageCreateNestedManyWithoutArtifactsInput
}

export type ArtifactUncheckedCreateWithoutTerminalsInput = {
  id?: string
  meta: PrismaJson.CommonObjectMeta
  hash: string
  size: number
  chunkSize: number
  createdAt?: Date | string
  updatedAt?: Date | string
  serviceAccounts?: Prisma.ServiceAccountUncheckedCreateNestedManyWithoutArtifactsInput
  instances?: Prisma.InstanceStateUncheckedCreateNestedManyWithoutArtifactsInput
  pages?: Prisma.PageUncheckedCreateNestedManyWithoutArtifactsInput
}

export type ArtifactCreateOrConnectWithoutTerminalsInput = {
  where: Prisma.ArtifactWhereUniqueInput
  create: Prisma.XOR<Prisma.ArtifactCreateWithoutTerminalsInput, Prisma.ArtifactUncheckedCreateWithoutTerminalsInput>
}

export type ArtifactUpsertWithWhereUniqueWithoutTerminalsInput = {
  where: Prisma.ArtifactWhereUniqueInput
  update: Prisma.XOR<Prisma.ArtifactUpdateWithoutTerminalsInput, Prisma.ArtifactUncheckedUpdateWithoutTerminalsInput>
  create: Prisma.XOR<Prisma.ArtifactCreateWithoutTerminalsInput, Prisma.ArtifactUncheckedCreateWithoutTerminalsInput>
}

export type ArtifactUpdateWithWhereUniqueWithoutTerminalsInput = {
  where: Prisma.ArtifactWhereUniqueInput
  data: Prisma.XOR<Prisma.ArtifactUpdateWithoutTerminalsInput, Prisma.ArtifactUncheckedUpdateWithoutTerminalsInput>
}

export type ArtifactUpdateManyWithWhereWithoutTerminalsInput = {
  where: Prisma.ArtifactScalarWhereInput
  data: Prisma.XOR<Prisma.ArtifactUpdateManyMutationInput, Prisma.ArtifactUncheckedUpdateManyWithoutTerminalsInput>
}

export type ArtifactUpdateWithoutInstancesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.CommonObjectMeta
  hash?: Prisma.StringFieldUpdateOperationsInput | string
  size?: Prisma.IntFieldUpdateOperationsInput | number
  chunkSize?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  serviceAccounts?: Prisma.ServiceAccountUpdateManyWithoutArtifactsNestedInput
  terminals?: Prisma.TerminalUpdateManyWithoutArtifactsNestedInput
  pages?: Prisma.PageUpdateManyWithoutArtifactsNestedInput
}

export type ArtifactUncheckedUpdateWithoutInstancesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.CommonObjectMeta
  hash?: Prisma.StringFieldUpdateOperationsInput | string
  size?: Prisma.IntFieldUpdateOperationsInput | number
  chunkSize?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  serviceAccounts?: Prisma.ServiceAccountUncheckedUpdateManyWithoutArtifactsNestedInput
  terminals?: Prisma.TerminalUncheckedUpdateManyWithoutArtifactsNestedInput
  pages?: Prisma.PageUncheckedUpdateManyWithoutArtifactsNestedInput
}

export type ArtifactUncheckedUpdateManyWithoutInstancesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  hash?: Prisma.StringFieldUpdateOperationsInput | string
  size?: Prisma.IntFieldUpdateOperationsInput | number
  chunkSize?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ArtifactUpdateWithoutPagesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.CommonObjectMeta
  hash?: Prisma.StringFieldUpdateOperationsInput | string
  size?: Prisma.IntFieldUpdateOperationsInput | number
  chunkSize?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  serviceAccounts?: Prisma.ServiceAccountUpdateManyWithoutArtifactsNestedInput
  instances?: Prisma.InstanceStateUpdateManyWithoutArtifactsNestedInput
  terminals?: Prisma.TerminalUpdateManyWithoutArtifactsNestedInput
}

export type ArtifactUncheckedUpdateWithoutPagesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.CommonObjectMeta
  hash?: Prisma.StringFieldUpdateOperationsInput | string
  size?: Prisma.IntFieldUpdateOperationsInput | number
  chunkSize?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  serviceAccounts?: Prisma.ServiceAccountUncheckedUpdateManyWithoutArtifactsNestedInput
  instances?: Prisma.InstanceStateUncheckedUpdateManyWithoutArtifactsNestedInput
  terminals?: Prisma.TerminalUncheckedUpdateManyWithoutArtifactsNestedInput
}

export type ArtifactUncheckedUpdateManyWithoutPagesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  hash?: Prisma.StringFieldUpdateOperationsInput | string
  size?: Prisma.IntFieldUpdateOperationsInput | number
  chunkSize?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ArtifactUpdateWithoutServiceAccountsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.CommonObjectMeta
  hash?: Prisma.StringFieldUpdateOperationsInput | string
  size?: Prisma.IntFieldUpdateOperationsInput | number
  chunkSize?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  instances?: Prisma.InstanceStateUpdateManyWithoutArtifactsNestedInput
  terminals?: Prisma.TerminalUpdateManyWithoutArtifactsNestedInput
  pages?: Prisma.PageUpdateManyWithoutArtifactsNestedInput
}

export type ArtifactUncheckedUpdateWithoutServiceAccountsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.CommonObjectMeta
  hash?: Prisma.StringFieldUpdateOperationsInput | string
  size?: Prisma.IntFieldUpdateOperationsInput | number
  chunkSize?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  instances?: Prisma.InstanceStateUncheckedUpdateManyWithoutArtifactsNestedInput
  terminals?: Prisma.TerminalUncheckedUpdateManyWithoutArtifactsNestedInput
  pages?: Prisma.PageUncheckedUpdateManyWithoutArtifactsNestedInput
}

export type ArtifactUncheckedUpdateManyWithoutServiceAccountsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  hash?: Prisma.StringFieldUpdateOperationsInput | string
  size?: Prisma.IntFieldUpdateOperationsInput | number
  chunkSize?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ArtifactUpdateWithoutTerminalsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.CommonObjectMeta
  hash?: Prisma.StringFieldUpdateOperationsInput | string
  size?: Prisma.IntFieldUpdateOperationsInput | number
  chunkSize?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  serviceAccounts?: Prisma.ServiceAccountUpdateManyWithoutArtifactsNestedInput
  instances?: Prisma.InstanceStateUpdateManyWithoutArtifactsNestedInput
  pages?: Prisma.PageUpdateManyWithoutArtifactsNestedInput
}

export type ArtifactUncheckedUpdateWithoutTerminalsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: PrismaJson.CommonObjectMeta
  hash?: Prisma.StringFieldUpdateOperationsInput | string
  size?: Prisma.IntFieldUpdateOperationsInput | number
  chunkSize?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  serviceAccounts?: Prisma.ServiceAccountUncheckedUpdateManyWithoutArtifactsNestedInput
  instances?: Prisma.InstanceStateUncheckedUpdateManyWithoutArtifactsNestedInput
  pages?: Prisma.PageUncheckedUpdateManyWithoutArtifactsNestedInput
}

export type ArtifactUncheckedUpdateManyWithoutTerminalsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  hash?: Prisma.StringFieldUpdateOperationsInput | string
  size?: Prisma.IntFieldUpdateOperationsInput | number
  chunkSize?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type ArtifactCountOutputType
 */

export type ArtifactCountOutputType = {
  serviceAccounts: number
  instances: number
  terminals: number
  pages: number
}

export type ArtifactCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  serviceAccounts?: boolean | ArtifactCountOutputTypeCountServiceAccountsArgs
  instances?: boolean | ArtifactCountOutputTypeCountInstancesArgs
  terminals?: boolean | ArtifactCountOutputTypeCountTerminalsArgs
  pages?: boolean | ArtifactCountOutputTypeCountPagesArgs
}

/**
 * ArtifactCountOutputType without action
 */
export type ArtifactCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ArtifactCountOutputType
   */
  select?: Prisma.ArtifactCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ArtifactCountOutputType without action
 */
export type ArtifactCountOutputTypeCountServiceAccountsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ServiceAccountWhereInput
}

/**
 * ArtifactCountOutputType without action
 */
export type ArtifactCountOutputTypeCountInstancesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.InstanceStateWhereInput
}

/**
 * ArtifactCountOutputType without action
 */
export type ArtifactCountOutputTypeCountTerminalsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TerminalWhereInput
}

/**
 * ArtifactCountOutputType without action
 */
export type ArtifactCountOutputTypeCountPagesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PageWhereInput
}


export type ArtifactSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  meta?: boolean
  hash?: boolean
  size?: boolean
  chunkSize?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  serviceAccounts?: boolean | Prisma.Artifact$serviceAccountsArgs<ExtArgs>
  instances?: boolean | Prisma.Artifact$instancesArgs<ExtArgs>
  terminals?: boolean | Prisma.Artifact$terminalsArgs<ExtArgs>
  pages?: boolean | Prisma.Artifact$pagesArgs<ExtArgs>
  _count?: boolean | Prisma.ArtifactCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["artifact"]>

export type ArtifactSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  meta?: boolean
  hash?: boolean
  size?: boolean
  chunkSize?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["artifact"]>

export type ArtifactSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  meta?: boolean
  hash?: boolean
  size?: boolean
  chunkSize?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["artifact"]>

export type ArtifactSelectScalar = {
  id?: boolean
  meta?: boolean
  hash?: boolean
  size?: boolean
  chunkSize?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type ArtifactOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "meta" | "hash" | "size" | "chunkSize" | "createdAt" | "updatedAt", ExtArgs["result"]["artifact"]>
export type ArtifactInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  serviceAccounts?: boolean | Prisma.Artifact$serviceAccountsArgs<ExtArgs>
  instances?: boolean | Prisma.Artifact$instancesArgs<ExtArgs>
  terminals?: boolean | Prisma.Artifact$terminalsArgs<ExtArgs>
  pages?: boolean | Prisma.Artifact$pagesArgs<ExtArgs>
  _count?: boolean | Prisma.ArtifactCountOutputTypeDefaultArgs<ExtArgs>
}
export type ArtifactIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type ArtifactIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $ArtifactPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Artifact"
  objects: {
    /**
     * The service accounts using this artifact.
     */
    serviceAccounts: Prisma.$ServiceAccountPayload<ExtArgs>[]
    /**
     * The instances using this artifact.
     */
    instances: Prisma.$InstanceStatePayload<ExtArgs>[]
    /**
     * The terminals using this artifact.
     */
    terminals: Prisma.$TerminalPayload<ExtArgs>[]
    /**
     * The pages using this artifact.
     */
    pages: Prisma.$PagePayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    /**
     * The CUIDv2 of the artifact.
     */
    id: string
    /**
     * The metadata of the artifact managed by the backend.
     * 
     * Since multiple actors can produce the same artifact,
     * this metadata is the last one provided by any actor.
     * 
     * [CommonObjectMeta]
     */
    meta: PrismaJson.CommonObjectMeta
    /**
     * The SHA256 hash of the artifact content.
     */
    hash: string
    /**
     * The size of the compressed artifact content in bytes.
     * 
     * Does not represent the size of the original file or folder,
     * but the size used to store the artifact in the system.
     */
    size: number
    /**
     * The chunk size of the artifact content in bytes.
     * Used to split the artifact into smaller chunks for storage.
     */
    chunkSize: number
    /**
     * The time when the artifact first appeared in the system.
     */
    createdAt: Date
    /**
     * The time when the artifact was last updated.
     */
    updatedAt: Date
  }, ExtArgs["result"]["artifact"]>
  composites: {}
}

export type ArtifactGetPayload<S extends boolean | null | undefined | ArtifactDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ArtifactPayload, S>

export type ArtifactCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ArtifactFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ArtifactCountAggregateInputType | true
  }

export interface ArtifactDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Artifact'], meta: { name: 'Artifact' } }
  /**
   * Find zero or one Artifact that matches the filter.
   * @param {ArtifactFindUniqueArgs} args - Arguments to find a Artifact
   * @example
   * // Get one Artifact
   * const artifact = await prisma.artifact.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ArtifactFindUniqueArgs>(args: Prisma.SelectSubset<T, ArtifactFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ArtifactClient<runtime.Types.Result.GetResult<Prisma.$ArtifactPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Artifact that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ArtifactFindUniqueOrThrowArgs} args - Arguments to find a Artifact
   * @example
   * // Get one Artifact
   * const artifact = await prisma.artifact.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ArtifactFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ArtifactFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ArtifactClient<runtime.Types.Result.GetResult<Prisma.$ArtifactPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Artifact that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArtifactFindFirstArgs} args - Arguments to find a Artifact
   * @example
   * // Get one Artifact
   * const artifact = await prisma.artifact.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ArtifactFindFirstArgs>(args?: Prisma.SelectSubset<T, ArtifactFindFirstArgs<ExtArgs>>): Prisma.Prisma__ArtifactClient<runtime.Types.Result.GetResult<Prisma.$ArtifactPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Artifact that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArtifactFindFirstOrThrowArgs} args - Arguments to find a Artifact
   * @example
   * // Get one Artifact
   * const artifact = await prisma.artifact.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ArtifactFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ArtifactFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ArtifactClient<runtime.Types.Result.GetResult<Prisma.$ArtifactPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Artifacts that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArtifactFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Artifacts
   * const artifacts = await prisma.artifact.findMany()
   * 
   * // Get first 10 Artifacts
   * const artifacts = await prisma.artifact.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const artifactWithIdOnly = await prisma.artifact.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ArtifactFindManyArgs>(args?: Prisma.SelectSubset<T, ArtifactFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ArtifactPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Artifact.
   * @param {ArtifactCreateArgs} args - Arguments to create a Artifact.
   * @example
   * // Create one Artifact
   * const Artifact = await prisma.artifact.create({
   *   data: {
   *     // ... data to create a Artifact
   *   }
   * })
   * 
   */
  create<T extends ArtifactCreateArgs>(args: Prisma.SelectSubset<T, ArtifactCreateArgs<ExtArgs>>): Prisma.Prisma__ArtifactClient<runtime.Types.Result.GetResult<Prisma.$ArtifactPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Artifacts.
   * @param {ArtifactCreateManyArgs} args - Arguments to create many Artifacts.
   * @example
   * // Create many Artifacts
   * const artifact = await prisma.artifact.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ArtifactCreateManyArgs>(args?: Prisma.SelectSubset<T, ArtifactCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Artifacts and returns the data saved in the database.
   * @param {ArtifactCreateManyAndReturnArgs} args - Arguments to create many Artifacts.
   * @example
   * // Create many Artifacts
   * const artifact = await prisma.artifact.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Artifacts and only return the `id`
   * const artifactWithIdOnly = await prisma.artifact.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ArtifactCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ArtifactCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ArtifactPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Artifact.
   * @param {ArtifactDeleteArgs} args - Arguments to delete one Artifact.
   * @example
   * // Delete one Artifact
   * const Artifact = await prisma.artifact.delete({
   *   where: {
   *     // ... filter to delete one Artifact
   *   }
   * })
   * 
   */
  delete<T extends ArtifactDeleteArgs>(args: Prisma.SelectSubset<T, ArtifactDeleteArgs<ExtArgs>>): Prisma.Prisma__ArtifactClient<runtime.Types.Result.GetResult<Prisma.$ArtifactPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Artifact.
   * @param {ArtifactUpdateArgs} args - Arguments to update one Artifact.
   * @example
   * // Update one Artifact
   * const artifact = await prisma.artifact.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ArtifactUpdateArgs>(args: Prisma.SelectSubset<T, ArtifactUpdateArgs<ExtArgs>>): Prisma.Prisma__ArtifactClient<runtime.Types.Result.GetResult<Prisma.$ArtifactPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Artifacts.
   * @param {ArtifactDeleteManyArgs} args - Arguments to filter Artifacts to delete.
   * @example
   * // Delete a few Artifacts
   * const { count } = await prisma.artifact.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ArtifactDeleteManyArgs>(args?: Prisma.SelectSubset<T, ArtifactDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Artifacts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArtifactUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Artifacts
   * const artifact = await prisma.artifact.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ArtifactUpdateManyArgs>(args: Prisma.SelectSubset<T, ArtifactUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Artifacts and returns the data updated in the database.
   * @param {ArtifactUpdateManyAndReturnArgs} args - Arguments to update many Artifacts.
   * @example
   * // Update many Artifacts
   * const artifact = await prisma.artifact.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Artifacts and only return the `id`
   * const artifactWithIdOnly = await prisma.artifact.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ArtifactUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ArtifactUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ArtifactPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Artifact.
   * @param {ArtifactUpsertArgs} args - Arguments to update or create a Artifact.
   * @example
   * // Update or create a Artifact
   * const artifact = await prisma.artifact.upsert({
   *   create: {
   *     // ... data to create a Artifact
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Artifact we want to update
   *   }
   * })
   */
  upsert<T extends ArtifactUpsertArgs>(args: Prisma.SelectSubset<T, ArtifactUpsertArgs<ExtArgs>>): Prisma.Prisma__ArtifactClient<runtime.Types.Result.GetResult<Prisma.$ArtifactPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Artifacts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArtifactCountArgs} args - Arguments to filter Artifacts to count.
   * @example
   * // Count the number of Artifacts
   * const count = await prisma.artifact.count({
   *   where: {
   *     // ... the filter for the Artifacts we want to count
   *   }
   * })
  **/
  count<T extends ArtifactCountArgs>(
    args?: Prisma.Subset<T, ArtifactCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ArtifactCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Artifact.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArtifactAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ArtifactAggregateArgs>(args: Prisma.Subset<T, ArtifactAggregateArgs>): Prisma.PrismaPromise<GetArtifactAggregateType<T>>

  /**
   * Group by Artifact.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArtifactGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ArtifactGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ArtifactGroupByArgs['orderBy'] }
      : { orderBy?: ArtifactGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ArtifactGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetArtifactGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Artifact model
 */
readonly fields: ArtifactFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Artifact.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ArtifactClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  serviceAccounts<T extends Prisma.Artifact$serviceAccountsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Artifact$serviceAccountsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ServiceAccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  instances<T extends Prisma.Artifact$instancesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Artifact$instancesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$InstanceStatePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  terminals<T extends Prisma.Artifact$terminalsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Artifact$terminalsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TerminalPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  pages<T extends Prisma.Artifact$pagesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Artifact$pagesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Artifact model
 */
export interface ArtifactFieldRefs {
  readonly id: Prisma.FieldRef<"Artifact", 'String'>
  readonly meta: Prisma.FieldRef<"Artifact", 'Json'>
  readonly hash: Prisma.FieldRef<"Artifact", 'String'>
  readonly size: Prisma.FieldRef<"Artifact", 'Int'>
  readonly chunkSize: Prisma.FieldRef<"Artifact", 'Int'>
  readonly createdAt: Prisma.FieldRef<"Artifact", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Artifact", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Artifact findUnique
 */
export type ArtifactFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Artifact
   */
  select?: Prisma.ArtifactSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Artifact
   */
  omit?: Prisma.ArtifactOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArtifactInclude<ExtArgs> | null
  /**
   * Filter, which Artifact to fetch.
   */
  where: Prisma.ArtifactWhereUniqueInput
}

/**
 * Artifact findUniqueOrThrow
 */
export type ArtifactFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Artifact
   */
  select?: Prisma.ArtifactSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Artifact
   */
  omit?: Prisma.ArtifactOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArtifactInclude<ExtArgs> | null
  /**
   * Filter, which Artifact to fetch.
   */
  where: Prisma.ArtifactWhereUniqueInput
}

/**
 * Artifact findFirst
 */
export type ArtifactFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Artifact
   */
  select?: Prisma.ArtifactSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Artifact
   */
  omit?: Prisma.ArtifactOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArtifactInclude<ExtArgs> | null
  /**
   * Filter, which Artifact to fetch.
   */
  where?: Prisma.ArtifactWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Artifacts to fetch.
   */
  orderBy?: Prisma.ArtifactOrderByWithRelationInput | Prisma.ArtifactOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Artifacts.
   */
  cursor?: Prisma.ArtifactWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Artifacts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Artifacts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Artifacts.
   */
  distinct?: Prisma.ArtifactScalarFieldEnum | Prisma.ArtifactScalarFieldEnum[]
}

/**
 * Artifact findFirstOrThrow
 */
export type ArtifactFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Artifact
   */
  select?: Prisma.ArtifactSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Artifact
   */
  omit?: Prisma.ArtifactOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArtifactInclude<ExtArgs> | null
  /**
   * Filter, which Artifact to fetch.
   */
  where?: Prisma.ArtifactWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Artifacts to fetch.
   */
  orderBy?: Prisma.ArtifactOrderByWithRelationInput | Prisma.ArtifactOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Artifacts.
   */
  cursor?: Prisma.ArtifactWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Artifacts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Artifacts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Artifacts.
   */
  distinct?: Prisma.ArtifactScalarFieldEnum | Prisma.ArtifactScalarFieldEnum[]
}

/**
 * Artifact findMany
 */
export type ArtifactFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Artifact
   */
  select?: Prisma.ArtifactSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Artifact
   */
  omit?: Prisma.ArtifactOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArtifactInclude<ExtArgs> | null
  /**
   * Filter, which Artifacts to fetch.
   */
  where?: Prisma.ArtifactWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Artifacts to fetch.
   */
  orderBy?: Prisma.ArtifactOrderByWithRelationInput | Prisma.ArtifactOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Artifacts.
   */
  cursor?: Prisma.ArtifactWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Artifacts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Artifacts.
   */
  skip?: number
  distinct?: Prisma.ArtifactScalarFieldEnum | Prisma.ArtifactScalarFieldEnum[]
}

/**
 * Artifact create
 */
export type ArtifactCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Artifact
   */
  select?: Prisma.ArtifactSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Artifact
   */
  omit?: Prisma.ArtifactOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArtifactInclude<ExtArgs> | null
  /**
   * The data needed to create a Artifact.
   */
  data: Prisma.XOR<Prisma.ArtifactCreateInput, Prisma.ArtifactUncheckedCreateInput>
}

/**
 * Artifact createMany
 */
export type ArtifactCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Artifacts.
   */
  data: Prisma.ArtifactCreateManyInput | Prisma.ArtifactCreateManyInput[]
}

/**
 * Artifact createManyAndReturn
 */
export type ArtifactCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Artifact
   */
  select?: Prisma.ArtifactSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Artifact
   */
  omit?: Prisma.ArtifactOmit<ExtArgs> | null
  /**
   * The data used to create many Artifacts.
   */
  data: Prisma.ArtifactCreateManyInput | Prisma.ArtifactCreateManyInput[]
}

/**
 * Artifact update
 */
export type ArtifactUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Artifact
   */
  select?: Prisma.ArtifactSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Artifact
   */
  omit?: Prisma.ArtifactOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArtifactInclude<ExtArgs> | null
  /**
   * The data needed to update a Artifact.
   */
  data: Prisma.XOR<Prisma.ArtifactUpdateInput, Prisma.ArtifactUncheckedUpdateInput>
  /**
   * Choose, which Artifact to update.
   */
  where: Prisma.ArtifactWhereUniqueInput
}

/**
 * Artifact updateMany
 */
export type ArtifactUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Artifacts.
   */
  data: Prisma.XOR<Prisma.ArtifactUpdateManyMutationInput, Prisma.ArtifactUncheckedUpdateManyInput>
  /**
   * Filter which Artifacts to update
   */
  where?: Prisma.ArtifactWhereInput
  /**
   * Limit how many Artifacts to update.
   */
  limit?: number
}

/**
 * Artifact updateManyAndReturn
 */
export type ArtifactUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Artifact
   */
  select?: Prisma.ArtifactSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Artifact
   */
  omit?: Prisma.ArtifactOmit<ExtArgs> | null
  /**
   * The data used to update Artifacts.
   */
  data: Prisma.XOR<Prisma.ArtifactUpdateManyMutationInput, Prisma.ArtifactUncheckedUpdateManyInput>
  /**
   * Filter which Artifacts to update
   */
  where?: Prisma.ArtifactWhereInput
  /**
   * Limit how many Artifacts to update.
   */
  limit?: number
}

/**
 * Artifact upsert
 */
export type ArtifactUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Artifact
   */
  select?: Prisma.ArtifactSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Artifact
   */
  omit?: Prisma.ArtifactOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArtifactInclude<ExtArgs> | null
  /**
   * The filter to search for the Artifact to update in case it exists.
   */
  where: Prisma.ArtifactWhereUniqueInput
  /**
   * In case the Artifact found by the `where` argument doesn't exist, create a new Artifact with this data.
   */
  create: Prisma.XOR<Prisma.ArtifactCreateInput, Prisma.ArtifactUncheckedCreateInput>
  /**
   * In case the Artifact was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ArtifactUpdateInput, Prisma.ArtifactUncheckedUpdateInput>
}

/**
 * Artifact delete
 */
export type ArtifactDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Artifact
   */
  select?: Prisma.ArtifactSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Artifact
   */
  omit?: Prisma.ArtifactOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArtifactInclude<ExtArgs> | null
  /**
   * Filter which Artifact to delete.
   */
  where: Prisma.ArtifactWhereUniqueInput
}

/**
 * Artifact deleteMany
 */
export type ArtifactDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Artifacts to delete
   */
  where?: Prisma.ArtifactWhereInput
  /**
   * Limit how many Artifacts to delete.
   */
  limit?: number
}

/**
 * Artifact.serviceAccounts
 */
export type Artifact$serviceAccountsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ServiceAccount
   */
  select?: Prisma.ServiceAccountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ServiceAccount
   */
  omit?: Prisma.ServiceAccountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ServiceAccountInclude<ExtArgs> | null
  where?: Prisma.ServiceAccountWhereInput
  orderBy?: Prisma.ServiceAccountOrderByWithRelationInput | Prisma.ServiceAccountOrderByWithRelationInput[]
  cursor?: Prisma.ServiceAccountWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ServiceAccountScalarFieldEnum | Prisma.ServiceAccountScalarFieldEnum[]
}

/**
 * Artifact.instances
 */
export type Artifact$instancesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InstanceState
   */
  select?: Prisma.InstanceStateSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InstanceState
   */
  omit?: Prisma.InstanceStateOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstanceStateInclude<ExtArgs> | null
  where?: Prisma.InstanceStateWhereInput
  orderBy?: Prisma.InstanceStateOrderByWithRelationInput | Prisma.InstanceStateOrderByWithRelationInput[]
  cursor?: Prisma.InstanceStateWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.InstanceStateScalarFieldEnum | Prisma.InstanceStateScalarFieldEnum[]
}

/**
 * Artifact.terminals
 */
export type Artifact$terminalsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Terminal
   */
  select?: Prisma.TerminalSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Terminal
   */
  omit?: Prisma.TerminalOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TerminalInclude<ExtArgs> | null
  where?: Prisma.TerminalWhereInput
  orderBy?: Prisma.TerminalOrderByWithRelationInput | Prisma.TerminalOrderByWithRelationInput[]
  cursor?: Prisma.TerminalWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TerminalScalarFieldEnum | Prisma.TerminalScalarFieldEnum[]
}

/**
 * Artifact.pages
 */
export type Artifact$pagesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Page
   */
  select?: Prisma.PageSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Page
   */
  omit?: Prisma.PageOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PageInclude<ExtArgs> | null
  where?: Prisma.PageWhereInput
  orderBy?: Prisma.PageOrderByWithRelationInput | Prisma.PageOrderByWithRelationInput[]
  cursor?: Prisma.PageWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PageScalarFieldEnum | Prisma.PageScalarFieldEnum[]
}

/**
 * Artifact without action
 */
export type ArtifactDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Artifact
   */
  select?: Prisma.ArtifactSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Artifact
   */
  omit?: Prisma.ArtifactOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArtifactInclude<ExtArgs> | null
}
