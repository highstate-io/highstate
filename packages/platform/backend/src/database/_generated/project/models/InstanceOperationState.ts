
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `InstanceOperationState` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */

import type * as PJTG from '../pjtg.ts';
import * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model InstanceOperationState
 * 
 */
export type InstanceOperationStateModel = runtime.Types.Result.DefaultSelection<Prisma.$InstanceOperationStatePayload>

export type AggregateInstanceOperationState = {
  _count: InstanceOperationStateCountAggregateOutputType | null
  _avg: InstanceOperationStateAvgAggregateOutputType | null
  _sum: InstanceOperationStateSumAggregateOutputType | null
  _min: InstanceOperationStateMinAggregateOutputType | null
  _max: InstanceOperationStateMaxAggregateOutputType | null
}

export type InstanceOperationStateAvgAggregateOutputType = {
  currentResourceCount: number | null
  totalResourceCount: number | null
}

export type InstanceOperationStateSumAggregateOutputType = {
  currentResourceCount: number | null
  totalResourceCount: number | null
}

export type InstanceOperationStateMinAggregateOutputType = {
  operationId: string | null
  stateId: string | null
  status: $Enums.InstanceOperationStatus | null
  currentResourceCount: number | null
  totalResourceCount: number | null
  startedAt: Date | null
  finishedAt: Date | null
}

export type InstanceOperationStateMaxAggregateOutputType = {
  operationId: string | null
  stateId: string | null
  status: $Enums.InstanceOperationStatus | null
  currentResourceCount: number | null
  totalResourceCount: number | null
  startedAt: Date | null
  finishedAt: Date | null
}

export type InstanceOperationStateCountAggregateOutputType = {
  operationId: number
  stateId: number
  status: number
  currentResourceCount: number
  totalResourceCount: number
  model: number
  resolvedInputs: number
  startedAt: number
  finishedAt: number
  _all: number
}


export type InstanceOperationStateAvgAggregateInputType = {
  currentResourceCount?: true
  totalResourceCount?: true
}

export type InstanceOperationStateSumAggregateInputType = {
  currentResourceCount?: true
  totalResourceCount?: true
}

export type InstanceOperationStateMinAggregateInputType = {
  operationId?: true
  stateId?: true
  status?: true
  currentResourceCount?: true
  totalResourceCount?: true
  startedAt?: true
  finishedAt?: true
}

export type InstanceOperationStateMaxAggregateInputType = {
  operationId?: true
  stateId?: true
  status?: true
  currentResourceCount?: true
  totalResourceCount?: true
  startedAt?: true
  finishedAt?: true
}

export type InstanceOperationStateCountAggregateInputType = {
  operationId?: true
  stateId?: true
  status?: true
  currentResourceCount?: true
  totalResourceCount?: true
  model?: true
  resolvedInputs?: true
  startedAt?: true
  finishedAt?: true
  _all?: true
}

export type InstanceOperationStateAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which InstanceOperationState to aggregate.
   */
  where?: Prisma.InstanceOperationStateWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of InstanceOperationStates to fetch.
   */
  orderBy?: Prisma.InstanceOperationStateOrderByWithRelationInput | Prisma.InstanceOperationStateOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.InstanceOperationStateWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` InstanceOperationStates from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` InstanceOperationStates.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned InstanceOperationStates
  **/
  _count?: true | InstanceOperationStateCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: InstanceOperationStateAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: InstanceOperationStateSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: InstanceOperationStateMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: InstanceOperationStateMaxAggregateInputType
}

export type GetInstanceOperationStateAggregateType<T extends InstanceOperationStateAggregateArgs> = {
      [P in keyof T & keyof AggregateInstanceOperationState]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateInstanceOperationState[P]>
    : Prisma.GetScalarType<T[P], AggregateInstanceOperationState[P]>
}




export type InstanceOperationStateGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.InstanceOperationStateWhereInput
  orderBy?: Prisma.InstanceOperationStateOrderByWithAggregationInput | Prisma.InstanceOperationStateOrderByWithAggregationInput[]
  by: Prisma.InstanceOperationStateScalarFieldEnum[] | Prisma.InstanceOperationStateScalarFieldEnum
  having?: Prisma.InstanceOperationStateScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: InstanceOperationStateCountAggregateInputType | true
  _avg?: InstanceOperationStateAvgAggregateInputType
  _sum?: InstanceOperationStateSumAggregateInputType
  _min?: InstanceOperationStateMinAggregateInputType
  _max?: InstanceOperationStateMaxAggregateInputType
}

export type InstanceOperationStateGroupByOutputType = {
  operationId: string
  stateId: string
  status: $Enums.InstanceOperationStatus
  currentResourceCount: number | null
  totalResourceCount: number | null
  model: PrismaJson.InstanceModel
  resolvedInputs: PrismaJson.InstanceResolvedInputs
  startedAt: Date | null
  finishedAt: Date | null
  _count: InstanceOperationStateCountAggregateOutputType | null
  _avg: InstanceOperationStateAvgAggregateOutputType | null
  _sum: InstanceOperationStateSumAggregateOutputType | null
  _min: InstanceOperationStateMinAggregateOutputType | null
  _max: InstanceOperationStateMaxAggregateOutputType | null
}

type GetInstanceOperationStateGroupByPayload<T extends InstanceOperationStateGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<InstanceOperationStateGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof InstanceOperationStateGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], InstanceOperationStateGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], InstanceOperationStateGroupByOutputType[P]>
      }
    >
  >



export type InstanceOperationStateWhereInput = {
  AND?: Prisma.InstanceOperationStateWhereInput | Prisma.InstanceOperationStateWhereInput[]
  OR?: Prisma.InstanceOperationStateWhereInput[]
  NOT?: Prisma.InstanceOperationStateWhereInput | Prisma.InstanceOperationStateWhereInput[]
  operationId?: Prisma.StringFilter<"InstanceOperationState"> | string
  stateId?: Prisma.StringFilter<"InstanceOperationState"> | string
  status?: Prisma.EnumInstanceOperationStatusFilter<"InstanceOperationState"> | $Enums.InstanceOperationStatus
  currentResourceCount?: Prisma.IntNullableFilter<"InstanceOperationState"> | number | null
  totalResourceCount?: Prisma.IntNullableFilter<"InstanceOperationState"> | number | null
  model?: Prisma.JsonFilter<"InstanceOperationState">
  resolvedInputs?: Prisma.JsonFilter<"InstanceOperationState">
  startedAt?: Prisma.DateTimeNullableFilter<"InstanceOperationState"> | Date | string | null
  finishedAt?: Prisma.DateTimeNullableFilter<"InstanceOperationState"> | Date | string | null
  operation?: Prisma.XOR<Prisma.OperationScalarRelationFilter, Prisma.OperationWhereInput>
  state?: Prisma.XOR<Prisma.InstanceStateScalarRelationFilter, Prisma.InstanceStateWhereInput>
}

export type InstanceOperationStateOrderByWithRelationInput = {
  operationId?: Prisma.SortOrder
  stateId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  currentResourceCount?: Prisma.SortOrderInput | Prisma.SortOrder
  totalResourceCount?: Prisma.SortOrderInput | Prisma.SortOrder
  model?: Prisma.SortOrder
  resolvedInputs?: Prisma.SortOrder
  startedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  finishedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  operation?: Prisma.OperationOrderByWithRelationInput
  state?: Prisma.InstanceStateOrderByWithRelationInput
}

export type InstanceOperationStateWhereUniqueInput = Prisma.AtLeast<{
  operationId_stateId?: Prisma.InstanceOperationStateOperationIdStateIdCompoundUniqueInput
  AND?: Prisma.InstanceOperationStateWhereInput | Prisma.InstanceOperationStateWhereInput[]
  OR?: Prisma.InstanceOperationStateWhereInput[]
  NOT?: Prisma.InstanceOperationStateWhereInput | Prisma.InstanceOperationStateWhereInput[]
  operationId?: Prisma.StringFilter<"InstanceOperationState"> | string
  stateId?: Prisma.StringFilter<"InstanceOperationState"> | string
  status?: Prisma.EnumInstanceOperationStatusFilter<"InstanceOperationState"> | $Enums.InstanceOperationStatus
  currentResourceCount?: Prisma.IntNullableFilter<"InstanceOperationState"> | number | null
  totalResourceCount?: Prisma.IntNullableFilter<"InstanceOperationState"> | number | null
  model?: Prisma.JsonFilter<"InstanceOperationState">
  resolvedInputs?: Prisma.JsonFilter<"InstanceOperationState">
  startedAt?: Prisma.DateTimeNullableFilter<"InstanceOperationState"> | Date | string | null
  finishedAt?: Prisma.DateTimeNullableFilter<"InstanceOperationState"> | Date | string | null
  operation?: Prisma.XOR<Prisma.OperationScalarRelationFilter, Prisma.OperationWhereInput>
  state?: Prisma.XOR<Prisma.InstanceStateScalarRelationFilter, Prisma.InstanceStateWhereInput>
}, "operationId_stateId">

export type InstanceOperationStateOrderByWithAggregationInput = {
  operationId?: Prisma.SortOrder
  stateId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  currentResourceCount?: Prisma.SortOrderInput | Prisma.SortOrder
  totalResourceCount?: Prisma.SortOrderInput | Prisma.SortOrder
  model?: Prisma.SortOrder
  resolvedInputs?: Prisma.SortOrder
  startedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  finishedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.InstanceOperationStateCountOrderByAggregateInput
  _avg?: Prisma.InstanceOperationStateAvgOrderByAggregateInput
  _max?: Prisma.InstanceOperationStateMaxOrderByAggregateInput
  _min?: Prisma.InstanceOperationStateMinOrderByAggregateInput
  _sum?: Prisma.InstanceOperationStateSumOrderByAggregateInput
}

export type InstanceOperationStateScalarWhereWithAggregatesInput = {
  AND?: Prisma.InstanceOperationStateScalarWhereWithAggregatesInput | Prisma.InstanceOperationStateScalarWhereWithAggregatesInput[]
  OR?: Prisma.InstanceOperationStateScalarWhereWithAggregatesInput[]
  NOT?: Prisma.InstanceOperationStateScalarWhereWithAggregatesInput | Prisma.InstanceOperationStateScalarWhereWithAggregatesInput[]
  operationId?: Prisma.StringWithAggregatesFilter<"InstanceOperationState"> | string
  stateId?: Prisma.StringWithAggregatesFilter<"InstanceOperationState"> | string
  status?: Prisma.EnumInstanceOperationStatusWithAggregatesFilter<"InstanceOperationState"> | $Enums.InstanceOperationStatus
  currentResourceCount?: Prisma.IntNullableWithAggregatesFilter<"InstanceOperationState"> | number | null
  totalResourceCount?: Prisma.IntNullableWithAggregatesFilter<"InstanceOperationState"> | number | null
  model?: Prisma.JsonWithAggregatesFilter<"InstanceOperationState">
  resolvedInputs?: Prisma.JsonWithAggregatesFilter<"InstanceOperationState">
  startedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"InstanceOperationState"> | Date | string | null
  finishedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"InstanceOperationState"> | Date | string | null
}

export type InstanceOperationStateCreateInput = {
  status: $Enums.InstanceOperationStatus
  currentResourceCount?: number | null
  totalResourceCount?: number | null
  model: PrismaJson.InstanceModel
  resolvedInputs: PrismaJson.InstanceResolvedInputs
  startedAt?: Date | string | null
  finishedAt?: Date | string | null
  operation: Prisma.OperationCreateNestedOneWithoutOperationStatesInput
  state: Prisma.InstanceStateCreateNestedOneWithoutOperationStatesInput
}

export type InstanceOperationStateUncheckedCreateInput = {
  operationId: string
  stateId: string
  status: $Enums.InstanceOperationStatus
  currentResourceCount?: number | null
  totalResourceCount?: number | null
  model: PrismaJson.InstanceModel
  resolvedInputs: PrismaJson.InstanceResolvedInputs
  startedAt?: Date | string | null
  finishedAt?: Date | string | null
}

export type InstanceOperationStateUpdateInput = {
  status?: Prisma.EnumInstanceOperationStatusFieldUpdateOperationsInput | $Enums.InstanceOperationStatus
  currentResourceCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  totalResourceCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  model?: PrismaJson.InstanceModel
  resolvedInputs?: PrismaJson.InstanceResolvedInputs
  startedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  finishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  operation?: Prisma.OperationUpdateOneRequiredWithoutOperationStatesNestedInput
  state?: Prisma.InstanceStateUpdateOneRequiredWithoutOperationStatesNestedInput
}

export type InstanceOperationStateUncheckedUpdateInput = {
  operationId?: Prisma.StringFieldUpdateOperationsInput | string
  stateId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumInstanceOperationStatusFieldUpdateOperationsInput | $Enums.InstanceOperationStatus
  currentResourceCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  totalResourceCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  model?: PrismaJson.InstanceModel
  resolvedInputs?: PrismaJson.InstanceResolvedInputs
  startedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  finishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type InstanceOperationStateCreateManyInput = {
  operationId: string
  stateId: string
  status: $Enums.InstanceOperationStatus
  currentResourceCount?: number | null
  totalResourceCount?: number | null
  model: PrismaJson.InstanceModel
  resolvedInputs: PrismaJson.InstanceResolvedInputs
  startedAt?: Date | string | null
  finishedAt?: Date | string | null
}

export type InstanceOperationStateUpdateManyMutationInput = {
  status?: Prisma.EnumInstanceOperationStatusFieldUpdateOperationsInput | $Enums.InstanceOperationStatus
  currentResourceCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  totalResourceCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  model?: PrismaJson.InstanceModel
  resolvedInputs?: PrismaJson.InstanceResolvedInputs
  startedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  finishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type InstanceOperationStateUncheckedUpdateManyInput = {
  operationId?: Prisma.StringFieldUpdateOperationsInput | string
  stateId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumInstanceOperationStatusFieldUpdateOperationsInput | $Enums.InstanceOperationStatus
  currentResourceCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  totalResourceCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  model?: PrismaJson.InstanceModel
  resolvedInputs?: PrismaJson.InstanceResolvedInputs
  startedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  finishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type InstanceOperationStateListRelationFilter = {
  every?: Prisma.InstanceOperationStateWhereInput
  some?: Prisma.InstanceOperationStateWhereInput
  none?: Prisma.InstanceOperationStateWhereInput
}

export type InstanceOperationStateOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type InstanceOperationStateOperationIdStateIdCompoundUniqueInput = {
  operationId: string
  stateId: string
}

export type InstanceOperationStateCountOrderByAggregateInput = {
  operationId?: Prisma.SortOrder
  stateId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  currentResourceCount?: Prisma.SortOrder
  totalResourceCount?: Prisma.SortOrder
  model?: Prisma.SortOrder
  resolvedInputs?: Prisma.SortOrder
  startedAt?: Prisma.SortOrder
  finishedAt?: Prisma.SortOrder
}

export type InstanceOperationStateAvgOrderByAggregateInput = {
  currentResourceCount?: Prisma.SortOrder
  totalResourceCount?: Prisma.SortOrder
}

export type InstanceOperationStateMaxOrderByAggregateInput = {
  operationId?: Prisma.SortOrder
  stateId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  currentResourceCount?: Prisma.SortOrder
  totalResourceCount?: Prisma.SortOrder
  startedAt?: Prisma.SortOrder
  finishedAt?: Prisma.SortOrder
}

export type InstanceOperationStateMinOrderByAggregateInput = {
  operationId?: Prisma.SortOrder
  stateId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  currentResourceCount?: Prisma.SortOrder
  totalResourceCount?: Prisma.SortOrder
  startedAt?: Prisma.SortOrder
  finishedAt?: Prisma.SortOrder
}

export type InstanceOperationStateSumOrderByAggregateInput = {
  currentResourceCount?: Prisma.SortOrder
  totalResourceCount?: Prisma.SortOrder
}

export type InstanceOperationStateCreateNestedManyWithoutStateInput = {
  create?: Prisma.XOR<Prisma.InstanceOperationStateCreateWithoutStateInput, Prisma.InstanceOperationStateUncheckedCreateWithoutStateInput> | Prisma.InstanceOperationStateCreateWithoutStateInput[] | Prisma.InstanceOperationStateUncheckedCreateWithoutStateInput[]
  connectOrCreate?: Prisma.InstanceOperationStateCreateOrConnectWithoutStateInput | Prisma.InstanceOperationStateCreateOrConnectWithoutStateInput[]
  createMany?: Prisma.InstanceOperationStateCreateManyStateInputEnvelope
  connect?: Prisma.InstanceOperationStateWhereUniqueInput | Prisma.InstanceOperationStateWhereUniqueInput[]
}

export type InstanceOperationStateUncheckedCreateNestedManyWithoutStateInput = {
  create?: Prisma.XOR<Prisma.InstanceOperationStateCreateWithoutStateInput, Prisma.InstanceOperationStateUncheckedCreateWithoutStateInput> | Prisma.InstanceOperationStateCreateWithoutStateInput[] | Prisma.InstanceOperationStateUncheckedCreateWithoutStateInput[]
  connectOrCreate?: Prisma.InstanceOperationStateCreateOrConnectWithoutStateInput | Prisma.InstanceOperationStateCreateOrConnectWithoutStateInput[]
  createMany?: Prisma.InstanceOperationStateCreateManyStateInputEnvelope
  connect?: Prisma.InstanceOperationStateWhereUniqueInput | Prisma.InstanceOperationStateWhereUniqueInput[]
}

export type InstanceOperationStateUpdateManyWithoutStateNestedInput = {
  create?: Prisma.XOR<Prisma.InstanceOperationStateCreateWithoutStateInput, Prisma.InstanceOperationStateUncheckedCreateWithoutStateInput> | Prisma.InstanceOperationStateCreateWithoutStateInput[] | Prisma.InstanceOperationStateUncheckedCreateWithoutStateInput[]
  connectOrCreate?: Prisma.InstanceOperationStateCreateOrConnectWithoutStateInput | Prisma.InstanceOperationStateCreateOrConnectWithoutStateInput[]
  upsert?: Prisma.InstanceOperationStateUpsertWithWhereUniqueWithoutStateInput | Prisma.InstanceOperationStateUpsertWithWhereUniqueWithoutStateInput[]
  createMany?: Prisma.InstanceOperationStateCreateManyStateInputEnvelope
  set?: Prisma.InstanceOperationStateWhereUniqueInput | Prisma.InstanceOperationStateWhereUniqueInput[]
  disconnect?: Prisma.InstanceOperationStateWhereUniqueInput | Prisma.InstanceOperationStateWhereUniqueInput[]
  delete?: Prisma.InstanceOperationStateWhereUniqueInput | Prisma.InstanceOperationStateWhereUniqueInput[]
  connect?: Prisma.InstanceOperationStateWhereUniqueInput | Prisma.InstanceOperationStateWhereUniqueInput[]
  update?: Prisma.InstanceOperationStateUpdateWithWhereUniqueWithoutStateInput | Prisma.InstanceOperationStateUpdateWithWhereUniqueWithoutStateInput[]
  updateMany?: Prisma.InstanceOperationStateUpdateManyWithWhereWithoutStateInput | Prisma.InstanceOperationStateUpdateManyWithWhereWithoutStateInput[]
  deleteMany?: Prisma.InstanceOperationStateScalarWhereInput | Prisma.InstanceOperationStateScalarWhereInput[]
}

export type InstanceOperationStateUncheckedUpdateManyWithoutStateNestedInput = {
  create?: Prisma.XOR<Prisma.InstanceOperationStateCreateWithoutStateInput, Prisma.InstanceOperationStateUncheckedCreateWithoutStateInput> | Prisma.InstanceOperationStateCreateWithoutStateInput[] | Prisma.InstanceOperationStateUncheckedCreateWithoutStateInput[]
  connectOrCreate?: Prisma.InstanceOperationStateCreateOrConnectWithoutStateInput | Prisma.InstanceOperationStateCreateOrConnectWithoutStateInput[]
  upsert?: Prisma.InstanceOperationStateUpsertWithWhereUniqueWithoutStateInput | Prisma.InstanceOperationStateUpsertWithWhereUniqueWithoutStateInput[]
  createMany?: Prisma.InstanceOperationStateCreateManyStateInputEnvelope
  set?: Prisma.InstanceOperationStateWhereUniqueInput | Prisma.InstanceOperationStateWhereUniqueInput[]
  disconnect?: Prisma.InstanceOperationStateWhereUniqueInput | Prisma.InstanceOperationStateWhereUniqueInput[]
  delete?: Prisma.InstanceOperationStateWhereUniqueInput | Prisma.InstanceOperationStateWhereUniqueInput[]
  connect?: Prisma.InstanceOperationStateWhereUniqueInput | Prisma.InstanceOperationStateWhereUniqueInput[]
  update?: Prisma.InstanceOperationStateUpdateWithWhereUniqueWithoutStateInput | Prisma.InstanceOperationStateUpdateWithWhereUniqueWithoutStateInput[]
  updateMany?: Prisma.InstanceOperationStateUpdateManyWithWhereWithoutStateInput | Prisma.InstanceOperationStateUpdateManyWithWhereWithoutStateInput[]
  deleteMany?: Prisma.InstanceOperationStateScalarWhereInput | Prisma.InstanceOperationStateScalarWhereInput[]
}

export type InstanceOperationStateCreateNestedManyWithoutOperationInput = {
  create?: Prisma.XOR<Prisma.InstanceOperationStateCreateWithoutOperationInput, Prisma.InstanceOperationStateUncheckedCreateWithoutOperationInput> | Prisma.InstanceOperationStateCreateWithoutOperationInput[] | Prisma.InstanceOperationStateUncheckedCreateWithoutOperationInput[]
  connectOrCreate?: Prisma.InstanceOperationStateCreateOrConnectWithoutOperationInput | Prisma.InstanceOperationStateCreateOrConnectWithoutOperationInput[]
  createMany?: Prisma.InstanceOperationStateCreateManyOperationInputEnvelope
  connect?: Prisma.InstanceOperationStateWhereUniqueInput | Prisma.InstanceOperationStateWhereUniqueInput[]
}

export type InstanceOperationStateUncheckedCreateNestedManyWithoutOperationInput = {
  create?: Prisma.XOR<Prisma.InstanceOperationStateCreateWithoutOperationInput, Prisma.InstanceOperationStateUncheckedCreateWithoutOperationInput> | Prisma.InstanceOperationStateCreateWithoutOperationInput[] | Prisma.InstanceOperationStateUncheckedCreateWithoutOperationInput[]
  connectOrCreate?: Prisma.InstanceOperationStateCreateOrConnectWithoutOperationInput | Prisma.InstanceOperationStateCreateOrConnectWithoutOperationInput[]
  createMany?: Prisma.InstanceOperationStateCreateManyOperationInputEnvelope
  connect?: Prisma.InstanceOperationStateWhereUniqueInput | Prisma.InstanceOperationStateWhereUniqueInput[]
}

export type InstanceOperationStateUpdateManyWithoutOperationNestedInput = {
  create?: Prisma.XOR<Prisma.InstanceOperationStateCreateWithoutOperationInput, Prisma.InstanceOperationStateUncheckedCreateWithoutOperationInput> | Prisma.InstanceOperationStateCreateWithoutOperationInput[] | Prisma.InstanceOperationStateUncheckedCreateWithoutOperationInput[]
  connectOrCreate?: Prisma.InstanceOperationStateCreateOrConnectWithoutOperationInput | Prisma.InstanceOperationStateCreateOrConnectWithoutOperationInput[]
  upsert?: Prisma.InstanceOperationStateUpsertWithWhereUniqueWithoutOperationInput | Prisma.InstanceOperationStateUpsertWithWhereUniqueWithoutOperationInput[]
  createMany?: Prisma.InstanceOperationStateCreateManyOperationInputEnvelope
  set?: Prisma.InstanceOperationStateWhereUniqueInput | Prisma.InstanceOperationStateWhereUniqueInput[]
  disconnect?: Prisma.InstanceOperationStateWhereUniqueInput | Prisma.InstanceOperationStateWhereUniqueInput[]
  delete?: Prisma.InstanceOperationStateWhereUniqueInput | Prisma.InstanceOperationStateWhereUniqueInput[]
  connect?: Prisma.InstanceOperationStateWhereUniqueInput | Prisma.InstanceOperationStateWhereUniqueInput[]
  update?: Prisma.InstanceOperationStateUpdateWithWhereUniqueWithoutOperationInput | Prisma.InstanceOperationStateUpdateWithWhereUniqueWithoutOperationInput[]
  updateMany?: Prisma.InstanceOperationStateUpdateManyWithWhereWithoutOperationInput | Prisma.InstanceOperationStateUpdateManyWithWhereWithoutOperationInput[]
  deleteMany?: Prisma.InstanceOperationStateScalarWhereInput | Prisma.InstanceOperationStateScalarWhereInput[]
}

export type InstanceOperationStateUncheckedUpdateManyWithoutOperationNestedInput = {
  create?: Prisma.XOR<Prisma.InstanceOperationStateCreateWithoutOperationInput, Prisma.InstanceOperationStateUncheckedCreateWithoutOperationInput> | Prisma.InstanceOperationStateCreateWithoutOperationInput[] | Prisma.InstanceOperationStateUncheckedCreateWithoutOperationInput[]
  connectOrCreate?: Prisma.InstanceOperationStateCreateOrConnectWithoutOperationInput | Prisma.InstanceOperationStateCreateOrConnectWithoutOperationInput[]
  upsert?: Prisma.InstanceOperationStateUpsertWithWhereUniqueWithoutOperationInput | Prisma.InstanceOperationStateUpsertWithWhereUniqueWithoutOperationInput[]
  createMany?: Prisma.InstanceOperationStateCreateManyOperationInputEnvelope
  set?: Prisma.InstanceOperationStateWhereUniqueInput | Prisma.InstanceOperationStateWhereUniqueInput[]
  disconnect?: Prisma.InstanceOperationStateWhereUniqueInput | Prisma.InstanceOperationStateWhereUniqueInput[]
  delete?: Prisma.InstanceOperationStateWhereUniqueInput | Prisma.InstanceOperationStateWhereUniqueInput[]
  connect?: Prisma.InstanceOperationStateWhereUniqueInput | Prisma.InstanceOperationStateWhereUniqueInput[]
  update?: Prisma.InstanceOperationStateUpdateWithWhereUniqueWithoutOperationInput | Prisma.InstanceOperationStateUpdateWithWhereUniqueWithoutOperationInput[]
  updateMany?: Prisma.InstanceOperationStateUpdateManyWithWhereWithoutOperationInput | Prisma.InstanceOperationStateUpdateManyWithWhereWithoutOperationInput[]
  deleteMany?: Prisma.InstanceOperationStateScalarWhereInput | Prisma.InstanceOperationStateScalarWhereInput[]
}

export type EnumInstanceOperationStatusFieldUpdateOperationsInput = {
  set?: $Enums.InstanceOperationStatus
}

export type InstanceOperationStateCreateWithoutStateInput = {
  status: $Enums.InstanceOperationStatus
  currentResourceCount?: number | null
  totalResourceCount?: number | null
  model: PrismaJson.InstanceModel
  resolvedInputs: PrismaJson.InstanceResolvedInputs
  startedAt?: Date | string | null
  finishedAt?: Date | string | null
  operation: Prisma.OperationCreateNestedOneWithoutOperationStatesInput
}

export type InstanceOperationStateUncheckedCreateWithoutStateInput = {
  operationId: string
  status: $Enums.InstanceOperationStatus
  currentResourceCount?: number | null
  totalResourceCount?: number | null
  model: PrismaJson.InstanceModel
  resolvedInputs: PrismaJson.InstanceResolvedInputs
  startedAt?: Date | string | null
  finishedAt?: Date | string | null
}

export type InstanceOperationStateCreateOrConnectWithoutStateInput = {
  where: Prisma.InstanceOperationStateWhereUniqueInput
  create: Prisma.XOR<Prisma.InstanceOperationStateCreateWithoutStateInput, Prisma.InstanceOperationStateUncheckedCreateWithoutStateInput>
}

export type InstanceOperationStateCreateManyStateInputEnvelope = {
  data: Prisma.InstanceOperationStateCreateManyStateInput | Prisma.InstanceOperationStateCreateManyStateInput[]
}

export type InstanceOperationStateUpsertWithWhereUniqueWithoutStateInput = {
  where: Prisma.InstanceOperationStateWhereUniqueInput
  update: Prisma.XOR<Prisma.InstanceOperationStateUpdateWithoutStateInput, Prisma.InstanceOperationStateUncheckedUpdateWithoutStateInput>
  create: Prisma.XOR<Prisma.InstanceOperationStateCreateWithoutStateInput, Prisma.InstanceOperationStateUncheckedCreateWithoutStateInput>
}

export type InstanceOperationStateUpdateWithWhereUniqueWithoutStateInput = {
  where: Prisma.InstanceOperationStateWhereUniqueInput
  data: Prisma.XOR<Prisma.InstanceOperationStateUpdateWithoutStateInput, Prisma.InstanceOperationStateUncheckedUpdateWithoutStateInput>
}

export type InstanceOperationStateUpdateManyWithWhereWithoutStateInput = {
  where: Prisma.InstanceOperationStateScalarWhereInput
  data: Prisma.XOR<Prisma.InstanceOperationStateUpdateManyMutationInput, Prisma.InstanceOperationStateUncheckedUpdateManyWithoutStateInput>
}

export type InstanceOperationStateScalarWhereInput = {
  AND?: Prisma.InstanceOperationStateScalarWhereInput | Prisma.InstanceOperationStateScalarWhereInput[]
  OR?: Prisma.InstanceOperationStateScalarWhereInput[]
  NOT?: Prisma.InstanceOperationStateScalarWhereInput | Prisma.InstanceOperationStateScalarWhereInput[]
  operationId?: Prisma.StringFilter<"InstanceOperationState"> | string
  stateId?: Prisma.StringFilter<"InstanceOperationState"> | string
  status?: Prisma.EnumInstanceOperationStatusFilter<"InstanceOperationState"> | $Enums.InstanceOperationStatus
  currentResourceCount?: Prisma.IntNullableFilter<"InstanceOperationState"> | number | null
  totalResourceCount?: Prisma.IntNullableFilter<"InstanceOperationState"> | number | null
  model?: Prisma.JsonFilter<"InstanceOperationState">
  resolvedInputs?: Prisma.JsonFilter<"InstanceOperationState">
  startedAt?: Prisma.DateTimeNullableFilter<"InstanceOperationState"> | Date | string | null
  finishedAt?: Prisma.DateTimeNullableFilter<"InstanceOperationState"> | Date | string | null
}

export type InstanceOperationStateCreateWithoutOperationInput = {
  status: $Enums.InstanceOperationStatus
  currentResourceCount?: number | null
  totalResourceCount?: number | null
  model: PrismaJson.InstanceModel
  resolvedInputs: PrismaJson.InstanceResolvedInputs
  startedAt?: Date | string | null
  finishedAt?: Date | string | null
  state: Prisma.InstanceStateCreateNestedOneWithoutOperationStatesInput
}

export type InstanceOperationStateUncheckedCreateWithoutOperationInput = {
  stateId: string
  status: $Enums.InstanceOperationStatus
  currentResourceCount?: number | null
  totalResourceCount?: number | null
  model: PrismaJson.InstanceModel
  resolvedInputs: PrismaJson.InstanceResolvedInputs
  startedAt?: Date | string | null
  finishedAt?: Date | string | null
}

export type InstanceOperationStateCreateOrConnectWithoutOperationInput = {
  where: Prisma.InstanceOperationStateWhereUniqueInput
  create: Prisma.XOR<Prisma.InstanceOperationStateCreateWithoutOperationInput, Prisma.InstanceOperationStateUncheckedCreateWithoutOperationInput>
}

export type InstanceOperationStateCreateManyOperationInputEnvelope = {
  data: Prisma.InstanceOperationStateCreateManyOperationInput | Prisma.InstanceOperationStateCreateManyOperationInput[]
}

export type InstanceOperationStateUpsertWithWhereUniqueWithoutOperationInput = {
  where: Prisma.InstanceOperationStateWhereUniqueInput
  update: Prisma.XOR<Prisma.InstanceOperationStateUpdateWithoutOperationInput, Prisma.InstanceOperationStateUncheckedUpdateWithoutOperationInput>
  create: Prisma.XOR<Prisma.InstanceOperationStateCreateWithoutOperationInput, Prisma.InstanceOperationStateUncheckedCreateWithoutOperationInput>
}

export type InstanceOperationStateUpdateWithWhereUniqueWithoutOperationInput = {
  where: Prisma.InstanceOperationStateWhereUniqueInput
  data: Prisma.XOR<Prisma.InstanceOperationStateUpdateWithoutOperationInput, Prisma.InstanceOperationStateUncheckedUpdateWithoutOperationInput>
}

export type InstanceOperationStateUpdateManyWithWhereWithoutOperationInput = {
  where: Prisma.InstanceOperationStateScalarWhereInput
  data: Prisma.XOR<Prisma.InstanceOperationStateUpdateManyMutationInput, Prisma.InstanceOperationStateUncheckedUpdateManyWithoutOperationInput>
}

export type InstanceOperationStateCreateManyStateInput = {
  operationId: string
  status: $Enums.InstanceOperationStatus
  currentResourceCount?: number | null
  totalResourceCount?: number | null
  model: PrismaJson.InstanceModel
  resolvedInputs: PrismaJson.InstanceResolvedInputs
  startedAt?: Date | string | null
  finishedAt?: Date | string | null
}

export type InstanceOperationStateUpdateWithoutStateInput = {
  status?: Prisma.EnumInstanceOperationStatusFieldUpdateOperationsInput | $Enums.InstanceOperationStatus
  currentResourceCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  totalResourceCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  model?: PrismaJson.InstanceModel
  resolvedInputs?: PrismaJson.InstanceResolvedInputs
  startedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  finishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  operation?: Prisma.OperationUpdateOneRequiredWithoutOperationStatesNestedInput
}

export type InstanceOperationStateUncheckedUpdateWithoutStateInput = {
  operationId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumInstanceOperationStatusFieldUpdateOperationsInput | $Enums.InstanceOperationStatus
  currentResourceCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  totalResourceCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  model?: PrismaJson.InstanceModel
  resolvedInputs?: PrismaJson.InstanceResolvedInputs
  startedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  finishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type InstanceOperationStateUncheckedUpdateManyWithoutStateInput = {
  operationId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumInstanceOperationStatusFieldUpdateOperationsInput | $Enums.InstanceOperationStatus
  currentResourceCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  totalResourceCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  model?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  resolvedInputs?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  startedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  finishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type InstanceOperationStateCreateManyOperationInput = {
  stateId: string
  status: $Enums.InstanceOperationStatus
  currentResourceCount?: number | null
  totalResourceCount?: number | null
  model: PrismaJson.InstanceModel
  resolvedInputs: PrismaJson.InstanceResolvedInputs
  startedAt?: Date | string | null
  finishedAt?: Date | string | null
}

export type InstanceOperationStateUpdateWithoutOperationInput = {
  status?: Prisma.EnumInstanceOperationStatusFieldUpdateOperationsInput | $Enums.InstanceOperationStatus
  currentResourceCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  totalResourceCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  model?: PrismaJson.InstanceModel
  resolvedInputs?: PrismaJson.InstanceResolvedInputs
  startedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  finishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  state?: Prisma.InstanceStateUpdateOneRequiredWithoutOperationStatesNestedInput
}

export type InstanceOperationStateUncheckedUpdateWithoutOperationInput = {
  stateId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumInstanceOperationStatusFieldUpdateOperationsInput | $Enums.InstanceOperationStatus
  currentResourceCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  totalResourceCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  model?: PrismaJson.InstanceModel
  resolvedInputs?: PrismaJson.InstanceResolvedInputs
  startedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  finishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type InstanceOperationStateUncheckedUpdateManyWithoutOperationInput = {
  stateId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumInstanceOperationStatusFieldUpdateOperationsInput | $Enums.InstanceOperationStatus
  currentResourceCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  totalResourceCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  model?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  resolvedInputs?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  startedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  finishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}



export type InstanceOperationStateSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  operationId?: boolean
  stateId?: boolean
  status?: boolean
  currentResourceCount?: boolean
  totalResourceCount?: boolean
  model?: boolean
  resolvedInputs?: boolean
  startedAt?: boolean
  finishedAt?: boolean
  operation?: boolean | Prisma.OperationDefaultArgs<ExtArgs>
  state?: boolean | Prisma.InstanceStateDefaultArgs<ExtArgs>
}, ExtArgs["result"]["instanceOperationState"]>

export type InstanceOperationStateSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  operationId?: boolean
  stateId?: boolean
  status?: boolean
  currentResourceCount?: boolean
  totalResourceCount?: boolean
  model?: boolean
  resolvedInputs?: boolean
  startedAt?: boolean
  finishedAt?: boolean
  operation?: boolean | Prisma.OperationDefaultArgs<ExtArgs>
  state?: boolean | Prisma.InstanceStateDefaultArgs<ExtArgs>
}, ExtArgs["result"]["instanceOperationState"]>

export type InstanceOperationStateSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  operationId?: boolean
  stateId?: boolean
  status?: boolean
  currentResourceCount?: boolean
  totalResourceCount?: boolean
  model?: boolean
  resolvedInputs?: boolean
  startedAt?: boolean
  finishedAt?: boolean
  operation?: boolean | Prisma.OperationDefaultArgs<ExtArgs>
  state?: boolean | Prisma.InstanceStateDefaultArgs<ExtArgs>
}, ExtArgs["result"]["instanceOperationState"]>

export type InstanceOperationStateSelectScalar = {
  operationId?: boolean
  stateId?: boolean
  status?: boolean
  currentResourceCount?: boolean
  totalResourceCount?: boolean
  model?: boolean
  resolvedInputs?: boolean
  startedAt?: boolean
  finishedAt?: boolean
}

export type InstanceOperationStateOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"operationId" | "stateId" | "status" | "currentResourceCount" | "totalResourceCount" | "model" | "resolvedInputs" | "startedAt" | "finishedAt", ExtArgs["result"]["instanceOperationState"]>
export type InstanceOperationStateInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  operation?: boolean | Prisma.OperationDefaultArgs<ExtArgs>
  state?: boolean | Prisma.InstanceStateDefaultArgs<ExtArgs>
}
export type InstanceOperationStateIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  operation?: boolean | Prisma.OperationDefaultArgs<ExtArgs>
  state?: boolean | Prisma.InstanceStateDefaultArgs<ExtArgs>
}
export type InstanceOperationStateIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  operation?: boolean | Prisma.OperationDefaultArgs<ExtArgs>
  state?: boolean | Prisma.InstanceStateDefaultArgs<ExtArgs>
}

export type $InstanceOperationStatePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "InstanceOperationState"
  objects: {
    /**
     * The operation this state belongs to.
     */
    operation: Prisma.$OperationPayload<ExtArgs>
    /**
     * The instance this state belongs to.
     */
    state: Prisma.$InstanceStatePayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    /**
     * The ID of the operation this state belongs to.
     */
    operationId: string
    /**
     * The ID of the instance state affected by the operation.
     */
    stateId: string
    /**
     * The enum representing the current status of the instance from the operation perspective.
     */
    status: $Enums.InstanceOperationStatus
    /**
     * The current count of the Pulumi resources being managed by this instance.
     */
    currentResourceCount: number | null
    /**
     * The total count of the Pulumi resources that this instance is expected to manage.
     */
    totalResourceCount: number | null
    /**
     * The snapshot of the instance model at the moment of operation start.
     * 
     * [InstanceModel]
     */
    model: PrismaJson.InstanceModel
    /**
     * The snapshot of the resolved inputs at the moment of operation start.
     * 
     * [InstanceResolvedInputs]
     */
    resolvedInputs: PrismaJson.InstanceResolvedInputs
    /**
     * The time when the operation on this instance started.
     * Not populated on create, even if the instance is ready to start immediately.
     */
    startedAt: Date | null
    /**
     * The time when the operation on this instance finished.
     */
    finishedAt: Date | null
  }, ExtArgs["result"]["instanceOperationState"]>
  composites: {}
}

export type InstanceOperationStateGetPayload<S extends boolean | null | undefined | InstanceOperationStateDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$InstanceOperationStatePayload, S>

export type InstanceOperationStateCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<InstanceOperationStateFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: InstanceOperationStateCountAggregateInputType | true
  }

export interface InstanceOperationStateDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['InstanceOperationState'], meta: { name: 'InstanceOperationState' } }
  /**
   * Find zero or one InstanceOperationState that matches the filter.
   * @param {InstanceOperationStateFindUniqueArgs} args - Arguments to find a InstanceOperationState
   * @example
   * // Get one InstanceOperationState
   * const instanceOperationState = await prisma.instanceOperationState.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends InstanceOperationStateFindUniqueArgs>(args: Prisma.SelectSubset<T, InstanceOperationStateFindUniqueArgs<ExtArgs>>): Prisma.Prisma__InstanceOperationStateClient<runtime.Types.Result.GetResult<Prisma.$InstanceOperationStatePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one InstanceOperationState that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {InstanceOperationStateFindUniqueOrThrowArgs} args - Arguments to find a InstanceOperationState
   * @example
   * // Get one InstanceOperationState
   * const instanceOperationState = await prisma.instanceOperationState.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends InstanceOperationStateFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, InstanceOperationStateFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__InstanceOperationStateClient<runtime.Types.Result.GetResult<Prisma.$InstanceOperationStatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first InstanceOperationState that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InstanceOperationStateFindFirstArgs} args - Arguments to find a InstanceOperationState
   * @example
   * // Get one InstanceOperationState
   * const instanceOperationState = await prisma.instanceOperationState.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends InstanceOperationStateFindFirstArgs>(args?: Prisma.SelectSubset<T, InstanceOperationStateFindFirstArgs<ExtArgs>>): Prisma.Prisma__InstanceOperationStateClient<runtime.Types.Result.GetResult<Prisma.$InstanceOperationStatePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first InstanceOperationState that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InstanceOperationStateFindFirstOrThrowArgs} args - Arguments to find a InstanceOperationState
   * @example
   * // Get one InstanceOperationState
   * const instanceOperationState = await prisma.instanceOperationState.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends InstanceOperationStateFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, InstanceOperationStateFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__InstanceOperationStateClient<runtime.Types.Result.GetResult<Prisma.$InstanceOperationStatePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more InstanceOperationStates that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InstanceOperationStateFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all InstanceOperationStates
   * const instanceOperationStates = await prisma.instanceOperationState.findMany()
   * 
   * // Get first 10 InstanceOperationStates
   * const instanceOperationStates = await prisma.instanceOperationState.findMany({ take: 10 })
   * 
   * // Only select the `operationId`
   * const instanceOperationStateWithOperationIdOnly = await prisma.instanceOperationState.findMany({ select: { operationId: true } })
   * 
   */
  findMany<T extends InstanceOperationStateFindManyArgs>(args?: Prisma.SelectSubset<T, InstanceOperationStateFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$InstanceOperationStatePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a InstanceOperationState.
   * @param {InstanceOperationStateCreateArgs} args - Arguments to create a InstanceOperationState.
   * @example
   * // Create one InstanceOperationState
   * const InstanceOperationState = await prisma.instanceOperationState.create({
   *   data: {
   *     // ... data to create a InstanceOperationState
   *   }
   * })
   * 
   */
  create<T extends InstanceOperationStateCreateArgs>(args: Prisma.SelectSubset<T, InstanceOperationStateCreateArgs<ExtArgs>>): Prisma.Prisma__InstanceOperationStateClient<runtime.Types.Result.GetResult<Prisma.$InstanceOperationStatePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many InstanceOperationStates.
   * @param {InstanceOperationStateCreateManyArgs} args - Arguments to create many InstanceOperationStates.
   * @example
   * // Create many InstanceOperationStates
   * const instanceOperationState = await prisma.instanceOperationState.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends InstanceOperationStateCreateManyArgs>(args?: Prisma.SelectSubset<T, InstanceOperationStateCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many InstanceOperationStates and returns the data saved in the database.
   * @param {InstanceOperationStateCreateManyAndReturnArgs} args - Arguments to create many InstanceOperationStates.
   * @example
   * // Create many InstanceOperationStates
   * const instanceOperationState = await prisma.instanceOperationState.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many InstanceOperationStates and only return the `operationId`
   * const instanceOperationStateWithOperationIdOnly = await prisma.instanceOperationState.createManyAndReturn({
   *   select: { operationId: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends InstanceOperationStateCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, InstanceOperationStateCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$InstanceOperationStatePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a InstanceOperationState.
   * @param {InstanceOperationStateDeleteArgs} args - Arguments to delete one InstanceOperationState.
   * @example
   * // Delete one InstanceOperationState
   * const InstanceOperationState = await prisma.instanceOperationState.delete({
   *   where: {
   *     // ... filter to delete one InstanceOperationState
   *   }
   * })
   * 
   */
  delete<T extends InstanceOperationStateDeleteArgs>(args: Prisma.SelectSubset<T, InstanceOperationStateDeleteArgs<ExtArgs>>): Prisma.Prisma__InstanceOperationStateClient<runtime.Types.Result.GetResult<Prisma.$InstanceOperationStatePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one InstanceOperationState.
   * @param {InstanceOperationStateUpdateArgs} args - Arguments to update one InstanceOperationState.
   * @example
   * // Update one InstanceOperationState
   * const instanceOperationState = await prisma.instanceOperationState.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends InstanceOperationStateUpdateArgs>(args: Prisma.SelectSubset<T, InstanceOperationStateUpdateArgs<ExtArgs>>): Prisma.Prisma__InstanceOperationStateClient<runtime.Types.Result.GetResult<Prisma.$InstanceOperationStatePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more InstanceOperationStates.
   * @param {InstanceOperationStateDeleteManyArgs} args - Arguments to filter InstanceOperationStates to delete.
   * @example
   * // Delete a few InstanceOperationStates
   * const { count } = await prisma.instanceOperationState.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends InstanceOperationStateDeleteManyArgs>(args?: Prisma.SelectSubset<T, InstanceOperationStateDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more InstanceOperationStates.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InstanceOperationStateUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many InstanceOperationStates
   * const instanceOperationState = await prisma.instanceOperationState.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends InstanceOperationStateUpdateManyArgs>(args: Prisma.SelectSubset<T, InstanceOperationStateUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more InstanceOperationStates and returns the data updated in the database.
   * @param {InstanceOperationStateUpdateManyAndReturnArgs} args - Arguments to update many InstanceOperationStates.
   * @example
   * // Update many InstanceOperationStates
   * const instanceOperationState = await prisma.instanceOperationState.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more InstanceOperationStates and only return the `operationId`
   * const instanceOperationStateWithOperationIdOnly = await prisma.instanceOperationState.updateManyAndReturn({
   *   select: { operationId: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends InstanceOperationStateUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, InstanceOperationStateUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$InstanceOperationStatePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one InstanceOperationState.
   * @param {InstanceOperationStateUpsertArgs} args - Arguments to update or create a InstanceOperationState.
   * @example
   * // Update or create a InstanceOperationState
   * const instanceOperationState = await prisma.instanceOperationState.upsert({
   *   create: {
   *     // ... data to create a InstanceOperationState
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the InstanceOperationState we want to update
   *   }
   * })
   */
  upsert<T extends InstanceOperationStateUpsertArgs>(args: Prisma.SelectSubset<T, InstanceOperationStateUpsertArgs<ExtArgs>>): Prisma.Prisma__InstanceOperationStateClient<runtime.Types.Result.GetResult<Prisma.$InstanceOperationStatePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of InstanceOperationStates.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InstanceOperationStateCountArgs} args - Arguments to filter InstanceOperationStates to count.
   * @example
   * // Count the number of InstanceOperationStates
   * const count = await prisma.instanceOperationState.count({
   *   where: {
   *     // ... the filter for the InstanceOperationStates we want to count
   *   }
   * })
  **/
  count<T extends InstanceOperationStateCountArgs>(
    args?: Prisma.Subset<T, InstanceOperationStateCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], InstanceOperationStateCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a InstanceOperationState.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InstanceOperationStateAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends InstanceOperationStateAggregateArgs>(args: Prisma.Subset<T, InstanceOperationStateAggregateArgs>): Prisma.PrismaPromise<GetInstanceOperationStateAggregateType<T>>

  /**
   * Group by InstanceOperationState.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InstanceOperationStateGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends InstanceOperationStateGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: InstanceOperationStateGroupByArgs['orderBy'] }
      : { orderBy?: InstanceOperationStateGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, InstanceOperationStateGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInstanceOperationStateGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the InstanceOperationState model
 */
readonly fields: InstanceOperationStateFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for InstanceOperationState.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__InstanceOperationStateClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  operation<T extends Prisma.OperationDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.OperationDefaultArgs<ExtArgs>>): Prisma.Prisma__OperationClient<runtime.Types.Result.GetResult<Prisma.$OperationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  state<T extends Prisma.InstanceStateDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.InstanceStateDefaultArgs<ExtArgs>>): Prisma.Prisma__InstanceStateClient<runtime.Types.Result.GetResult<Prisma.$InstanceStatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the InstanceOperationState model
 */
export interface InstanceOperationStateFieldRefs {
  readonly operationId: Prisma.FieldRef<"InstanceOperationState", 'String'>
  readonly stateId: Prisma.FieldRef<"InstanceOperationState", 'String'>
  readonly status: Prisma.FieldRef<"InstanceOperationState", 'InstanceOperationStatus'>
  readonly currentResourceCount: Prisma.FieldRef<"InstanceOperationState", 'Int'>
  readonly totalResourceCount: Prisma.FieldRef<"InstanceOperationState", 'Int'>
  readonly model: Prisma.FieldRef<"InstanceOperationState", 'Json'>
  readonly resolvedInputs: Prisma.FieldRef<"InstanceOperationState", 'Json'>
  readonly startedAt: Prisma.FieldRef<"InstanceOperationState", 'DateTime'>
  readonly finishedAt: Prisma.FieldRef<"InstanceOperationState", 'DateTime'>
}
    

// Custom InputTypes
/**
 * InstanceOperationState findUnique
 */
export type InstanceOperationStateFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InstanceOperationState
   */
  select?: Prisma.InstanceOperationStateSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InstanceOperationState
   */
  omit?: Prisma.InstanceOperationStateOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstanceOperationStateInclude<ExtArgs> | null
  /**
   * Filter, which InstanceOperationState to fetch.
   */
  where: Prisma.InstanceOperationStateWhereUniqueInput
}

/**
 * InstanceOperationState findUniqueOrThrow
 */
export type InstanceOperationStateFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InstanceOperationState
   */
  select?: Prisma.InstanceOperationStateSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InstanceOperationState
   */
  omit?: Prisma.InstanceOperationStateOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstanceOperationStateInclude<ExtArgs> | null
  /**
   * Filter, which InstanceOperationState to fetch.
   */
  where: Prisma.InstanceOperationStateWhereUniqueInput
}

/**
 * InstanceOperationState findFirst
 */
export type InstanceOperationStateFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InstanceOperationState
   */
  select?: Prisma.InstanceOperationStateSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InstanceOperationState
   */
  omit?: Prisma.InstanceOperationStateOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstanceOperationStateInclude<ExtArgs> | null
  /**
   * Filter, which InstanceOperationState to fetch.
   */
  where?: Prisma.InstanceOperationStateWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of InstanceOperationStates to fetch.
   */
  orderBy?: Prisma.InstanceOperationStateOrderByWithRelationInput | Prisma.InstanceOperationStateOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for InstanceOperationStates.
   */
  cursor?: Prisma.InstanceOperationStateWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` InstanceOperationStates from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` InstanceOperationStates.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of InstanceOperationStates.
   */
  distinct?: Prisma.InstanceOperationStateScalarFieldEnum | Prisma.InstanceOperationStateScalarFieldEnum[]
}

/**
 * InstanceOperationState findFirstOrThrow
 */
export type InstanceOperationStateFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InstanceOperationState
   */
  select?: Prisma.InstanceOperationStateSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InstanceOperationState
   */
  omit?: Prisma.InstanceOperationStateOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstanceOperationStateInclude<ExtArgs> | null
  /**
   * Filter, which InstanceOperationState to fetch.
   */
  where?: Prisma.InstanceOperationStateWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of InstanceOperationStates to fetch.
   */
  orderBy?: Prisma.InstanceOperationStateOrderByWithRelationInput | Prisma.InstanceOperationStateOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for InstanceOperationStates.
   */
  cursor?: Prisma.InstanceOperationStateWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` InstanceOperationStates from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` InstanceOperationStates.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of InstanceOperationStates.
   */
  distinct?: Prisma.InstanceOperationStateScalarFieldEnum | Prisma.InstanceOperationStateScalarFieldEnum[]
}

/**
 * InstanceOperationState findMany
 */
export type InstanceOperationStateFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InstanceOperationState
   */
  select?: Prisma.InstanceOperationStateSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InstanceOperationState
   */
  omit?: Prisma.InstanceOperationStateOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstanceOperationStateInclude<ExtArgs> | null
  /**
   * Filter, which InstanceOperationStates to fetch.
   */
  where?: Prisma.InstanceOperationStateWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of InstanceOperationStates to fetch.
   */
  orderBy?: Prisma.InstanceOperationStateOrderByWithRelationInput | Prisma.InstanceOperationStateOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing InstanceOperationStates.
   */
  cursor?: Prisma.InstanceOperationStateWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` InstanceOperationStates from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` InstanceOperationStates.
   */
  skip?: number
  distinct?: Prisma.InstanceOperationStateScalarFieldEnum | Prisma.InstanceOperationStateScalarFieldEnum[]
}

/**
 * InstanceOperationState create
 */
export type InstanceOperationStateCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InstanceOperationState
   */
  select?: Prisma.InstanceOperationStateSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InstanceOperationState
   */
  omit?: Prisma.InstanceOperationStateOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstanceOperationStateInclude<ExtArgs> | null
  /**
   * The data needed to create a InstanceOperationState.
   */
  data: Prisma.XOR<Prisma.InstanceOperationStateCreateInput, Prisma.InstanceOperationStateUncheckedCreateInput>
}

/**
 * InstanceOperationState createMany
 */
export type InstanceOperationStateCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many InstanceOperationStates.
   */
  data: Prisma.InstanceOperationStateCreateManyInput | Prisma.InstanceOperationStateCreateManyInput[]
}

/**
 * InstanceOperationState createManyAndReturn
 */
export type InstanceOperationStateCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InstanceOperationState
   */
  select?: Prisma.InstanceOperationStateSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the InstanceOperationState
   */
  omit?: Prisma.InstanceOperationStateOmit<ExtArgs> | null
  /**
   * The data used to create many InstanceOperationStates.
   */
  data: Prisma.InstanceOperationStateCreateManyInput | Prisma.InstanceOperationStateCreateManyInput[]
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstanceOperationStateIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * InstanceOperationState update
 */
export type InstanceOperationStateUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InstanceOperationState
   */
  select?: Prisma.InstanceOperationStateSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InstanceOperationState
   */
  omit?: Prisma.InstanceOperationStateOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstanceOperationStateInclude<ExtArgs> | null
  /**
   * The data needed to update a InstanceOperationState.
   */
  data: Prisma.XOR<Prisma.InstanceOperationStateUpdateInput, Prisma.InstanceOperationStateUncheckedUpdateInput>
  /**
   * Choose, which InstanceOperationState to update.
   */
  where: Prisma.InstanceOperationStateWhereUniqueInput
}

/**
 * InstanceOperationState updateMany
 */
export type InstanceOperationStateUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update InstanceOperationStates.
   */
  data: Prisma.XOR<Prisma.InstanceOperationStateUpdateManyMutationInput, Prisma.InstanceOperationStateUncheckedUpdateManyInput>
  /**
   * Filter which InstanceOperationStates to update
   */
  where?: Prisma.InstanceOperationStateWhereInput
  /**
   * Limit how many InstanceOperationStates to update.
   */
  limit?: number
}

/**
 * InstanceOperationState updateManyAndReturn
 */
export type InstanceOperationStateUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InstanceOperationState
   */
  select?: Prisma.InstanceOperationStateSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the InstanceOperationState
   */
  omit?: Prisma.InstanceOperationStateOmit<ExtArgs> | null
  /**
   * The data used to update InstanceOperationStates.
   */
  data: Prisma.XOR<Prisma.InstanceOperationStateUpdateManyMutationInput, Prisma.InstanceOperationStateUncheckedUpdateManyInput>
  /**
   * Filter which InstanceOperationStates to update
   */
  where?: Prisma.InstanceOperationStateWhereInput
  /**
   * Limit how many InstanceOperationStates to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstanceOperationStateIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * InstanceOperationState upsert
 */
export type InstanceOperationStateUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InstanceOperationState
   */
  select?: Prisma.InstanceOperationStateSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InstanceOperationState
   */
  omit?: Prisma.InstanceOperationStateOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstanceOperationStateInclude<ExtArgs> | null
  /**
   * The filter to search for the InstanceOperationState to update in case it exists.
   */
  where: Prisma.InstanceOperationStateWhereUniqueInput
  /**
   * In case the InstanceOperationState found by the `where` argument doesn't exist, create a new InstanceOperationState with this data.
   */
  create: Prisma.XOR<Prisma.InstanceOperationStateCreateInput, Prisma.InstanceOperationStateUncheckedCreateInput>
  /**
   * In case the InstanceOperationState was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.InstanceOperationStateUpdateInput, Prisma.InstanceOperationStateUncheckedUpdateInput>
}

/**
 * InstanceOperationState delete
 */
export type InstanceOperationStateDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InstanceOperationState
   */
  select?: Prisma.InstanceOperationStateSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InstanceOperationState
   */
  omit?: Prisma.InstanceOperationStateOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstanceOperationStateInclude<ExtArgs> | null
  /**
   * Filter which InstanceOperationState to delete.
   */
  where: Prisma.InstanceOperationStateWhereUniqueInput
}

/**
 * InstanceOperationState deleteMany
 */
export type InstanceOperationStateDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which InstanceOperationStates to delete
   */
  where?: Prisma.InstanceOperationStateWhereInput
  /**
   * Limit how many InstanceOperationStates to delete.
   */
  limit?: number
}

/**
 * InstanceOperationState without action
 */
export type InstanceOperationStateDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InstanceOperationState
   */
  select?: Prisma.InstanceOperationStateSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InstanceOperationState
   */
  omit?: Prisma.InstanceOperationStateOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstanceOperationStateInclude<ExtArgs> | null
}
