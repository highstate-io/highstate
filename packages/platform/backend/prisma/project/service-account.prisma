/// The service account represents an identity for non-human actors in the system.
///
/// Service accounts are automatically created for workers and can be manually created
/// for external integrations. They define the access scope for resources like artifacts,
/// secrets, terminals, and pages. Multiple API keys can impersonate the same service account,
/// allowing different authentication tokens to share the same permissions.
model ServiceAccount {
    /// The CUIDv2 of the service account.
    id String @id @default(cuid(2))

    /// The metadata of the service account managed by the backend.
    ///
    /// [ServiceAccountMeta]
    meta Json

    /// The time when the service account was created.
    createdAt DateTime @default(now())

    /// The time when the service account was last updated.
    updatedAt DateTime @updatedAt

    /// The workers using this service account.
    workers Worker[]

    /// The artifacts used by this service account.
    artifacts Artifact[]

    /// The secrets owned by this service account.
    secrets Secret[]

    /// The terminals owned by this service account.
    terminals Terminal[]

    /// The pages owned by this service account.
    pages Page[]

    /// The instance custom statuses attached by this service account.
    customStatuses InstanceCustomStatus[]

    /// The API keys impersonating this service account.
    apiKeys ApiKey[]
}
