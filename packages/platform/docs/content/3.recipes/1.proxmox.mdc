---
title: Proxmox
description: Creating and managing virtual machines on Proxmox with Highstate.
navigation:
  icon: i-simple-icons-proxmox
---

## Proxmox, Proxmox, Proxmox!

Proxmox is a popular open-source virtualization platform that combines KVM and LXC.
Highstate makes it easy to manage Proxmox virtual machines through a visual interface.

This guide shows you how to connect to Proxmox, upload images, and create virtual machines.
We'll start simple and build up to more complex setups.

## Prerequisites

Before you start, you'll need:

- A running Proxmox server or cluster
- API credentials (username/password or API token)
- SSH access to the Proxmox host
- An ISO or cloud image to deploy VMs from (optional)

## Connecting to Proxmox

First, you need to establish a connection to your Proxmox server.
The connection component stores your credentials and provides them to other Proxmox components.

### Basic Connection

The simplest way to connect is with a username and password:

::snippet-preview{snippet="recipes/proxmox/basic-connection"}
::

API tokens are recommended over passwords.
You can create one in the Proxmox web UI under Datacenter â†’ API Tokens.
The token string must be in the format: `{username}@pam!{token_id}={token_secret}`.

### Connection with SSH Access

If you add SSH credentials, you can access the Proxmox host terminal directly from Highstate:

::snippet-preview{snippet="recipes/proxmox/connection-with-ssh"}
::

Most of Highstate's Proxmox components require SSH access, so it's a good idea to set this up.

## Understanding Distributions

In Highstate, distributions are components that provide OS images and configuration.
They're not just download links - they include cloud-init configs, proper image formats, and checksums.

Think of them as smart image providers.
The `distributions.ubuntu` component knows where to get Ubuntu cloud images, how to configure them, and what cloud-init settings work best.
You don't need to hunt for URLs or figure out cloud-init syntax.

## Uploading Images

Before creating VMs, you need images to install from.
Proxmox supports ISO files and cloud images (qcow2, raw, etc.).

### Cloud Images with Distributions

The easiest way to get started is using distribution components:

::snippet-preview{snippet="recipes/proxmox/ubuntu-image"}
::

The distribution provides two key outputs:
- `image`: The OS image file (URL, checksum, format)
- `cloudConfig`: Pre-configured cloud-init that sets up the OS properly

Highstate automatically uploads the image to your Proxmox storage.

### Custom Images

You can also upload custom images from URLs:

::snippet-preview{snippet="recipes/proxmox/custom-image"}
::

### Using Existing Images

If you already have images on your Proxmox server, reference them directly:

::snippet-preview{snippet="recipes/proxmox/existing-image"}
::

## Creating Virtual Machines

Now for the fun part - creating VMs!
Highstate handles all the Proxmox API calls and cloud-init configuration.

### Basic VM with DHCP

The simplest VM uses DHCP for networking:

::snippet-preview{snippet="recipes/proxmox/basic-vm"}
::

This creates a small VM with 1 CPU core, 512MB RAM, and 8GB disk.
Perfect for testing or lightweight services.

### VM with Static IP

Static IPs are recommended for services that need consistent addresses:

::snippet-preview{snippet="recipes/proxmox/vm-static-ip"}
::

### Custom Resources

Need more power?
Adjust the resources:

::snippet-preview{snippet="recipes/proxmox/vm-custom-resources"}
::

For now, you can only set CPU cores, RAM, and disk size.

## Kubernetes on Proxmox

Want to run Kubernetes?
Here's how to create a k3s cluster on Proxmox VMs:

::snippet-preview{snippet="recipes/proxmox/k3s-cluster" height="1000px"}
::

This creates:

1. Three VMs with static IPs
2. A k3s cluster using those VMs
3. MariaDB running on the cluster

The beauty is that it's all connected visually.
Change the VM resources?
The cluster automatically uses the updated VMs.
